Only in .: a.diff
Only in .: boundary.F90.bak
diff ./clock0f.c /work1/jjr/wangty/zhangh/CAS_ESM/scripts/wtytest6/SourceMods/src.pop2/./clock0f.c
1,72c1,72
< /*  CVS: $Id: clock0f.c,v 1.4 2003/08/12 09:06:39 lhl Exp $
< */
< /*
< C#######################################################################
< C PSTSWM Version 4.0 (12/1/94)                                         #
< C  A message-passing benchmark code and parallel algorithm testbed     #
< C  that solves the nonlinear shallow water equations using the spectral#
< C  transform method.                                                   #
< C Written by:                                                          #
< C  Patrick Worley of Oak Ridge National Laboratory                     #
< C  Ian Foster of Argonne National Laboratory                           #
< C Based on the sequential code STSWM 2.0 by James Hack and Ruediger    #
< C  Jakob of the National Center for Atmospheric Research.              #
< C Research and development funded by the Computer Hardware, Advanced   #
< C  Mathematics, and Model Physics (CHAMMP) program of the U.S.         #
< C  Department of Energy.                                               # 
< C                                                                      #
< C Questions and comments should be directed to worley@msr.epm.ornl.gov #
< C Please notify and acknowledge the authors in any research or         #
< C publications utilizing PSTSWM or any part of the code.               #
< C                                                                      #
< C NOTICE: Neither the institutions nor the authors make any            #
< C representations about the suitability of this software for any       #
< C purpose. This software is provided "as is", without express or       #
< C implied warranty.                                                    #
< C#######################################################################
< */
< #include <sys/time.h>
< 
< double clock0f()
< {
<   double t;
<   struct timeval tp;
< 
<   gettimeofday(&tp, 0);
<   t = tp.tv_sec + 0.000001*tp.tv_usec;
<   return(t);
< 
< }
< 
< double CLOCK0F()
< {
<   double t;
<   struct timeval tp;
< 
<   gettimeofday(&tp, 0);
<   t = tp.tv_sec + 0.000001*tp.tv_usec;
<   return(t);
< 
< }
< 
< double clock0f_()
< {
<   double t;
<   struct timeval tp;
< 
<   gettimeofday(&tp, 0);
<   t = tp.tv_sec + 0.000001*tp.tv_usec;
<   return(t);
< 
< }
< 
< double _clock0f()
< {
<   double t;
<   struct timeval tp;
< 
<   gettimeofday(&tp, 0);
<   t = tp.tv_sec + 0.000001*tp.tv_usec;
<   return(t);
< 
< }
---
> /*  CVS: $Id: clock0f.c,v 1.4 2003/08/12 09:06:39 lhl Exp $
> */
> /*
> C#######################################################################
> C PSTSWM Version 4.0 (12/1/94)                                         #
> C  A message-passing benchmark code and parallel algorithm testbed     #
> C  that solves the nonlinear shallow water equations using the spectral#
> C  transform method.                                                   #
> C Written by:                                                          #
> C  Patrick Worley of Oak Ridge National Laboratory                     #
> C  Ian Foster of Argonne National Laboratory                           #
> C Based on the sequential code STSWM 2.0 by James Hack and Ruediger    #
> C  Jakob of the National Center for Atmospheric Research.              #
> C Research and development funded by the Computer Hardware, Advanced   #
> C  Mathematics, and Model Physics (CHAMMP) program of the U.S.         #
> C  Department of Energy.                                               # 
> C                                                                      #
> C Questions and comments should be directed to worley@msr.epm.ornl.gov #
> C Please notify and acknowledge the authors in any research or         #
> C publications utilizing PSTSWM or any part of the code.               #
> C                                                                      #
> C NOTICE: Neither the institutions nor the authors make any            #
> C representations about the suitability of this software for any       #
> C purpose. This software is provided "as is", without express or       #
> C implied warranty.                                                    #
> C#######################################################################
> */
> #include <sys/time.h>
> 
> double clock0f()
> {
>   double t;
>   struct timeval tp;
> 
>   gettimeofday(&tp, 0);
>   t = tp.tv_sec + 0.000001*tp.tv_usec;
>   return(t);
> 
> }
> 
> double CLOCK0F()
> {
>   double t;
>   struct timeval tp;
> 
>   gettimeofday(&tp, 0);
>   t = tp.tv_sec + 0.000001*tp.tv_usec;
>   return(t);
> 
> }
> 
> double clock0f_()
> {
>   double t;
>   struct timeval tp;
> 
>   gettimeofday(&tp, 0);
>   t = tp.tv_sec + 0.000001*tp.tv_usec;
>   return(t);
> 
> }
> 
> double _clock0f()
> {
>   double t;
>   struct timeval tp;
> 
>   gettimeofday(&tp, 0);
>   t = tp.tv_sec + 0.000001*tp.tv_usec;
>   return(t);
> 
> }
Only in /work1/jjr/wangty/zhangh/CAS_ESM/scripts/wtytest6/SourceMods/src.pop2/.: def-undef.h
Only in .: def-undef.h.bak
diff ./exchange.F90 /work1/jjr/wangty/zhangh/CAS_ESM/scripts/wtytest6/SourceMods/src.pop2/./exchange.F90
351a352
> !jjr
355,356c356,357
<             bbb(k,j)=aa(2,k,j)                 !wangty
<             ccc(k,j)=aa(imt-1,k,j)             !wangty
---
>             bbb(k,j)=aa(2,k,j)!wangty
>             ccc(k,j)=aa(imt-1,k,j)!wangty
Only in .: exchange.F90.bak
diff ./flux_cpl.F90 /work1/jjr/wangty/zhangh/CAS_ESM/scripts/wtytest6/SourceMods/src.pop2/./flux_cpl.F90
32,36c32,38
< !wangty
<            q=0. !LPF20130919
<            dhdx=0.
<            dhdy=0.
< !wangty
---
> !
>  !jjr
>         dhdx=0.
>         dhdy=0.
>         q=0.
> !jjr
> 
diff ./grids.F90 /work1/jjr/wangty/zhangh/CAS_ESM/scripts/wtytest6/SourceMods/src.pop2/./grids.F90
123d122
<       write(6,*)"It's OK!1"
213d211
< !      write(6,*)"It's OK!2"
268d265
<       write(6,*)"It's OK!2"
303d299
< !      write(6,*)"It's OK!2"
406c402
< !      write(6,*)"It's OK!3"
---
> 
652c648
< !      write(6,*)"It's OK!4"
---
> 
977c973
< !      write(6,*)"It's OK!5"
---
> 
1233c1229
< !      write(6,*)"It's OK!6"
---
> 
diff ./isoadv.F90 /work1/jjr/wangty/zhangh/CAS_ESM/scripts/wtytest6/SourceMods/src.pop2/./isoadv.F90
141c141
<       call exchange_3d_iso(adv_vntiso,km,1,1)!wangty bug
---
>       call exchange_3d_iso(adv_vetiso,km,1,1)!wangty bug
194c194
<       call exchange_3d_iso(adv_vntiso,km+1,1,0)
---
>       call exchange_3d_iso(adv_vbtiso,km+1,1,0)
Only in .: isoadv.F90.bak
Only in .: isoflux.F90.bak
Only in .: licomcpl7.F90.bak
diff ./local_to_global.F90 /work1/jjr/wangty/zhangh/CAS_ESM/scripts/wtytest6/SourceMods/src.pop2/./local_to_global.F90
305c305
< !           do j=1,jmt
---
> !            do j=1,jmt
307c307
< !wangty
---
> !wangty     
309a310
> !wangty
Only in .: local_to_global.F90.bak
diff ./post_cpl.F90 /work1/jjr/wangty/zhangh/CAS_ESM/scripts/wtytest6/SourceMods/src.pop2/./post_cpl.F90
44a45
> 
54c55,57
< !wangty bug        
---
> !wangty bug
> 
>         
Only in .: post_cpl.F90.bak
diff ./tracer.F90 /work1/jjr/wangty/zhangh/CAS_ESM/scripts/wtytest6/SourceMods/src.pop2/./tracer.F90
1217c1217
< !wangty bug
---
> !wangty bug         
1241c1241
<  !wangty bug
---
> !wangty bug
1252,1255c1252,1256
< #ifdef SPMD
<        call exch_boundary(vtl(1,1,1),km)
< #endif
<                  
---
> !#ifdef SPMD
> !       call exch_boundary1(vtl(1,1,1),km)
> !#endif
> 
>                   
Only in .: tracer.F90.bak
