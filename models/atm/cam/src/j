chemistry/mozart/mo_aurora.F90:      use cam_history,  only : addfld, phys_decomp
chemistry/mozart/mo_aurora.F90:        call addfld( 'QSUM', '/s ', pver, 'I', 'total ion production', phys_decomp )
chemistry/mozart/mz_aerosols_intr.F90:    use cam_history,      only : addfld, add_default, phys_decomp
chemistry/mozart/mz_aerosols_intr.F90:          call addfld (trim(aer_wetdep_list(m))//'SFWET','kg/m2/s ',1,  'A','Wet deposition flux at surface',phys_decomp)
chemistry/mozart/mz_aerosols_intr.F90:          call addfld (trim(aer_wetdep_list(m))//'SFSIC','kg/m2/s ', &
chemistry/mozart/mz_aerosols_intr.F90:          call addfld (trim(aer_wetdep_list(m))//'SFSIS','kg/m2/s ', &
chemistry/mozart/mz_aerosols_intr.F90:          call addfld (trim(aer_wetdep_list(m))//'SFSBC','kg/m2/s ', &
chemistry/mozart/mz_aerosols_intr.F90:          call addfld (trim(aer_wetdep_list(m))//'SFSBS','kg/m2/s ', &
chemistry/mozart/mz_aerosols_intr.F90:          call addfld (trim(aer_wetdep_list(m))//'WET','kg/kg/s ',pver, 'A','wet deposition tendency',phys_decomp)
chemistry/mozart/mz_aerosols_intr.F90:          call addfld (trim(aer_wetdep_list(m))//'SIC','kg/kg/s ',pver, 'A', &
chemistry/mozart/mz_aerosols_intr.F90:          call addfld (trim(aer_wetdep_list(m))//'SIS','kg/kg/s ',pver, 'A', &
chemistry/mozart/mz_aerosols_intr.F90:          call addfld (trim(aer_wetdep_list(m))//'SBC','kg/kg/s ',pver, 'A', &
chemistry/mozart/mz_aerosols_intr.F90:          call addfld (trim(aer_wetdep_list(m))//'SBS','kg/kg/s ',pver, 'A', &
chemistry/mozart/mz_aerosols_intr.F90:          call addfld (trim(aer_drydep_list(m))//'DDF','kg/m2/s ',   1, 'A', &
chemistry/mozart/mz_aerosols_intr.F90:          call addfld (trim(aer_drydep_list(m))//'TBF','kg/m2/s ',   1, 'A', &
chemistry/mozart/mz_aerosols_intr.F90:          call addfld (trim(aer_drydep_list(m))//'GVF','kg/m2/s ',   1, 'A', &
chemistry/mozart/mz_aerosols_intr.F90:          call addfld (trim(aer_drydep_list(m))//'DTQ','kg/kg/s ',pver, 'A', &
chemistry/mozart/mz_aerosols_intr.F90:          call addfld (trim(aer_drydep_list(m))//'DDV','m/s     ',pver, 'A', &
chemistry/mozart/mo_setext.F90:    use cam_history,  only : addfld, phys_decomp
chemistry/mozart/mo_setext.F90:    call addfld( 'NO_Lightning','molec/cm3/s', pver, 'A', 'lightning NO source', phys_decomp )
chemistry/mozart/mo_setext.F90:    call addfld( 'NO_Aircraft', 'molec/cm3/s', pver, 'A', 'aircraft NO source',  phys_decomp )
chemistry/mozart/mo_setext.F90:    call addfld( 'CO_Aircraft', 'molec/cm3/s', pver, 'A', 'aircraft CO source',  phys_decomp )
chemistry/mozart/mo_setext.F90:    call addfld( 'N4S_SPE', 'molec/cm3/s', pver, 'I', 'solar proton event N(4S) source',phys_decomp )
chemistry/mozart/mo_setext.F90:    call addfld( 'N2D_SPE', 'molec/cm3/s', pver, 'I', 'solar proton event N(2S) source',phys_decomp )
chemistry/mozart/mo_setext.F90:    call addfld( 'OH_SPE',  'molec/cm3/s', pver, 'I', 'solar proton event HOx source',  phys_decomp )
chemistry/mozart/mo_setext.F90:       call addfld( 'P_Op', '/s ', pver, 'I', 'production o+', phys_decomp )
chemistry/mozart/mo_setext.F90:       call addfld( 'P_O2p', '/s ', pver, 'I', 'production o2+', phys_decomp )
chemistry/mozart/mo_setext.F90:       call addfld( 'P_N2p', '/s ', pver, 'I', 'production n2+', phys_decomp )
chemistry/mozart/mo_setext.F90:       call addfld( 'P_Np', '/s ', pver, 'I', 'production n+', phys_decomp )
chemistry/mozart/mo_setext.F90:       call addfld( 'P_IONS', '/s ', pver, 'I', 'total ion production', phys_decomp )
chemistry/mozart/mo_lightning.F90:    use cam_history,   only : addfld, phys_decomp
chemistry/mozart/mo_lightning.F90:    call addfld( 'LNO_COL_PROD','TG N/YR', 1,    'I', 'lighting column NO source', phys_decomp )
chemistry/mozart/mo_lightning.F90:    call addfld( 'LNO_PROD',    '/cm3/s',  pver, 'I', 'lighting insitu NO source', phys_decomp )
chemistry/mozart/mo_lightning.F90:    call addfld( 'FLASHFRQ',    '1/MIN',   1,    'I', 'lighting flash rate', phys_decomp )        ! flash frequency in grid box per minute (PPP)
chemistry/mozart/mo_lightning.F90:    call addfld( 'FLASHENGY',   '   ',     1,    'I', 'lighting flash rate', phys_decomp )        ! flash frequency in grid box per minute (PPP)
chemistry/mozart/mo_lightning.F90:    call addfld( 'CLDHGT',      'KM',      1,    'I', 'cloud top height', phys_decomp )           ! cloud top height
chemistry/mozart/mo_lightning.F90:    call addfld( 'DCHGZONE',    'KM',      1,    'I', 'depth of discharge zone', phys_decomp )           ! depth of discharge zone
chemistry/mozart/mo_lightning.F90:    call addfld( 'CGIC',        'RATIO',   1,    'I', 'ratio of cloud-ground/intracloud discharges', phys_decomp )        ! ratio of cloud-ground/intracloud discharges
chemistry/mozart/exbdrift.F90:   use cam_history,  only: addfld, phys_decomp, add_default ! for history saves
chemistry/mozart/exbdrift.F90:   call addfld('UE      ','m/s     ',1,'I', 'Zonal ExB drift',phys_decomp)
chemistry/mozart/exbdrift.F90:   call addfld('VE      ','m/s     ',1,'I', 'Meridional ExB drift',phys_decomp)
chemistry/mozart/exbdrift.F90:!  call addfld('WE      ','m/s     ',1,'I', 'Vertical ExB drift',phys_decomp)
chemistry/mozart/exbdrift.F90:!  call addfld('MLT     ','hrs     ',1,'I', 'mag.local time',phys_decomp)
chemistry/mozart/exbdrift.F90:!  call addfld('EF_EAST ','V/m     ',1,'I', 'eastward electric field',phys_decomp)
chemistry/mozart/exbdrift.F90:!  call addfld('EF_WEST ','V/m     ',1,'I', 'northward electric field',phys_decomp)
chemistry/mozart/exbdrift.F90:!  call addfld('EF_UP   ','V/m     ',1,'I', 'upward electric field',phys_decomp)
chemistry/mozart/exbdrift.F90:!  call addfld('EF1_MAP ','V/m     ',1,'I', 'map. mag. eastward ef',phys_decomp)
chemistry/mozart/exbdrift.F90:!  call addfld('EF2_MAP ','V/m     ',1,'I', 'map. mag. northward ef',phys_decomp)
chemistry/mozart/exbdrift.F90:   call addfld('EPOTEN  ','V       ',1,'I', 'Electric Potential',phys_decomp)
chemistry/mozart/lin_strat_chem.F90:    use cam_history,  only : addfld, phys_decomp, add_default
chemistry/mozart/lin_strat_chem.F90:    call addfld( 'LINOZ_DO3'    , '/s'     , pver, 'A', 'ozone vmr tendency by linearized ozone chemistry'  , phys_decomp )
chemistry/mozart/lin_strat_chem.F90:    call addfld( 'LINOZ_DO3_PSC', '/s'     , pver, 'A', 'ozone vmr loss by PSCs using Carille et al. (1990)', phys_decomp )
chemistry/mozart/lin_strat_chem.F90:    call addfld( 'LINOZ_SSO3'   , 'kg'     , pver, 'A', 'steady state ozone in LINOZ'                       , phys_decomp )
chemistry/mozart/lin_strat_chem.F90:    call addfld( 'LINOZ_O3COL'  , 'DU'     , pver, 'A', 'ozone column above'                                , phys_decomp )
chemistry/mozart/lin_strat_chem.F90:    call addfld( 'LINOZ_O3CLIM' , 'mol/mol', pver, 'A', 'climatology of ozone in LINOZ'                     , phys_decomp )
chemistry/mozart/lin_strat_chem.F90:    call addfld( 'LINOZ_SZA'    , 'degrees',    1, 'A', 'solar zenith angle in LINOZ'                       , phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    use cam_history,       only : addfld,phys_decomp
chemistry/mozart/mo_gas_phase_chemdr.F90:          call addfld (sflxnam(n),  'kg/m2/s ',1,    'A',trim(solsym(m))//' surface flux',phys_decomp)
chemistry/mozart/mo_gas_phase_chemdr.F90:       call addfld( 'GS_'//trim(solsym(m)), 'kg/m2/s ',1,  'A', &
chemistry/mozart/mo_gas_phase_chemdr.F90:       call addfld( 'AQ_'//trim(solsym(m)), 'kg/m2/s ',1,  'A', &
chemistry/mozart/mo_gas_phase_chemdr.F90:       call addfld( extfrc_name(m), ' ', pver, 'I', 'ext frcing', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:          call addfld( tag_names(n), '/s ', pver, 'I', 'photolysis rate', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:          call addfld( tag_names(n), '/cm3/s ', pver, 'I', 'reaction rate', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:       call addfld( pht_names(n), '/s ', pver, 'I', 'photolysis rate', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:       call addfld( rxn_names(n), '/cm3/s ', pver, 'I', 'reaction rate', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'DTCBS',   ' ',  1, 'I','photolysis diagnostic black carbon OD', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'DTOCS',   ' ',  1, 'I','photolysis diagnostic organic carbon OD', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'DTSO4',   ' ',  1, 'I','photolysis diagnostic SO4 OD', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'DTSOA',   ' ',  1, 'I','photolysis diagnostic SOA OD', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'DTANT',   ' ',  1, 'I','photolysis diagnostic NH4SO4 OD', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'DTSAL',   ' ',  1, 'I','photolysis diagnostic salt OD', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'DTDUST',  ' ',  1, 'I','photolysis diagnostic dust OD', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'DTTOTAL', ' ',  1, 'I','photolysis diagnostic total aerosol OD', phys_decomp )   
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'FRACDAY', ' ',  1, 'I','photolysis diagnostic fraction of day', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'QDSAD', '/s ', pver, 'I', 'water vapor sad delta', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'SAD', 'cm2/cm3 ', pver, 'I', 'sulfate aerosol SAD', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'SAD_SULFC', 'cm2/cm3 ', pver, 'I', 'chemical sulfate aerosol SAD', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'SAD_LNAT', 'cm2/cm3 ', pver, 'I', 'large-mode NAT aerosol SAD', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'SAD_ICE', 'cm2/cm3 ', pver, 'I', 'water-ice aerosol SAD', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'RAD_SULFC', 'cm ', pver, 'I', 'chemical sad sulfate', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'RAD_LNAT', 'cm ', pver, 'I', 'large nat radius', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'RAD_ICE', 'cm ', pver, 'I', 'sad ice', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'HNO3_STS', 'mol/mol', pver, 'I', 'STS condensed HNO3', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'HNO3_NAT', 'mol/mol', pver, 'I', 'NAT condensed HNO3', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'QDSETT', '/s ', pver, 'I', 'water vapor settling delta', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'QDCHEM', '/s ', pver, 'I', 'water vapor chemistry delta', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'HNO3_GAS', 'mol/mol', pver, 'I', 'gas-phase hno3', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'H2O_GAS', 'mol/mol', pver, 'I', 'gas-phase h2o', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:       call addfld( 'het1_total', '/s', pver, 'I', 'total N2O5 + H2O het rate constant', phys_decomp )
chemistry/mozart/mo_gas_phase_chemdr.F90:    call addfld( 'SZA', 'degrees', 1, 'I', 'solar zenith angle', phys_decomp )
chemistry/mozart/mo_cph.F90:          use cam_history,  only : addfld, phys_decomp
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH1',  'K/s ', pver, 'I', 'O + O3 -> 2*O2 + 93.46 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH2',  'K/s ', pver, 'I', 'O + O + M -> O2 + M + 119.12 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH3',  'K/s ', pver, 'I', 'O + OH -> H + O2 + 16.35 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH4',  'K/s ', pver, 'I', 'O + HO2 -> OH + O2 + 53.97 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH5',  'K/s ', pver, 'I', 'H + O2 + M -> HO2 + M + 48.8 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH6',  'K/s ', pver, 'I', 'O + O2 + M -> O3 + M + 25.66 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH7',  'K/s ', pver, 'I', 'H + O3 -> OH + O2 + 46.27 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH8',  'K/s ', pver, 'I', 'HO2 + NO -> NO2 + OH + 8.06 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH9',  'K/s ', pver, 'I', 'HO2 + O3 -> 2*O2 + OH + 28.31 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH10', 'K/s ', pver, 'I', 'HO2 + HO2 -> H2O2 + O2 + 39.08 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH11', 'K/s ', pver, 'I', 'OH + O3 -> HO2 + O2 + 39.49 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH12', 'K/s ', pver, 'I', 'NO + O3 -> NO2 + O2 + 47.55 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH13', 'K/s ', pver, 'I', 'NO2 + O -> NO + O2 + 45.91 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH14', 'K/s ', pver, 'I', 'OH + HO2 -> H2O + O2 + 69.99 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH15', 'K/s ', pver, 'I', 'H + HO2 -> H2 + O2 + 55.4 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH16', 'K/s ', pver, 'I', 'O1D + O2 -> O + O2_1S + 7.63 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH17', 'K/s ', pver, 'I', 'O1D + N2 -> O + N2 + 45.14 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH18', 'K/s ', pver, 'I', 'O2_1S + O -> O2_1D + O + 14.97 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH19', 'K/s ', pver, 'I', 'O2_1S + O2 -> O2_1D + O2 + 14.97 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH20', 'K/s ', pver, 'I', 'O2_1S + N2 -> O2_1D + N2 + 14.97 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH21', 'K/s ', pver, 'I', 'O2_1S + O3 -> O2_1D + O3 + 14.97 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH22', 'K/s ', pver, 'I', 'O2_1D + O -> O2 + O + 22.54 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH23', 'K/s ', pver, 'I', 'O2_1D + O2 -> 2*O2 + 22.54 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH24', 'K/s ', pver, 'I', 'O2_1D + N2 -> O2 + N2 + 22.54 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH25', 'K/s ', pver, 'I', 'N2D + O2 -> NO + O1D + 42.43 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH26', 'K/s ', pver, 'I', 'N2D + O -> N + O + 54.88 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH27', 'K/s ', pver, 'I', 'N + O2 -> NO + O + 32.28 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH28', 'K/s ', pver, 'I', 'N + NO -> N2 + O + 61.8 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH29', 'K/s ', pver, 'I', 'O1D + O2 -> O + O2 + 45.14 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH30', 'K/s ', pver, 'I', 'Op + O2 -> O2p + O + 35.878 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH31', 'K/s ', pver, 'I', 'Op + N2 -> NOp + N + 25.105 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH32', 'K/s ', pver, 'I', 'N2p + O -> NOp + N2D + 16.140 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH33', 'K/s ', pver, 'I', 'O2p + N -> NOp + O + 97.073 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH34', 'K/s ', pver, 'I', 'O2p + NO -> NOp + O2 + 64.862 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH35', 'K/s ', pver, 'I', 'Np + O2 -> O2p + N + 57.322 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH36', 'K/s ', pver, 'I', 'Np + O2 -> NOp + O + 154.46 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH37', 'K/s ', pver, 'I', 'Np + O -> Op + N + 22.597 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH38', 'K/s ', pver, 'I', 'N2p + O2 -> O2p + N2 + 81.164 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH39', 'K/s ', pver, 'I', 'NOp + e -> 19.691 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH40', 'K/s ', pver, 'I', 'O2p + e -> 121.65 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'CPH41', 'K/s ', pver, 'I', 'N2p + e -> 84.807 kcal/mol chem pot heating rate', phys_decomp )
chemistry/mozart/mo_cph.F90:          call addfld( 'QCP',   'K/s ', pver, 'I', 'chem pot heating rate', phys_decomp )
chemistry/mozart/mo_exp_sol.F90:    use cam_history, only : addfld, add_default, phys_decomp
chemistry/mozart/mo_exp_sol.F90:       call addfld( trim(solsym(j))//'_CHMP', '/cm3/s ', pver, 'I', 'chemical production rate', phys_decomp )
chemistry/mozart/mo_exp_sol.F90:       call addfld( trim(solsym(j))//'_CHML', '/cm3/s ', pver, 'I', 'chemical loss rate',       phys_decomp )
chemistry/mozart/mo_extfrc.F90:  use cam_history,  only : addfld, outfld, phys_decomp, add_default
chemistry/mozart/mo_extfrc.F90:          call addfld( trim(spc_name)//'_XFRC',  'molec/cm3/s', pver, 'A', &
chemistry/mozart/mo_extfrc.F90:          call addfld( trim(spc_name)//'_CLXF',  'molec/cm2/s', 1, 'A', &
chemistry/mozart/mo_chm_diags.F90:    use cam_history,  only : addfld, phys_decomp, add_default
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'NOX', 'mol/mol', pver, 'A', 'nox volume mixing ratio',  phys_decomp )
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'NOY', 'mol/mol', pver, 'A', 'noy volume mixing ratio',  phys_decomp )
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'BROX','mol/mol', pver, 'A', 'brox volume mixing ratio', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'BROY','mol/mol', pver, 'A', 'total inorganic bromine (Br+BrO+HOBr+BrONO2+HBr+BrCl)', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'CLOX','mol/mol', pver, 'A', 'clox volume mixing ratio', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'CLOY','mol/mol', pver, 'A', 'total inorganic chlorine (Cl+ClO+2Cl2+2Cl2O2+OClO+HOCl+ClONO2+HCl+BrCl)', &
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'TCLY','mol/mol', pver, 'A', 'total Cl volume mixing ratio', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'TOTH','mol/mol', pver, 'A', 'total H2 volume mixing ratio', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'NOY_mmr', 'kg/kg', pver, 'A', 'NOy mass mixing ratio', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'SOX_mmr', 'kg/kg', pver, 'A', 'SOx mass mixing ratio', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'NHX_mmr', 'kg/kg', pver, 'A', 'NHx mass mixing ratio', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:       call addfld( 'PION_EUV','/cm^3/s', pver, 'I', 'total euv ionization rate', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:       call addfld( 'PEUV1',   '/cm^3/s', pver, 'I', '(j1+j2+j3)*o', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:       call addfld( 'PEUV1e',  '/cm^3/s', pver, 'I', '(j14+j15+j16)*o', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:       call addfld( 'PEUV2',   '/cm^3/s', pver, 'I', 'j4*n', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:       call addfld( 'PEUV3',   '/cm^3/s', pver, 'I', '(j5+j7+j8+j9)*o2', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:       call addfld( 'PEUV3e',  '/cm^3/s', pver, 'I', '(j17+j19+j20+j21)*o2', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:       call addfld( 'PEUV4',   '/cm^3/s', pver, 'I', '(j10+j11)*n2', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:       call addfld( 'PEUV4e',  '/cm^3/s', pver, 'I', '(j22+j23)*n2', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:       call addfld( 'PEUVN2D', '/cm^3/s', pver, 'I', '(j11+j13)*n2', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:       call addfld( 'PEUVN2De','/cm^3/s', pver, 'I', '(j23+j25)*n2', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:       call addfld( 'PJNO', '/cm^3/s', pver, 'I', 'jno*no', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:       call addfld( 'PJNO_I', '/cm^3/s', pver, 'I', 'jno_i*no', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:       call addfld( depvel_name(m), 'cm/s ',   1,    'A', 'deposition velocity ', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:       call addfld( depflx_name(m), 'kg/m2/s', 1,    'A', 'dry deposition flux ', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:       call addfld( dtchem_name(m), 'kg/s ',   pver, 'A', 'net tendency from chem', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:       call addfld( spc_name, 'kg/kg ', pver, 'A', cnst_longname(n), phys_decomp)
chemistry/mozart/mo_chm_diags.F90:       call addfld( trim(spc_name)//'_SRF', 'kg/kg', 1, 'A', cnst_longname(n)//" in bottom layer", phys_decomp)
chemistry/mozart/mo_chm_diags.F90:         call addfld( cnst_name_cw(n), 'kg/kg ', pver, 'A', trim(cnst_name_cw(n))//' in cloud water',phys_decomp)
chemistry/mozart/mo_chm_diags.F90:         call addfld (trim(cnst_name_cw(n))//'SFWET','kg/m2/s ',1,  'A', &
chemistry/mozart/mo_chm_diags.F90:         call addfld (trim(cnst_name_cw(n))//'SFSIC','kg/m2/s ',1,  'A', &
chemistry/mozart/mo_chm_diags.F90:         call addfld (trim(cnst_name_cw(n))//'SFSIS','kg/m2/s ',1,  'A', &
chemistry/mozart/mo_chm_diags.F90:         call addfld (trim(cnst_name_cw(n))//'SFSBC','kg/m2/s ',1,  'A', &
chemistry/mozart/mo_chm_diags.F90:         call addfld (trim(cnst_name_cw(n))//'SFSBS','kg/m2/s ',1,  'A', &
chemistry/mozart/mo_chm_diags.F90:         call addfld (trim(cnst_name_cw(n))//'DDF','kg/m2/s ',   1, 'A', &
chemistry/mozart/mo_chm_diags.F90:         call addfld (trim(cnst_name_cw(n))//'TBF','kg/m2/s ',   1, 'A', &
chemistry/mozart/mo_chm_diags.F90:         call addfld (trim(cnst_name_cw(n))//'GVF','kg/m2/s ',   1, 'A', &
chemistry/mozart/mo_chm_diags.F90:             call addfld( spc_name, 'kg/kg ',   pver, 'A', trim(attr)//' concentration', phys_decomp)
chemistry/mozart/mo_chm_diags.F90:          call addfld( trim(spc_name)//'_SRF', 'kg/kg', 1, 'A', trim(attr)//" in bottom layer", phys_decomp)
chemistry/mozart/mo_chm_diags.F90:          call addfld( spc_name, 'mol/mol ', pver, 'A', trim(attr)//' concentration', phys_decomp)
chemistry/mozart/mo_chm_diags.F90:          call addfld( trim(spc_name)//'_SRF', 'mol/mol ', 1, 'A', trim(attr)//" in bottom layer", phys_decomp)
chemistry/mozart/mo_chm_diags.F90:       call addfld( wetdep_name(m), 'kg/s ',   1,    'A', trim(het_lst(m))//' wet deposition', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:       call addfld( wtrate_name(m),   '/s ',   pver, 'A', trim(het_lst(m))//' wet deposition rate', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'MASS', 'kg', pver, 'A', 'mass of grid box', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'AREA', 'm2', 1,    'A', 'area of grid box', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'WD_NOY', 'kg/s', 1, 'A', 'NOy wet deposition', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'DF_NOY', 'kg/m2/s', 1, 'I', 'NOy dry deposition flux ', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'WD_SOX', 'kg/s', 1, 'A', 'SOx wet deposition', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'DF_SOX', 'kg/m2/s', 1, 'I', 'SOx dry deposition flux ', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'WD_NHX', 'kg/s', 1, 'A', 'NHx wet deposition', phys_decomp )
chemistry/mozart/mo_chm_diags.F90:    call addfld( 'DF_NHX', 'kg/m2/s', 1, 'I', 'NHx dry deposition flux ', phys_decomp )
chemistry/mozart/tracer_cnst.F90:    use cam_history, only : addfld, phys_decomp
chemistry/mozart/tracer_cnst.F90:       call addfld(trim(fields(i)%fldnam),'mol/mol ', pver, &
chemistry/mozart/cfc11star.F90:    use cam_history,  only : addfld, phys_decomp
chemistry/mozart/cfc11star.F90:    call addfld(pbufname,'kg/kg',pver,'A','cfc11star for radiation', phys_decomp )
chemistry/mozart/mo_setinv.F90:  use cam_history,  only : addfld, add_default, phys_decomp, outfld
chemistry/mozart/mo_setinv.F90:      call addfld( trim(inv_lst(i))//'_dens', 'molecules/cm3', pver,'A', 'invariant density', phys_decomp )
chemistry/mozart/mo_setinv.F90:      !call addfld( trim(inv_lst(i))//'_mmr', 'kg/kg', pver,'A', 'invariant density', phys_decomp )
chemistry/mozart/mo_setinv.F90:      call addfld( trim(inv_lst(i))//'_vmr', 'mole/mole', pver,'A', 'invariant density', phys_decomp )
chemistry/mozart/mo_tgcm_ubc.F90:        use cam_history,  only : addfld, phys_decomp
chemistry/mozart/mo_tgcm_ubc.F90:                 call addfld( ubc_name(ii), 'kg/kg', 1, 'I', 'upper boundary mmr', phys_decomp )
chemistry/mozart/mo_apex.F90:   use cam_history,     only: addfld, phys_decomp, add_default   ! for history saves
chemistry/mozart/mo_apex.F90:  call addfld('ALATM   ','RADIANS ',1,'I',&
chemistry/mozart/mo_apex.F90:  call addfld('ALONM   ','RADIANS ',1,'I',&
chemistry/mozart/mo_apex.F90:! call addfld('ALATM   ','RADIANS ',1,'A',&
chemistry/mozart/mo_apex.F90:! call addfld('ALONM   ','RADIANS ',1,'A',&
chemistry/mozart/mo_apex.F90:! call addfld('BNORTH  ','GAUSS',1,'I',&
chemistry/mozart/mo_apex.F90:! call addfld('BEAST   ','GAUSS',1,'I',&
chemistry/mozart/mo_apex.F90:! call addfld('BDOWN   ','GAUSS',1,'I',&
chemistry/mozart/mo_apex.F90:! call addfld('BMAG    ','GAUSS',1,'I',&
chemistry/mozart/linoz_data.F90:    use cam_history, only : addfld, phys_decomp
chemistry/mozart/linoz_data.F90:       call addfld(fld_names(i), fld_units(i), pver, 'I', 'linoz data', phys_decomp )
chemistry/mozart/mo_setsoa.F90:  use cam_history,  only : addfld, phys_decomp
chemistry/mozart/mo_setsoa.F90:  call addfld( 'SOA_PROD', 'kg/kg/s', pver, 'A', 'production of SOA', phys_decomp )
chemistry/mozart/tracer_srcs.F90:    use cam_history,  only : addfld, phys_decomp
chemistry/mozart/tracer_srcs.F90:       call addfld(trim(fields(i)%fldnam)//'_trsrc','/cm3/s ', pver, 'I', 'tracer source rate', phys_decomp )
chemistry/mozart/mo_airglow.F90:          use cam_history,  only : addfld, phys_decomp
chemistry/mozart/mo_airglow.F90:          call addfld( 'AG1',   'K/s ', pver, 'I', 'O2_1S -> O2 + 762nm airglow loss', phys_decomp )
chemistry/mozart/mo_airglow.F90:          call addfld( 'AG2',   'K/s ', pver, 'I', 'O2_1D -> O2 + 1.27 micron airglow loss', phys_decomp )
chemistry/mozart/mo_airglow.F90:          call addfld( 'AGTOT', 'K/s ', pver, 'I', 'airglow total loss', phys_decomp )
chemistry/mozart/mo_neu_wetdep.F90:  use cam_history,  only : addfld, add_default, phys_decomp
chemistry/mozart/mo_neu_wetdep.F90:    call addfld     ('DTWR_'//trim(gas_wetdep_list(m)),'mol/mol/s',pver, 'A','wet removal Neu scheme tendency',phys_decomp)
chemistry/mozart/mo_neu_wetdep.F90:    call addfld     ('QT_RAIN_HNO3','mol/mol/s',pver, 'A','wet removal Neu scheme rain tendency',phys_decomp)
chemistry/mozart/mo_neu_wetdep.F90:    call addfld     ('QT_RIME_HNO3','mol/mol/s',pver, 'A','wet removal Neu scheme rain tendency',phys_decomp)
chemistry/mozart/mo_neu_wetdep.F90:    call addfld     ('QT_WASH_HNO3','mol/mol/s',pver, 'A','wet removal Neu scheme rain tendency',phys_decomp)
chemistry/mozart/mo_neu_wetdep.F90:    call addfld     ('QT_EVAP_HNO3','mol/mol/s',pver, 'A','wet removal Neu scheme rain tendency',phys_decomp)
chemistry/mozart/mo_aero_settling.F90:          use cam_history,  only : addfld, phys_decomp
chemistry/mozart/mo_aero_settling.F90:          call addfld( 'VEL_NAT1', 'cm/s', pver, 'I', 'small nat settling velocity', phys_decomp )
chemistry/mozart/mo_aero_settling.F90:          call addfld( 'VEL_NAT2', 'cm/s', pver, 'I', 'large nat settling velocity', phys_decomp )
chemistry/mozart/mo_sad.F90:      use cam_history,  only : addfld, phys_decomp
chemistry/mozart/mo_sad.F90:      call addfld( 'SAD_SULFR', 'cm2/cm3 ', pver, 'I', 'radiative sulfate aerosol SAD',  phys_decomp )
chemistry/mozart/mo_sad.F90:      call addfld( 'RAD_SULFR', 'cm ',      pver, 'I', 'radiative sad sulfate',          phys_decomp )
chemistry/mozart/mo_sad.F90:      call addfld( 'H2SO4MMR',  'kg/kg',    pver, 'I', 'radiative sulfate aerosol mmr',  phys_decomp )
chemistry/mozart/mo_sad.F90:      call addfld( 'H2SO4M_R',  'ug/m3 ',   pver, 'I', 'radiative sulfate aerosol mass', phys_decomp )
chemistry/mozart/mo_sad.F90:      call addfld( 'H2SO4M_C',  'ug/m3 ',   pver, 'I', 'chemical sulfate aerosol mass',  phys_decomp )
chemistry/mozart/chemistry.F90:    use cam_history,         only : addfld, add_default, phys_decomp, fieldname_len
chemistry/mozart/chemistry.F90:    call addfld( 'HEIGHT', 'm', pverp,'A', 'geopotential height above surface at interfaces (m)', phys_decomp )
chemistry/mozart/chemistry.F90:    call addfld( 'CT_H2O_GHG','kg/kg/s ', pver, 'A', 'ghg-chem h2o source/sink', phys_decomp )
chemistry/mozart/chemistry.F90:       call addfld( srcnam(m), 'kg/kg/s ', pver, 'A', trim(spc_name)//' source/sink', phys_decomp )
chemistry/mozart/chemistry.F90:    if ( masterproc ) write(iulog,*) 'chem_init: addfld done'
chemistry/mozart/mo_waccm_hrates.F90:        use cam_history,  only : addfld, phys_decomp
chemistry/mozart/mo_waccm_hrates.F90:        call addfld( 'CPAIR', 'J/K/kg', pver, 'I', 'specific heat cap air', phys_decomp )
chemistry/mozart/mo_waccm_hrates.F90:        call addfld( 'QRS_AUR', 'K/s', pver, 'I', 'total auroral heating rate', phys_decomp )
chemistry/mozart/mo_waccm_hrates.F90:        call addfld( 'QRS_CO2NIR', 'K/s', pver, 'I', 'co2 nir heating rate', phys_decomp )
chemistry/mozart/mo_waccm_hrates.F90:        call addfld( 'QTHERMAL', 'K/s', pver, 'I', 'non-euv photolysis heating rate', phys_decomp )
chemistry/mozart/mo_waccm_hrates.F90:        call addfld( 'QRS_SO2A', 'K/s ', pver, 'I', trim(attr), phys_decomp )
chemistry/mozart/mo_waccm_hrates.F90:        call addfld( 'QRS_SO2B', 'K/s ', pver, 'I', trim(attr), phys_decomp )
chemistry/mozart/mo_waccm_hrates.F90:        call addfld( 'QRS_SO3A', 'K/s ', pver, 'I', trim(attr), phys_decomp )
chemistry/mozart/mo_waccm_hrates.F90:        call addfld( 'QRS_SO3B', 'K/s ', pver, 'I', trim(attr), phys_decomp )
chemistry/mozart/mo_waccm_hrates.F90:        call addfld( 'QRS_LO2B', 'K/s ', pver, 'I', trim(attr), phys_decomp )
chemistry/mozart/mo_waccm_hrates.F90:        call addfld( 'QRS_LO3A', 'K/s ', pver, 'I', trim(attr), phys_decomp )
chemistry/mozart/mo_waccm_hrates.F90:        call addfld( 'QRS_LO3B', 'K/s ', pver, 'I', trim(attr), phys_decomp )
chemistry/mozart/mo_waccm_hrates.F90:        call addfld( 'QRS_LO3',  'K/s ', pver, 'I', trim(attr), phys_decomp )
chemistry/mozart/mo_waccm_hrates.F90:        call addfld( 'QRS_EUV', 'K/s', pver, 'I', trim(attr), phys_decomp )
chemistry/mozart/mo_waccm_hrates.F90:        call addfld( 'JO2_EUV', '/s', pver, 'I', trim(attr), phys_decomp )
chemistry/mozart/mo_ghg_chem.F90:    use cam_history,  only : addfld, phys_decomp
chemistry/mozart/mo_ghg_chem.F90:    call addfld( 'GHG_CFC11_R', '1/sec', pver, 'I', 'prescribed cfc11 loss rate for ghg chem', phys_decomp )
chemistry/mozart/mo_ghg_chem.F90:    call addfld( 'GHG_CFC12_R', '1/sec', pver, 'I', 'prescribed cfc12 loss rate for ghg chem', phys_decomp )
chemistry/mozart/mo_ghg_chem.F90:    call addfld( 'GHG_N2O_R',   '1/sec', pver, 'I', 'prescribed n2o loss rate for ghg chem',   phys_decomp )
chemistry/mozart/mo_ghg_chem.F90:    call addfld( 'GHG_CH4_R',   '1/sec', pver, 'I', 'prescribed ch4 loss rate for ghg chem',   phys_decomp )
chemistry/mozart/mo_ghg_chem.F90:    call addfld( 'GHG_H2O_R',   '1/sec', pver, 'I', 'prescribed h2o loss rate for ghg chem',   phys_decomp )
chemistry/mozart/mo_aerosols.F90:    use cam_history,  only : addfld, phys_decomp
chemistry/mozart/mo_aerosols.F90:    call addfld ('TSO4_VMR', 'mol/mol',pver, 'A','total sulfate in mo_aerosols',phys_decomp)
chemistry/mozart/mo_aerosols.F90:    call addfld ('THNO3_VMR','mol/mol',pver, 'A','total nitric acid in mo_aerosols',phys_decomp)
chemistry/pp_waccm_mozart/mo_imp_sol.F90:    use cam_history, only : addfld, add_default, phys_decomp
chemistry/pp_waccm_mozart/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHMP', '/cm3/s ', pver, 'I', 'chemical production rate', phys_decomp )
chemistry/pp_waccm_mozart/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHML', '/cm3/s ', pver, 'I', 'chemical loss rate',       phys_decomp )
chemistry/pp_trop_bam/mo_imp_sol.F90:    use cam_history, only : addfld, add_default, phys_decomp
chemistry/pp_trop_bam/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHMP', '/cm3/s ', pver, 'I', 'chemical production rate', phys_decomp )
chemistry/pp_trop_bam/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHML', '/cm3/s ', pver, 'I', 'chemical loss rate',       phys_decomp )
chemistry/pp_waccm_mozart_v1/mo_imp_sol.F90:    use cam_history, only : addfld, add_default, phys_decomp
chemistry/pp_waccm_mozart_v1/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHMP', '/cm3/s ', pver, 'I', 'chemical production rate', phys_decomp )
chemistry/pp_waccm_mozart_v1/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHML', '/cm3/s ', pver, 'I', 'chemical loss rate',       phys_decomp )
chemistry/pp_waccm_mozart_v1/mo_sad.F90:      use cam_history,  only : addfld, phys_decomp
chemistry/pp_waccm_mozart_v1/mo_sad.F90:      call addfld( 'SAD_SULFR', 'cm2/cm3 ', pver, 'I', 'radiative sulfate aerosol SAD',  phys_decomp )
chemistry/pp_waccm_mozart_v1/mo_sad.F90:      call addfld( 'RAD_SULFR', 'cm ',      pver, 'I', 'radiative sad sulfate',          phys_decomp )
chemistry/pp_waccm_mozart_v1/mo_sad.F90:      call addfld( 'H2SO4MMR',  'kg/kg',    pver, 'I', 'radiative sulfate aerosol mmr',  phys_decomp )
chemistry/pp_waccm_mozart_v1/mo_sad.F90:      call addfld( 'H2SO4M_R',  'ug/m3 ',   pver, 'I', 'radiative sulfate aerosol mass', phys_decomp )
chemistry/pp_waccm_mozart_v1/mo_sad.F90:      call addfld( 'H2SO4M_C',  'ug/m3 ',   pver, 'I', 'chemical sulfate aerosol mass',  phys_decomp )
chemistry/pp_super_fast_llnl_mam3/mo_imp_sol.F90:    use cam_history, only : addfld, add_default, phys_decomp
chemistry/pp_super_fast_llnl_mam3/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHMP', '/cm3/s ', pver, 'I', 'chemical production rate', phys_decomp )
chemistry/pp_super_fast_llnl_mam3/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHML', '/cm3/s ', pver, 'I', 'chemical loss rate',       phys_decomp )
chemistry/pp_trop_ghg/mo_imp_sol.F90:    use cam_history, only : addfld, add_default, phys_decomp
chemistry/pp_trop_ghg/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHMP', '/cm3/s ', pver, 'I', 'chemical production rate', phys_decomp )
chemistry/pp_trop_ghg/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHML', '/cm3/s ', pver, 'I', 'chemical loss rate',       phys_decomp )
chemistry/pp_trop_mam7/mo_imp_sol.F90:    use cam_history, only : addfld, add_default, phys_decomp
chemistry/pp_trop_mam7/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHMP', '/cm3/s ', pver, 'I', 'chemical production rate', phys_decomp )
chemistry/pp_trop_mam7/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHML', '/cm3/s ', pver, 'I', 'chemical loss rate',       phys_decomp )
chemistry/pp_super_fast_llnl/mo_imp_sol.F90:    use cam_history, only : addfld, add_default, phys_decomp
chemistry/pp_super_fast_llnl/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHMP', '/cm3/s ', pver, 'I', 'chemical production rate', phys_decomp )
chemistry/pp_super_fast_llnl/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHML', '/cm3/s ', pver, 'I', 'chemical loss rate',       phys_decomp )
chemistry/pp_none/mo_imp_sol.F90:    use cam_history, only : addfld, add_default, phys_decomp
chemistry/pp_none/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHMP', '/cm3/s ', pver, 'I', 'chemical production rate', phys_decomp )
chemistry/pp_none/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHML', '/cm3/s ', pver, 'I', 'chemical loss rate',       phys_decomp )
chemistry/pp_none/chemistry.F90:    use cam_history,    only: addfld, add_default, phys_decomp
chemistry/pp_trop_strat_bam_v1/mo_imp_sol.F90:    use cam_history, only : addfld, add_default, phys_decomp
chemistry/pp_trop_strat_bam_v1/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHMP', '/cm3/s ', pver, 'I', 'chemical production rate', phys_decomp )
chemistry/pp_trop_strat_bam_v1/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHML', '/cm3/s ', pver, 'I', 'chemical loss rate',       phys_decomp )
chemistry/pp_trop_mam3/mo_imp_sol.F90:    use cam_history, only : addfld, add_default, phys_decomp
chemistry/pp_trop_mam3/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHMP', '/cm3/s ', pver, 'I', 'chemical production rate', phys_decomp )
chemistry/pp_trop_mam3/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHML', '/cm3/s ', pver, 'I', 'chemical loss rate',       phys_decomp )
chemistry/utils/prescribed_ozone.F90:    use cam_history, only : addfld, phys_decomp
chemistry/utils/prescribed_ozone.F90:    call addfld(ozone_name,'mol/mol ', pver, &
chemistry/utils/prescribed_volcaero.F90:    use cam_history, only : addfld, phys_decomp
chemistry/utils/prescribed_volcaero.F90:    call addfld(volcaero_name,'kg/kg', pver, 'I', 'prescribed volcanic aerosol dry mass mixing ratio', phys_decomp )
chemistry/utils/prescribed_volcaero.F90:    call addfld(volcrad_name,'m', pver, 'I', 'volcanic aerosol geometric-mean radius', phys_decomp )
chemistry/utils/prescribed_volcaero.F90:    call addfld(volcmass_name,'kg/m^2', pver, 'I', 'volcanic aerosol vertical mass path in layer', phys_decomp )
chemistry/utils/prescribed_volcaero.F90:    call addfld(volcmass_column_name,'kg/m^2', 1, 'I', 'volcanic aerosol column mass', phys_decomp )
chemistry/utils/prescribed_aero.F90:    use cam_history, only : addfld, phys_decomp
chemistry/utils/prescribed_aero.F90:       call addfld(aero_names(i),'kg/kg', pver, 'I', 'prescribed aero', phys_decomp )
chemistry/utils/prescribed_ghg.F90:    use cam_history, only : addfld, phys_decomp
chemistry/utils/prescribed_ghg.F90:       call addfld( fields(i)%fldnam,'kg/kg', pver, 'I', 'prescribed ghg', phys_decomp )
chemistry/utils/aircraft_emit.F90:    use cam_history,    only: addfld, phys_decomp, add_default
chemistry/utils/aircraft_emit.F90:          call addfld( trim(spc_name),  '1/s', pver, 'A', &
chemistry/utils/aerodep_flx.F90:    use cam_history, only : addfld, phys_decomp
chemistry/utils/aerodep_flx.F90:       call addfld(fields(i)%fldnam,'kg/m2/sec', 1, 'I', 'prescribed aero dep', phys_decomp )
chemistry/pp_waccm_ghg/mo_imp_sol.F90:    use cam_history, only : addfld, add_default, phys_decomp
chemistry/pp_waccm_ghg/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHMP', '/cm3/s ', pver, 'I', 'chemical production rate', phys_decomp )
chemistry/pp_waccm_ghg/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHML', '/cm3/s ', pver, 'I', 'chemical loss rate',       phys_decomp )
chemistry/pp_trop_mozart/mo_imp_sol.F90:    use cam_history, only : addfld, add_default, phys_decomp
chemistry/pp_trop_mozart/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHMP', '/cm3/s ', pver, 'I', 'chemical production rate', phys_decomp )
chemistry/pp_trop_mozart/mo_imp_sol.F90:       call addfld( trim(solsym(j))//'_CHML', '/cm3/s ', pver, 'I', 'chemical loss rate',       phys_decomp )
chemistry/modal_aero/modal_aero_coag.F90:	use cam_history,     only: addfld, add_default, fieldname_len, phys_decomp
chemistry/modal_aero/modal_aero_coag.F90:	    call addfld( fieldname, unit, 1, 'A', long_name, phys_decomp )
chemistry/modal_aero/modal_aero_coag.F90:		'modal_aero_coag_init addfld', fieldname, unit
chemistry/modal_aero/modal_aero_newnuc.F90:use cam_history,  only:  addfld, add_default, fieldname_len, phys_decomp
chemistry/modal_aero/modal_aero_newnuc.F90:	    call addfld( fieldname, unit, 1, 'A', long_name, phys_decomp )
chemistry/modal_aero/modal_aero_newnuc.F90:		'modal_aero_newnuc_init addfld', fieldname, unit
chemistry/modal_aero/modal_aero_initialize_data.F90:       use cam_history,           only: addfld, add_default, phys_decomp
chemistry/modal_aero/modal_aero_initialize_data.F90:          call addfld( &
chemistry/modal_aero/modal_aero_initialize_data.F90:          call addfld( &
chemistry/modal_aero/modal_aero_initialize_data.F90:          call addfld( &
chemistry/modal_aero/modal_aero_initialize_data.F90:             call addfld (&
chemistry/modal_aero/modal_aero_initialize_data.F90:             call addfld (&
chemistry/modal_aero/modal_aero_initialize_data.F90:       call addfld ('AQSO4_H2O2','kg/m2/s ',1,  'A', &
chemistry/modal_aero/modal_aero_initialize_data.F90:       call addfld ('AQSO4_O3','kg/m2/s ',1,  'A', &
chemistry/modal_aero/modal_aero_initialize_data.F90:       call addfld( 'XPH_LWC','kg/kg   ',pver, 'A', &
chemistry/modal_aero/modal_aero_gasaerexch.F90:use cam_history, only  :   addfld, add_default, fieldname_len, phys_decomp
chemistry/modal_aero/modal_aero_gasaerexch.F90:         call addfld( fieldname, unit, 1, 'A', long_name, phys_decomp )
chemistry/modal_aero/modal_aero_gasaerexch.F90:         if ( masterproc ) write(*,'(3(a,3x))') 'gasaerexch addfld', fieldname, unit
chemistry/modal_aero/modal_aero_gasaerexch.F90:         call addfld( fieldname, unit, 1, 'A', long_name, phys_decomp )
chemistry/modal_aero/modal_aero_gasaerexch.F90:         if ( masterproc ) write(*,'(3(a,3x))') 'gasaerexch addfld', fieldname, unit
chemistry/modal_aero/modal_aero_calcsize.F90:use cam_history,   only :   addfld, add_default, fieldname_len, phys_decomp
chemistry/modal_aero/modal_aero_calcsize.F90:            call addfld( fieldname, unit, 1, 'A', long_name, phys_decomp )
chemistry/modal_aero/modal_aero_calcsize.F90:            if ( masterproc ) write(*,'(2a)') 'calcsize addfld - ', fieldname
chemistry/modal_aero/modal_aero_calcsize.F90:            call addfld( fieldname, unit, 1, 'A', long_name, phys_decomp )
chemistry/modal_aero/modal_aero_calcsize.F90:            if ( masterproc ) write(*,'(2a)') 'calcsize addfld - ', fieldname
chemistry/modal_aero/modal_aero_calcsize.F90:            call addfld( fieldname, unit, 1, 'A', long_name, phys_decomp )
chemistry/modal_aero/modal_aero_calcsize.F90:            if ( masterproc ) write(*,'(2a)') 'calcsize addfld - ', fieldname
chemistry/modal_aero/modal_aero_calcsize.F90:            call addfld( fieldname, unit, 1, 'A', long_name, phys_decomp )
chemistry/modal_aero/modal_aero_calcsize.F90:            if ( masterproc ) write(*,'(2a)') 'calcsize addfld - ', fieldname
chemistry/modal_aero/modal_aero_calcsize.F90:            call addfld( fieldname, unit, 1, 'A', long_name, phys_decomp )
chemistry/modal_aero/modal_aero_calcsize.F90:            if ( masterproc ) write(*,'(2a)') 'calcsize addfld - ', fieldname
chemistry/modal_aero/modal_aero_calcsize.F90:            call addfld( fieldname, unit, 1, 'A', long_name, phys_decomp )
chemistry/modal_aero/modal_aero_calcsize.F90:            if ( masterproc ) write(*,'(2a)') 'calcsize addfld - ', fieldname
chemistry/bulk_aero/sulchem.F90:    use cam_history,    only: addfld, add_default, phys_decomp
chemistry/bulk_aero/sulchem.F90:    call addfld('DMSSNK  ','kg/kg/s' ,pver, 'A', 'DMSsink ',phys_decomp)
chemistry/bulk_aero/sulchem.F90:    call addfld('SO2SRCG ','kg/kg/s' ,pver, 'A', 'SO2 Src G   ',phys_decomp)
chemistry/bulk_aero/sulchem.F90:    call addfld('SO2SRCG2','kg/kg/s' ,pver, 'A', 'SO2 Src G2  ',phys_decomp)
chemistry/bulk_aero/sulchem.F90:    call addfld('SO4SRC  ','kg/kg/s' ,pver, 'A', 'SO4 Src Tot ',phys_decomp)
chemistry/bulk_aero/sulchem.F90:    call addfld('SO4SRCG ','kg/kg/s' ,pver, 'A', 'SO4 Src G   ',phys_decomp)
chemistry/bulk_aero/sulchem.F90:    call addfld('H2O2SRC ','kg/kg/s' ,pver, 'A', 'H2O2Src ',phys_decomp)
chemistry/bulk_aero/sulchem.F90:    call addfld('H2O2SNKA','kg/kg/s' ,pver, 'A', 'H2O2SnkA',phys_decomp)
chemistry/bulk_aero/sulchem.F90:    call addfld('H2O2SNKG','kg/kg/s' ,pver, 'A', 'H2O2SnkG',phys_decomp)
chemistry/bulk_aero/sulchem.F90:    call addfld ('PH','pH',pver, 'A','Cloud Water pH',phys_decomp)
chemistry/bulk_aero/dust_intr.F90:   use cam_history,      only: addfld, add_default, phys_decomp
chemistry/bulk_aero/dust_intr.F90:   call addfld (dummy,'frac ',1, 'A','Soil erodibility factor',phys_decomp)
chemistry/bulk_aero/dust_intr.F90:   call addfld (dummy,'frac ',1, 'A','RAM1',phys_decomp)
chemistry/bulk_aero/dust_intr.F90:   call addfld (dummy,'frac ',1, 'A','FV',phys_decomp)
chemistry/bulk_aero/dust_intr.F90:   call addfld (dummy,'frac ',1, 'A','ORO',phys_decomp)
chemistry/bulk_aero/dust_intr.F90:      call addfld (dummy,'kg/m2/s ',1, 'A',trim(cnst_name(ix-spc_ndx(1)+spc_ndx(m)))//' dust surface emission',phys_decomp)
chemistry/bulk_aero/dust_intr.F90:      call addfld (dummy,'kg/kg ',pver, 'A',trim(cnst_name(ix-1+m))//' dust mixing ratio',phys_decomp)
chemistry/bulk_aero/dust_intr.F90:      call addfld (dummy,'kg/m2/s ',1, 'A',trim(cnst_name(ix-1+m))//' dust surface emission',phys_decomp)
chemistry/bulk_aero/dust_intr.F90:      call addfld (dummy,'kg/m2/s ',1, 'A',trim(cnst_name(ix-1+m))//' turbulent dry deposition flux',phys_decomp)
chemistry/bulk_aero/dust_intr.F90:      call addfld (dummy,'kg/m2/s ',1, 'A',trim(cnst_name(ix-1+m))//' gravitational dry deposition flux',phys_decomp)
chemistry/bulk_aero/dust_intr.F90:      call addfld (dummy,'kg/m2/s ',1, 'A',trim(cnst_name(ix-1+m))//' dry deposition flux at bottom (grav + turb)',phys_decomp)
chemistry/bulk_aero/dust_intr.F90:      call addfld (dummy,'kg/kg/s ',pver, 'A',trim(cnst_name(ix-1+m))//' dry deposition',phys_decomp)
chemistry/bulk_aero/dust_intr.F90:      call addfld (dummy,'kg/kg/s ',pver, 'A',trim(cnst_name(ix-1+m))//' wet deposition',phys_decomp)
chemistry/bulk_aero/dust_intr.F90:      call addfld (dummy,'m/s ',pver, 'A',trim(cnst_name(ix-1+m))//' deposition velocity',phys_decomp)
chemistry/bulk_aero/dust_intr.F90:   call addfld (dummy,'kg/m2/s',1, 'A','Dry deposition flux at surface',phys_decomp)
chemistry/bulk_aero/dust_intr.F90:   call addfld (dummy,'kg/m2/s',1, 'A','Mobilization flux at surface',phys_decomp)
chemistry/bulk_aero/dust_intr.F90:   call addfld (dummy,'kg/m2/s',1, 'A','Wet deposition flux at surface',phys_decomp)
chemistry/bulk_aero/dust_intr.F90:   call addfld (dummy,'Tau ',1, 'A','Optical depth for diagnostics',phys_decomp)
chemistry/bulk_aero/progseasalts_intr.F90:    use cam_history,   only: addfld, add_default, phys_decomp
chemistry/bulk_aero/progseasalts_intr.F90:       call addfld (dummy,'kg/m2/s ',1, 'A',trim(cnst_name(ix-spc_ndx(1)+spc_ndx(m)))//' progseasalts surface emission',phys_decomp)
chemistry/bulk_aero/progseasalts_intr.F90:       call addfld (dummy,'kg/kg ',pver, 'A',trim(cnst_name(ix-1+m))//' progseasalts mixing ratio',phys_decomp)
chemistry/bulk_aero/progseasalts_intr.F90:       call addfld (dummy,'kg/m2/s ',1, 'A',trim(cnst_name(ix-1+m))//' progseasalts surface emission',phys_decomp)
chemistry/bulk_aero/progseasalts_intr.F90:       call addfld (dummy,'Tau ',1, 'A',trim(cnst_name(ix-1+m))//' optical depth',phys_decomp)
chemistry/bulk_aero/progseasalts_intr.F90:       call addfld (dummy,'kg/m2/s ',1, 'A',trim(cnst_name(ix-1+m))//' turbulent dry deposition flux',phys_decomp)
chemistry/bulk_aero/progseasalts_intr.F90:       call addfld (dummy,'kg/m2/s ',1, 'A',trim(cnst_name(ix-1+m))//' gravitational dry deposition flux',phys_decomp)
chemistry/bulk_aero/progseasalts_intr.F90:       call addfld (dummy,'kg/m2/s ',1, 'A',trim(cnst_name(ix-1+m))//' dry deposition flux at bottom (grav + turb)',phys_decomp)
chemistry/bulk_aero/progseasalts_intr.F90:       call addfld (dummy,'kg/kg/s ',pver, 'A',trim(cnst_name(ix-1+m))//' dry deposition',phys_decomp)
chemistry/bulk_aero/progseasalts_intr.F90:       call addfld (dummy,'kg/kg/s ',pver, 'A',trim(cnst_name(ix-1+m))//' wet deposition',phys_decomp)
chemistry/bulk_aero/progseasalts_intr.F90:       call addfld (dummy,'m/s ',pver, 'A',trim(cnst_name(ix-1+m))//' deposition velocity',phys_decomp)
chemistry/bulk_aero/progseasalts_intr.F90:       call addfld (dummy,'m/s ',pver, 'A',trim(cnst_name(ix-1+m))//' deposition diameter',phys_decomp)
chemistry/bulk_aero/progseasalts_intr.F90:    call addfld (dummy,'kg/m2/s',1, 'A','Dry deposition flux at surface',phys_decomp)
chemistry/bulk_aero/progseasalts_intr.F90:    call addfld (dummy,'kg/m2/s',1, 'A','Mobilization flux at surface',phys_decomp)
chemistry/bulk_aero/progseasalts_intr.F90:    call addfld (dummy,'kg/m2/s',1, 'A','Wet deposition flux at surface',phys_decomp)
chemistry/bulk_aero/progseasalts_intr.F90:    call addfld (dummy,'Tau ',1, 'A','Optical depth for diagnostics',phys_decomp)
chemistry/bulk_aero/progseasalts_intr.F90:    call addfld (dummy,'frac',pver, 'A','RH in dry dep calc',phys_decomp)
control/history_scam.F90:   use cam_history,  only: phys_decomp, dyn_decomp,  addfld, outfld, add_default
control/history_scam.F90:! Call addfld to add each field to the Master Field List.
control/history_scam.F90:      call addfld ('TDIFF   ','K      ',plev,    'A','difference from observed temp', dyn_decomp)
control/history_scam.F90:      call addfld ('TOBS    ','K      ',plev,    'A','observed temp', phys_decomp)
control/history_scam.F90:      call addfld ('QDIFF   ','kg/kg   ',plev,    'A','difference from observed water',dyn_decomp)
control/history_scam.F90:      call addfld ('QOBS    ','kg/kg   ',plev,    'A','observed water',phys_decomp)
control/history_scam.F90:      call addfld ('PRECOBS','mm/day',plev,    'A','Total (convective and large-scale) precipitation rate', phys_decomp)
control/history_scam.F90:      call addfld ('DIVQ    ','kg/kg/s ',plev,    'A','Q advection tendency (horizontal)', phys_decomp)
control/history_scam.F90:      call addfld ('DIVQ3D  ','kg/kg/s ',pver,    'A','Q advection tendency (horiz/vert combined)', dyn_decomp)
control/history_scam.F90:      call addfld ('DIVV  ','m/s2    ',plev,    'A','V advection tendency (horizontal)', phys_decomp)
control/history_scam.F90:      call addfld ('DIVU  ','m/s2    ',plev,    'A','U advection tendency (horizontal)', phys_decomp)
control/history_scam.F90:      call addfld ('DIVT   ','K/s     ',plev,    'A','T advection tendency (horizontal)', phys_decomp)
control/history_scam.F90:      call addfld ('DIVT3D ','K/s     ',pver,    'A','T advection tendency (horiz/vert combined)', dyn_decomp)
control/history_scam.F90:      call addfld ('SHFLXOBS','W/m2    ',1,    'A','Obs Surface sensible heat flux',phys_decomp)
control/history_scam.F90:      call addfld ('LHFLXOBS','W/m2    ',1,    'A','Obs Surface latent heat flux',phys_decomp)
control/history_scam.F90:      call addfld ('TRELAX  ','K      ',plev,    'A','t relaxation amount', dyn_decomp)
control/history_scam.F90:      call addfld ('QRELAX  ','kg/kg  ',plev,    'A','q relaxation amount', dyn_decomp)
control/history_scam.F90:      call addfld ('TAURELAX','seconds',plev,    'A','relaxation time constant', dyn_decomp)
control/cam_history_support.F90:     real(r8) :: fillvalue                     ! fillvalue for this variable, set to default if not explicit in addfld
control/cam_comp.F90.bak.20150822:   use cam_history,      only: addfld, add_default, phys_decomp, intht, init_masterlinkedlist
control/cam_history.F90.bak.20150822:!   addfld, add_default
control/cam_history.F90.bak.20150822:   public :: addfld                    ! Add a field to history file
control/cam_history.F90.bak.20150822:! set flag indicating h-tape contents are now defined (needed by addfld)
control/cam_history.F90.bak.20150822:! set flag indicating h-tape contents are now defined (needed by addfld)
control/cam_history.F90.bak.20150822:   subroutine addfld (fname, units, numlev, avgflag, long_name, &
control/cam_history.F90.bak.20150822:            call endrun ('ADDFLD: Attempt to add field '//fname//' to masterlist before physics grid set')
control/cam_history.F90.bak.20150822:            call endrun ('ADDFLD: Attempt to add field '//fname//' to masterlist before dynamics grid set')
control/cam_history.F90.bak.20150822:         call endrun('ADDFLD: blank field name not allowed')
control/cam_history.F90.bak.20150822:         write(iulog,*)'ADDFLD: field name cannot be longer than ',fieldname_len,' characters long'
control/cam_history.F90.bak.20150822:         call endrun ('ADDFLD:  '//fname//' already on list')
control/cam_history.F90.bak.20150822:         write(iulog,*)'ADDFLD: unknown decomp_type=', decomp_type
control/cam_history.F90.bak.20150822:         call endrun ('ADDFLD: unknown avgflag='//avgflag)
control/cam_history.F90.bak.20150822:   end subroutine addfld
control/cam_history.F90:!   addfld, add_default
control/cam_history.F90:   public :: addfld                    ! Add a field to history file
control/cam_history.F90:! set flag indicating h-tape contents are now defined (needed by addfld)
control/cam_history.F90:! set flag indicating h-tape contents are now defined (needed by addfld)
control/cam_history.F90:   subroutine addfld (fname, units, numlev, avgflag, long_name, &
control/cam_history.F90:            call endrun ('ADDFLD: Attempt to add field '//fname//' to masterlist before physics grid set')
control/cam_history.F90:            call endrun ('ADDFLD: Attempt to add field '//fname//' to masterlist before dynamics grid set')
control/cam_history.F90:         call endrun('ADDFLD: blank field name not allowed')
control/cam_history.F90:         write(iulog,*)'ADDFLD: field name cannot be longer than ',fieldname_len,' characters long'
control/cam_history.F90:         call endrun ('ADDFLD:  '//fname//' already on list')
control/cam_history.F90:         write(iulog,*)'ADDFLD: unknown decomp_type=', decomp_type
control/cam_history.F90:         call endrun ('ADDFLD: unknown avgflag='//avgflag)
control/cam_history.F90:   end subroutine addfld
control/cam_comp.F90:   use cam_history,      only: addfld, add_default, phys_decomp, intht, init_masterlinkedlist
control/history_defaults.F90:  use cam_history,  only: phys_decomp, dyn_decomp, addfld, add_default
control/history_defaults.F90:! Call addfld to add each field to the Master Field List.
control/history_defaults.F90:    call addfld ('SGH     ','m       ',1,    'I','Standard deviation of orography',phys_decomp)
control/history_defaults.F90:    call addfld ('SGH30   ','m       ',1,    'I','Standard deviation of 30s orography',phys_decomp)
control/history_defaults.F90:    call addfld ('CLAT1&IC','none      ',1,    'I','cos lat for bfb testing', dyn_decomp)
control/history_defaults.F90:    call addfld ('CLON1&IC','none      ',1,    'I','cos lon for bfb testing', dyn_decomp)
control/history_defaults.F90:    call addfld ('PHI&IC','none      ',1,    'I','lat for bfb testing', dyn_decomp)
control/history_defaults.F90:    call addfld ('LAM&IC','none      ',1,    'I','lon for bfb testing', dyn_decomp)
control/history_defaults.F90:    call addfld ('DQP     ','kg/kg/s ',pver, 'A','Specific humidity tendency due to precipitation',phys_decomp)
control/history_defaults.F90:    call addfld ('CLAT ','none      ',1,    'A','cos lat for bfb testing', dyn_decomp)
control/history_defaults.F90:    call addfld ('q','kg/kg   ',plev, 'A','Q for scam',dyn_decomp)
control/history_defaults.F90:    call addfld ('u','m/s     ',plev, 'A','U for scam',dyn_decomp)
control/history_defaults.F90:    call addfld ('v','m/s     ',plev, 'A','V for scam',dyn_decomp)
control/history_defaults.F90:    call addfld ('t','K       ',plev, 'A','Temperature for scam',dyn_decomp)
control/history_defaults.F90:    call addfld ('Tg','K      ',1,    'A','Surface temperature (radiative) for scam',phys_decomp)
control/history_defaults.F90:    call addfld ('Ps','Pa      ',1, 'A','Ps for scam',dyn_decomp)
control/history_defaults.F90:    call addfld ('divT3d','K       ',plev, 'A','Dynamics Residual for T',dyn_decomp)
control/history_defaults.F90:    call addfld ('fixmas','percent',1, 'A','Mass fixer',dyn_decomp)
control/history_defaults.F90:    call addfld ('beta','percent  ',1, 'A','Mass fixer',dyn_decomp)
control/history_defaults.F90:       call addfld (trim(cnst_name(m))//'_dten','kg/kg   ',plev, 'A',trim(cnst_name(m))//' IOP Dynamics Residual for '//trim(cnst_name(m)),dyn_decomp)
control/history_defaults.F90:       call addfld (trim(cnst_name(m))//'_alph','kg/kg   ',1, 'A',trim(cnst_name(m))//' alpha constituent fixer',dyn_decomp)
control/history_defaults.F90:       call addfld (trim(cnst_name(m))//'_dqfx','kg/kg   ',plev, 'A',trim(cnst_name(m))//' dqfx3 fixer',dyn_decomp)
control/history_defaults.F90:    call addfld ('shflx ','W/m2    ',1,    'A','Surface sensible heat flux for scam',phys_decomp)
control/history_defaults.F90:    call addfld ('lhflx   ','W/m2    ',1,    'A','Surface latent heat flux for scam',phys_decomp)
control/history_defaults.F90:    call addfld ('trefht  ','K       ',1,    'A','Reference height temperature',phys_decomp)
control/history_defaults.F90:    call addfld ('Tsair  ','K       ',1,    'A','Reference height temperature for scam',phys_decomp)
control/history_defaults.F90:    call addfld ('phis   ','m2/s2   ',1,    'I','Surface geopotential for scam',phys_decomp)
control/history_defaults.F90:    call addfld ('Prec   ','m/s     ',1,    'A','Total (convective and large-scale) precipitation rate for scam',phys_decomp)
control/history_defaults.F90:    call addfld ('omega   ','Pa/s    ',pver, 'A','Vertical velocity (pressure)',phys_decomp)
dynamics/eul/dyn_comp.F90:  use cam_history,  only: dyn_decomp, addfld, add_default
dynamics/eul/dyn_comp.F90:! Call addfld to add each field to the Master Field List.
dynamics/eul/dyn_comp.F90:    call addfld ('ETADOT  ','1/s ',plevp,'A','Vertical (eta) velocity',dyn_decomp)
dynamics/eul/dyn_comp.F90:    call addfld ('U&IC    ','m/s ',plev, 'I','Zonal wind'                                    ,dyn_decomp )
dynamics/eul/dyn_comp.F90:    call addfld ('V&IC    ','m/s ',plev, 'I','Meridional wind'                               ,dyn_decomp )
dynamics/eul/dyn_comp.F90:    call addfld ('PS&IC      ','Pa      ',1,    'I','Surface pressure'                              ,dyn_decomp )
dynamics/eul/dyn_comp.F90:    call addfld ('T&IC       ','K       ',plev, 'I','Temperature'                                   ,dyn_decomp )
dynamics/eul/dyn_comp.F90:       call addfld (trim(cnst_name(m))//'&IC','kg/kg   ',plev, 'I',cnst_longname(m)                 ,dyn_decomp )
dynamics/eul/dyn_comp.F90:       call addfld (hadvnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' horizontal advection tendency ',dyn_decomp)
dynamics/eul/dyn_comp.F90:       call addfld (vadvnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' vertical advection tendency ',dyn_decomp)
dynamics/eul/dyn_comp.F90:       call addfld (tendnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' total tendency ',dyn_decomp)
dynamics/eul/dyn_comp.F90:       call addfld (tottnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' horz + vert + fixer tendency ',dyn_decomp)
dynamics/eul/dyn_comp.F90:       call addfld (fixcnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' tendency due to slt fixer',dyn_decomp)
dynamics/eul/dyn_comp.F90:    call addfld ('DUH     ','K/s     ',plev, 'A','U horizontal diffusive heating',dyn_decomp)
dynamics/eul/dyn_comp.F90:    call addfld ('DVH     ','K/s     ',plev, 'A','V horizontal diffusive heating',dyn_decomp)
dynamics/eul/dyn_comp.F90:    call addfld ('DTH     ','K/s     ',plev, 'A','T horizontal diffusive heating',dyn_decomp)
dynamics/eul/dyn_comp.F90:    call addfld ('ENGYCORR','W/m2    ',plev, 'A','Energy correction for over-all conservation',dyn_decomp)
dynamics/eul/dyn_comp.F90:    call addfld ('TFIX    ','K/s     ',1,    'A','T fixer (T equivalent of Energy correction)',dyn_decomp)
dynamics/eul/dyn_comp.F90:    call addfld ('FU      ','m/s2    ',plev, 'A','Zonal wind forcing term',dyn_decomp)
dynamics/eul/dyn_comp.F90:    call addfld ('FV      ','m/s2    ',plev, 'A','Meridional wind forcing term',dyn_decomp)
dynamics/eul/dyn_comp.F90:    call addfld ('UTEND   ','m/s2    ',plev, 'A','U tendency',dyn_decomp)
dynamics/eul/dyn_comp.F90:    call addfld ('VTEND   ','m/s2    ',plev, 'A','V tendency',dyn_decomp)
dynamics/eul/dyn_comp.F90:    call addfld ('TTEND   ','K/s     ',plev, 'A','T tendency',dyn_decomp)
dynamics/eul/dyn_comp.F90:    call addfld ('LPSTEN  ','Pa/s    ',1,    'A','Surface pressure tendency',dyn_decomp)
dynamics/eul/dyn_comp.F90:    call addfld ('VAT     ','K/s     ',plev, 'A','Vertical advective tendency of T',dyn_decomp)
dynamics/eul/dyn_comp.F90:    call addfld ('KTOOP   ','K/s     ',plev, 'A','(Kappa*T)*(omega/P)',dyn_decomp)
dynamics/homme/stepon.F90:  use cam_history,      only: phys_decomp, addfld, add_default, dyn_decomp
dynamics/homme/stepon.F90:  call addfld ('FU      ','m/s2    ',nlev, 'A','Zonal wind forcing term',dyn_decomp, &
dynamics/homme/stepon.F90:  call addfld ('FV      ','m/s2    ',nlev, 'A','Meridional wind forcing term',dyn_decomp, &
dynamics/homme/stepon.F90:  call addfld ('VOR      ','1/s     ',nlev, 'A','Vorticity',dyn_decomp, &
dynamics/homme/stepon.F90:  call addfld ('DIV      ','1/s     ',nlev, 'A','Divergence',dyn_decomp, &
dynamics/homme/stepon.F90:     call addfld ('PHIS_SM ','m2/s2      ',1,    'I','Surface geopotential (smoothed)',dyn_decomp,&
dynamics/homme/stepon.F90:     call addfld ('SGH_SM  ','m       ',1,    'I','Standard deviation of orography (smoothed)',dyn_decomp,&
dynamics/homme/stepon.F90:     call addfld ('SGH30_SM','m       ',1,    'I','Standard deviation of 30s orography (smoothed)',dyn_decomp,&
dynamics/homme/stepon.F90:  call addfld ('CONVU   ','m/s2    ',nlev, 'A','Zonal component IE->KE conversion term',phys_decomp)
dynamics/homme/stepon.F90:  call addfld ('CONVV   ','m/s2    ',nlev, 'A','Meridional component IE->KE conversion term',phys_decomp)
dynamics/homme/stepon.F90:  call addfld ('DIFFU   ','m/s2    ',nlev, 'A','U horizontal diffusion',phys_decomp)
dynamics/homme/stepon.F90:  call addfld ('DIFFV   ','m/s2    ',nlev, 'A','V horizontal diffusion',phys_decomp)
dynamics/homme/stepon.F90:  call addfld ('ETADOT  ','1/s ',plevp,'A','Vertical (eta) velocity',phys_decomp)
dynamics/homme/stepon.F90:  call addfld ('U&IC    ','m/s ',plev, 'I','Zonal wind'        ,phys_decomp )
dynamics/homme/stepon.F90:  call addfld ('V&IC    ','m/s ',plev, 'I','Meridional wind'    ,phys_decomp )
dynamics/homme/stepon.F90:  call addfld ('PS&IC      ','Pa      ',1,    'I','Surface pressure'    ,phys_decomp)
dynamics/homme/stepon.F90:  call addfld ('T&IC       ','K       ',plev, 'I','Temperature'         ,phys_decomp)
dynamics/homme/stepon.F90:     call addfld (trim(cnst_name(m))//'&IC','kg/kg   ',plev, 'I',cnst_longname(m), phys_decomp)
dynamics/iap/dyn_comp.F90:        use cam_history,  only: dyn_stagger_decomp, dyn_decomp, addfld, add_default
dynamics/iap/dyn_comp.F90:        ! Call addfld to add each field to the Master Field List.
dynamics/iap/dyn_comp.F90:    call addfld ('ETADOT  ','1/s ',plevp,'A','Vertical (eta) velocity',dyn_decomp)
dynamics/iap/dyn_comp.F90:    call addfld ('U&IC    ','m/s ',plev, 'I','Zonal wind'                                    ,dyn_decomp )
dynamics/iap/dyn_comp.F90:    call addfld ('V&IC    ','m/s ',plev, 'I','Meridional wind'                               ,dyn_decomp )
dynamics/iap/dyn_comp.F90:    call addfld ('PS&IC      ','Pa      ',1,    'I','Surface pressure'                              ,dyn_decomp )
dynamics/iap/dyn_comp.F90:    call addfld ('T&IC       ','K       ',plev, 'I','Temperature'                                   ,dyn_decomp )
dynamics/iap/dyn_comp.F90:       call addfld (trim(cnst_name(m))//'&IC','kg/kg   ',plev, 'I',cnst_longname(m)                 ,dyn_decomp )
dynamics/iap/dyn_comp.F90:       call addfld (hadvnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' horizontal advection tendency ',dyn_decomp)
dynamics/iap/dyn_comp.F90:       call addfld (vadvnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' vertical advection tendency ',dyn_decomp)
dynamics/iap/dyn_comp.F90:       call addfld (tendnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' total tendency ',dyn_decomp)
dynamics/iap/dyn_comp.F90:       call addfld (tottnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' horz + vert + fixer tendency ',dyn_decomp)
dynamics/iap/dyn_comp.F90:       call addfld (fixcnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' tendency due to slt fixer',dyn_decomp)
dynamics/iap/dyn_comp.F90:    call addfld ('DUH     ','K/s     ',plev, 'A','U horizontal diffusive heating',dyn_decomp)
dynamics/iap/dyn_comp.F90:    call addfld ('DVH     ','K/s     ',plev, 'A','V horizontal diffusive heating',dyn_decomp)
dynamics/iap/dyn_comp.F90:    call addfld ('DTH     ','K/s     ',plev, 'A','T horizontal diffusive heating',dyn_decomp)
dynamics/iap/dyn_comp.F90:    call addfld ('ENGYCORR','W/m2    ',plev, 'A','Energy correction for over-all conservation',dyn_decomp)
dynamics/iap/dyn_comp.F90:    call addfld ('TFIX    ','K/s     ',1,    'A','T fixer (T equivalent of Energy correction)',dyn_decomp)
dynamics/iap/dyn_comp.F90:    call addfld ('FU      ','m/s2    ',plev, 'A','Zonal wind forcing term',dyn_decomp)
dynamics/iap/dyn_comp.F90:    call addfld ('FV      ','m/s2    ',plev, 'A','Meridional wind forcing term',dyn_decomp)
dynamics/iap/dyn_comp.F90:    call addfld ('UTEND   ','m/s2    ',plev, 'A','U tendency',dyn_decomp)
dynamics/iap/dyn_comp.F90:    call addfld ('VTEND   ','m/s2    ',plev, 'A','V tendency',dyn_decomp)
dynamics/iap/dyn_comp.F90:    call addfld ('TTEND   ','K/s     ',plev, 'A','T tendency',dyn_decomp)
dynamics/iap/dyn_comp.F90:    call addfld ('LPSTEN  ','Pa/s    ',1,    'A','Surface pressure tendency',dyn_decomp)
dynamics/iap/dyn_comp.F90:    call addfld ('VAT     ','K/s     ',plev, 'A','Vertical advective tendency of T',dyn_decomp)
dynamics/iap/dyn_comp.F90:    call addfld ('KTOOP   ','K/s     ',plev, 'A','(Kappa*T)*(omega/P)',dyn_decomp)
dynamics/sld/dyn_comp.F90:  use cam_history,  only: dyn_decomp, addfld, add_default
dynamics/sld/dyn_comp.F90:! Call addfld to add each field to the Master Field List.
dynamics/sld/dyn_comp.F90:    call addfld ('ETADOT  ','1/s ',plevp,'A','Vertical (eta) velocity',dyn_decomp)
dynamics/sld/dyn_comp.F90:    call addfld ('U&IC    ','m/s ',plev, 'I','Zonal wind'                                    ,dyn_decomp )
dynamics/sld/dyn_comp.F90:    call addfld ('V&IC    ','m/s ',plev, 'I','Meridional wind'                               ,dyn_decomp )
dynamics/sld/dyn_comp.F90:    call addfld ('PS&IC      ','Pa      ',1,    'I','Surface pressure'                              ,dyn_decomp )
dynamics/sld/dyn_comp.F90:    call addfld ('T&IC       ','K       ',plev, 'I','Temperature'                                   ,dyn_decomp )
dynamics/sld/dyn_comp.F90:       call addfld (trim(cnst_name(m))//'&IC','kg/kg   ',plev, 'I',cnst_longname(m)                 ,dyn_decomp )
dynamics/sld/dyn_comp.F90:       call addfld (hadvnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' horizontal advection tendency ',dyn_decomp)
dynamics/sld/dyn_comp.F90:       call addfld (vadvnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' vertical advection tendency ',dyn_decomp)
dynamics/sld/dyn_comp.F90:       call addfld (tendnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' total tendency ',dyn_decomp)
dynamics/sld/dyn_comp.F90:       call addfld (tottnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' horz + vert + fixer tendency ',dyn_decomp)
dynamics/sld/dyn_comp.F90:       call addfld (fixcnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' tendency due to slt fixer',dyn_decomp)
dynamics/sld/dyn_comp.F90:    call addfld ('DUH     ','K/s     ',plev, 'A','U horizontal diffusive heating',dyn_decomp)
dynamics/sld/dyn_comp.F90:    call addfld ('DVH     ','K/s     ',plev, 'A','V horizontal diffusive heating',dyn_decomp)
dynamics/sld/dyn_comp.F90:    call addfld ('DTH     ','K/s     ',plev, 'A','T horizontal diffusive heating',dyn_decomp)
dynamics/sld/dyn_comp.F90:    call addfld ('ENGYCORR','W/m2    ',plev, 'A','Energy correction for over-all conservation',dyn_decomp)
dynamics/sld/dyn_comp.F90:    call addfld ('TFIX    ','K/s     ',1,    'A','T fixer (T equivalent of Energy correction)',dyn_decomp)
dynamics/sld/dyn_comp.F90:    call addfld ('FU      ','m/s2    ',plev, 'A','Zonal wind forcing term',dyn_decomp)
dynamics/sld/dyn_comp.F90:    call addfld ('FV      ','m/s2    ',plev, 'A','Meridional wind forcing term',dyn_decomp)
dynamics/sld/dyn_comp.F90:    call addfld ('UTEND   ','m/s2    ',plev, 'A','U tendency',dyn_decomp)
dynamics/sld/dyn_comp.F90:    call addfld ('VTEND   ','m/s2    ',plev, 'A','V tendency',dyn_decomp)
dynamics/sld/dyn_comp.F90:    call addfld ('TTEND   ','K/s     ',plev, 'A','T tendency',dyn_decomp)
dynamics/sld/dyn_comp.F90:    call addfld ('LPSTEN  ','Pa/s    ',1,    'A','Surface pressure tendency',dyn_decomp)
dynamics/sld/dyn_comp.F90:    call addfld ('VAT     ','K/s     ',plev, 'A','Vertical advective tendency of T',dyn_decomp)
dynamics/sld/dyn_comp.F90:    call addfld ('KTOOP   ','K/s     ',plev, 'A','(Kappa*T)*(omega/P)',dyn_decomp)
dynamics/fv/metdata.F90:   use cam_history, only : addfld,dyn_decomp,phys_decomp
dynamics/fv/metdata.F90:   call addfld ('MET_RLX ','     ',pver, 'A','Meteorology relax function',dyn_decomp)
dynamics/fv/metdata.F90:   call addfld ('MET_TAUX','        ',1, 'A','Meteorology taux',phys_decomp)
dynamics/fv/metdata.F90:   call addfld ('MET_TAUY','        ',1, 'A','Meteorology tauy',phys_decomp)
dynamics/fv/metdata.F90:   call addfld ('MET_SHFX','        ',1, 'A','Meteorology shflx',phys_decomp)
dynamics/fv/metdata.F90:   call addfld ('MET_QFLX','        ',1, 'A','Meteorology qflx',phys_decomp)
dynamics/fv/metdata.F90:   call addfld ('MET_PS','          ',1, 'A','Meteorology PS',dyn_decomp)
dynamics/fv/metdata.F90:   call addfld ('MET_T','        ',pver, 'A','Meteorology T',phys_decomp)
dynamics/fv/metdata.F90:   call addfld ('MET_U','        ',pver, 'A','Meteorology U',dyn_decomp)
dynamics/fv/metdata.F90:   call addfld ('MET_V','        ',pver, 'A','Meteorology V',dyn_decomp)
dynamics/fv/metdata.F90:   call addfld ('MET_TS','K',1, 'A','Meteorology TS',phys_decomp)
dynamics/fv/metdata.F90:   call addfld ('MET_OCNFRC','fraction',1, 'A','Ocean frac derived from met TS',phys_decomp)
dynamics/fv/metdata.F90:   call addfld ('MET_ICEFRC','fraction',1, 'A','Sea ice frac derived from met TS',phys_decomp)
dynamics/fv/ctem.F90:  use cam_history,  only: addfld, outfld, add_default, dyn_decomp
dynamics/fv/ctem.F90:    call addfld ('VTH3d ','MK/S    ',plevp, 'A','Meridional Heat Flux: 3D zon. mean', dyn_decomp )
dynamics/fv/ctem.F90:    call addfld ('WTH3d ','MK/S    ',plevp, 'A','Vertical Heat Flux: 3D zon. mean', dyn_decomp )
dynamics/fv/ctem.F90:    call addfld ('UV3d  ','M2/S2   ',plevp, 'A','Meridional Flux of Zonal Momentum: 3D zon. mean', dyn_decomp )
dynamics/fv/ctem.F90:    call addfld ('UW3d  ','M2/S2   ',plevp, 'A','Vertical Flux of Zonal Momentum: 3D zon. mean', dyn_decomp )
dynamics/fv/ctem.F90:       call addfld ('VTH2d ','MK/S    ',1, 'A','Meridional Heat Flux: 2D prj of zon. mean - defined on ilev',dyn_decomp )
dynamics/fv/ctem.F90:       call addfld ('WTH2d ','MK/S    ',1, 'A','Vertical Heat Flux: 2D prj of zon. mean - defined on ilev',dyn_decomp )
dynamics/fv/ctem.F90:       call addfld ('UV2d  ','M2/S2   ',1, 'A','Meridional Flux of Zonal Momentum: 2D prj of zon. mean - defined on ilev',dyn_decomp )
dynamics/fv/ctem.F90:       call addfld ('UW2d  ','M2/S2   ',1, 'A','Vertical Flux of Zonal Momentum; 2D prj of zon. mean - defined on ilev',dyn_decomp )
dynamics/fv/ctem.F90:       call addfld ('U2d   ','M/S     ',1, 'A','Zonal-Mean zonal wind - defined on ilev',dyn_decomp )
dynamics/fv/ctem.F90:       call addfld ('V2d   ','M/S     ',1, 'A','Zonal-Mean meridional wind - defined on ilev',dyn_decomp )
dynamics/fv/ctem.F90:       call addfld ('W2d   ','M/S     ',1, 'A','Zonal-Mean vertical wind - defined on ilev',dyn_decomp )
dynamics/fv/ctem.F90:       call addfld ('TH2d  ','K       ',1, 'A','Zonal-Mean potential temp - defined on ilev',dyn_decomp )
dynamics/fv/ctem.F90:    call addfld ('TH    ','K       ',plevp, 'A','Potential Temperature', dyn_decomp )
dynamics/fv/ctem.F90:    call addfld ('MSKtem','unitless',1    , 'A','TEM mask', dyn_decomp )
dynamics/fv/dyn_comp.F90:        use cam_history,  only: dyn_stagger_decomp, dyn_decomp, addfld, add_default
dynamics/fv/dyn_comp.F90:        ! Call addfld to add each field to the Master Field List.
dynamics/fv/dyn_comp.F90:        call addfld ('US      ','m/s ',plev, 'A','Zonal wind, staggered',dyn_stagger_decomp)
dynamics/fv/dyn_comp.F90:        call addfld ('VS      ','m/s ',plev, 'A','Meridional wind, staggered',dyn_decomp)
dynamics/fv/dyn_comp.F90:        call addfld ('US&IC   ','m/s ',plev, 'I','Zonal wind, staggered',dyn_stagger_decomp )
dynamics/fv/dyn_comp.F90:        call addfld ('VS&IC   ','m/s ',plev, 'I','Meridional wind, staggered',dyn_decomp )
dynamics/fv/dyn_comp.F90:        call addfld ('PS&IC      ','Pa      ',1,    'I','Surface pressure',dyn_decomp )
dynamics/fv/dyn_comp.F90:        call addfld ('T&IC       ','K       ',plev, 'I','Temperature',dyn_decomp )
dynamics/fv/dyn_comp.F90:           call addfld (trim(cnst_name(m))//'&IC','kg/kg   ',plev, 'I',cnst_longname(m)                 ,dyn_decomp )
dynamics/fv/dyn_comp.F90:           !call addfld (hadvnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' horizontal advection tendency ',dyn_decomp)
dynamics/fv/dyn_comp.F90:           !call addfld (vadvnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' vertical advection tendency ',dyn_decomp)
dynamics/fv/dyn_comp.F90:           !call addfld (tendnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' total tendency ',dyn_decomp)
dynamics/fv/dyn_comp.F90:           call addfld (tottnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' horz + vert + fixer tendency ',dyn_decomp)
dynamics/fv/dyn_comp.F90:           !call addfld (fixcnam(m), 'kg/kg/s ',pver, 'A',trim(cnst_name(m))//' tendency due to slt fixer',dyn_decomp)
dynamics/fv/dyn_comp.F90:        call addfld ('DUH     ','K/s     ',plev, 'A','U horizontal diffusive heating',dyn_decomp)
dynamics/fv/dyn_comp.F90:        call addfld ('DVH     ','K/s     ',plev, 'A','V horizontal diffusive heating',dyn_decomp)
dynamics/fv/dyn_comp.F90:        call addfld ('ENGYCORR','W/m2    ',plev, 'A','Energy correction for over-all conservation',dyn_decomp)
dynamics/fv/dyn_comp.F90:        call addfld ('FU      ','m/s2    ',plev, 'A','Zonal wind forcing term',dyn_decomp)
dynamics/fv/dyn_comp.F90:        call addfld ('FV      ','m/s2    ',plev, 'A','Meridional wind forcing term',dyn_decomp)
dynamics/fv/dyn_comp.F90:        call addfld ('FU_S    ','m/s2    ',plev, 'A','Zonal wind forcing term on staggered grid',dyn_stagger_decomp)
dynamics/fv/dyn_comp.F90:        call addfld ('FV_S    ','m/s2    ',plev, 'A','Meridional wind forcing term on staggered grid',dyn_decomp)
dynamics/fv/dyn_comp.F90:        call addfld ('UTEND   ','m/s2    ',plev, 'A','U tendency',dyn_decomp)
dynamics/fv/dyn_comp.F90:        call addfld ('VTEND   ','m/s2    ',plev, 'A','V tendency',dyn_decomp)
dynamics/fv/dyn_comp.F90:        call addfld ('TTEND   ','K/s     ',plev, 'A','Total T tendency (all processes)',dyn_decomp)
dynamics/fv/dyn_comp.F90:        call addfld ('QTEND   ','K/s     ',plev, 'A','T tendency (allprocesses)',dyn_decomp) ! juanxiong he
dynamics/fv/dyn_comp.F90:        call addfld ('LPSTEN  ','Pa/s    ',1,    'A','Surface pressure tendency',dyn_decomp)
dynamics/fv/dyn_comp.F90:        call addfld ('VAT     ','K/s     ',plev, 'A','Vertical advective tendency of T',dyn_decomp)
dynamics/fv/dyn_comp.F90:        call addfld ('KTOOP   ','K/s     ',plev, 'A','(Kappa*T)*(omega/P)',dyn_decomp)
physics/cam/tidal_diag.F90:    use cam_history,        only: addfld, phys_decomp
physics/cam/tidal_diag.F90:    call addfld ('T_24_COS','K       ',pver, 'A','Temperature 24hr. cos coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('T_24_SIN','K       ',pver, 'A','Temperature 24hr. sin coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('T_12_COS','K       ',pver, 'A','Temperature 12hr. cos coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('T_12_SIN','K       ',pver, 'A','Temperature 12hr. sin coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('U_24_COS','m/s     ',pver, 'A','Zonal wind 24hr. cos coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('U_24_SIN','m/s     ',pver, 'A','Zonal wind 24hr. sin coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('U_12_COS','m/s     ',pver, 'A','Zonal wind 12hr. cos coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('U_12_SIN','m/s     ',pver, 'A','Zonal wind 12hr. sin coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('V_24_COS','m/s     ',pver, 'A','Meridional wind 24hr. cos coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('V_24_SIN','m/s     ',pver, 'A','Meridional wind 24hr. sin coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('V_12_COS','m/s     ',pver, 'A','Meridional wind 12hr. cos coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('V_12_SIN','m/s     ',pver, 'A','Meridional wind 12hr. sin coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('PS_24_COS','Pa     ',1,    'A','surface pressure 24hr. cos coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('PS_24_SIN','Pa     ',1,    'A','surface pressure 24hr. sin coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('PS_12_COS','Pa     ',1,    'A','surface pressure 12hr. cos coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('PS_12_SIN','Pa     ',1,    'A','surface pressure 12hr. sin coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('OMEGA_24_COS','Pa/s',pver, 'A','vertical pressure velocity 24hr. cos coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('OMEGA_24_SIN','Pa/s',pver, 'A','vertical pressure velocity 24hr. sin coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('OMEGA_12_COS','Pa/s',pver, 'A','vertical pressure velocity 12hr. cos coeff.',phys_decomp)
physics/cam/tidal_diag.F90:    call addfld ('OMEGA_12_SIN','Pa/s',pver, 'A','vertical pressure velocity 12hr. sin coeff.',phys_decomp)
physics/cam/zm_conv_intr.F90:   use cam_history,  only: outfld, addfld, add_default, phys_decomp
physics/cam/zm_conv_intr.F90:  use cam_history,    only: outfld, addfld, add_default, phys_decomp
physics/cam/zm_conv_intr.F90:    call addfld ('PRECZ   ','m/s     ',1,    'A','total precipitation from ZM convection',        phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMDT    ','K/s     ',pver, 'A','T tendency - Zhang-McFarlane moist convection', phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMDQ    ','kg/kg/s ',pver, 'A','Q tendency - Zhang-McFarlane moist convection', phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMDICE ','kg/kg/s ',pver, 'A','Cloud ice tendency - Zhang-McFarlane convection',phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMDLIQ ','kg/kg/s ',pver, 'A','Cloud liq tendency - Zhang-McFarlane convection',phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('EVAPTZM ','K/s     ',pver, 'A','T tendency - Evaporation/snow prod from Zhang convection',phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('FZSNTZM ','K/s     ',pver, 'A','T tendency - Rain to snow conversion from Zhang convection',phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('EVSNTZM ','K/s     ',pver, 'A','T tendency - Snow to rain prod from Zhang convection',phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('EVAPQZM ','kg/kg/s ',pver, 'A','Q tendency - Evaporation from Zhang-McFarlane moist convection',phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMFLXPRC','kg/m2/s ',pverp, 'A','Flux of precipitation from ZM convection'       ,phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMFLXSNW','kg/m2/s ',pverp, 'A','Flux of snow from ZM convection'                ,phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMNTPRPD','kg/kg/s ',pver , 'A','Net precipitation production from ZM convection',phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMNTSNPD','kg/kg/s ',pver , 'A','Net snow production from ZM convection'         ,phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMEIHEAT','W/kg'    ,pver , 'A','Heating by ice and evaporation in ZM convection',phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('CMFMCDZM','kg/m2/s ',pverp,'A','Convection mass flux from ZM deep ',phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('PRECCDZM','m/s     ',1,    'A','Convective precipitation rate from ZM deep',phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('PCONVB','Pa'    ,1 , 'A','convection base pressure',phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('PCONVT','Pa'    ,1 , 'A','convection top  pressure',phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('CAPE',   'J/kg',       1, 'A', 'Convectively available potential energy', phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('FREQZM ','fraction  ',1  ,'A', 'Fractional occurance of ZM convection',phys_decomp) 
physics/cam/zm_conv_intr.F90:    call addfld ('ZMMTT ', 'K/s',     pver, 'A', 'T tendency - ZM convective momentum transport',phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMMTU',  'm/s2',    pver, 'A', 'U tendency - ZM convective momentum transport',  phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMMTV',  'm/s2',    pver, 'A', 'V tendency - ZM convective momentum transport',  phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMMU',   'kg/m2/s', pver, 'A', 'ZM convection updraft mass flux',   phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMMD',   'kg/m2/s', pver, 'A', 'ZM convection downdraft mass flux', phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMUPGU', 'm/s2',    pver, 'A', 'zonal force from ZM updraft pressure gradient term',       phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMUPGD', 'm/s2',    pver, 'A', 'zonal force from ZM downdraft pressure gradient term',     phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMVPGU', 'm/s2',    pver, 'A', 'meridional force from ZM updraft pressure gradient term',  phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMVPGD', 'm/s2',    pver, 'A', 'merdional force from ZM downdraft pressure gradient term', phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMICUU', 'm/s',     pver, 'A', 'ZM in-cloud U updrafts',      phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMICUD', 'm/s',     pver, 'A', 'ZM in-cloud U downdrafts',    phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMICVU', 'm/s',     pver, 'A', 'ZM in-cloud V updrafts',      phys_decomp)
physics/cam/zm_conv_intr.F90:    call addfld ('ZMICVD', 'm/s',     pver, 'A', 'ZM in-cloud V downdrafts',    phys_decomp)
physics/cam/cam3_ozone_data.F90:   use cam_history,      only: addfld, phys_decomp
physics/cam/cam3_ozone_data.F90:   call addfld ('O3VMR', 'm3/m3', pver, 'A', 'Ozone volume mixing ratio', phys_decomp, sampling_seq='rad_lwsw')
physics/cam/sslt_rebin.F90:    use cam_history,  only : addfld, phys_decomp
physics/cam/sslt_rebin.F90:       call addfld('SSLTA','kg/kg', pver, 'A', 'sea salt', phys_decomp )
physics/cam/sslt_rebin.F90:       call addfld('SSLTC','kg/kg', pver, 'A', 'sea salt', phys_decomp )
physics/cam/modal_aer_opt.F90:use cam_history,       only: phys_decomp, addfld, add_default, outfld
physics/cam/modal_aer_opt.F90:   call addfld ('EXTINCT','/m  ',pver,    'A','Aerosol extinction',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:   call addfld ('ABSORB','/m  ',pver,    'A','Aerosol absorption',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:   call addfld ('AODVIS','  ',1,    'A','Aerosol optical depth 550 nm',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:   call addfld ('AODABS','  ',1,    'A','Aerosol absorption optical depth 550 nm',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:   call addfld ('AODMODE1','  ',1,    'A','Aerosol optical depth 550 nm mode 1',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:   call addfld ('AODMODE2','  ',1,    'A','Aerosol optical depth 550 nm mode 2',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:   call addfld ('AODMODE3','  ',1,    'A','Aerosol optical depth 550 nm mode 3',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:   call addfld ('AODDUST1','  ',1,    'A','Aerosol optical depth 550 nm model 1 from dust',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:   call addfld ('AODDUST2','  ',1,    'A','Aerosol optical depth 550 nm model 2 from dust',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:   call addfld ('AODDUST3','  ',1,    'A','Aerosol optical depth 550 nm model 3 from dust',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:   call addfld ('BURDEN1','kg/m2',1,    'A','Aerosol burden mode 1',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:   call addfld ('BURDEN2','kg/m2',1,    'A','Aerosol burden mode 2',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:   call addfld ('BURDEN3','kg/m2',1,    'A','Aerosol burden mode 3',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:   call addfld ('SSAVIS','  ',1,    'A','Aerosol singel-scatter albedo',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:      call addfld ('AODMODE4','  ',1,    'A','Aerosol optical depth 550 nm mode 4',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:      call addfld ('AODMODE5','  ',1,    'A','Aerosol optical depth 550 nm mode 5',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:      call addfld ('AODMODE6','  ',1,    'A','Aerosol optical depth 550 nm mode 6',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:      call addfld ('AODMODE7','  ',1,    'A','Aerosol optical depth 550 nm mode 7',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:      call addfld ('BURDEN4','kg/m2',1,    'A','Aerosol burden mode 4',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:      call addfld ('BURDEN5','kg/m2',1,    'A','Aerosol burden mode 5',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:      call addfld ('BURDEN6','kg/m2',1,    'A','Aerosol burden mode 6',phys_decomp, flag_xyfill=.true.)
physics/cam/modal_aer_opt.F90:      call addfld ('BURDEN7','kg/m2',1,    'A','Aerosol burden mode 7',phys_decomp, flag_xyfill=.true.)
physics/cam/tropopause.F90:    use cam_history,   only: addfld, add_default
physics/cam/tropopause.F90:    call addfld('TROP_P',  'Pa',          1,    'A', 'Tropopause Pressure',    phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:    call addfld('TROP_T',  'K',           1,    'A', 'Tropopause Temperature', phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:    call addfld('TROP_Z',  'm',           1,    'A', 'Tropopause Height',      phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:    call addfld('TROP_PD', 'probability', pver, 'A', 'Tropopause Probabilty',  phys_decomp)
physics/cam/tropopause.F90:    call addfld('TROP_FD', 'probability', 1,    'A', 'Tropopause Found',       phys_decomp)
physics/cam/tropopause.F90:    call addfld('TROPP_P',  'Pa',          1,    'A', 'Tropopause Pressure (primary)',     phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:    call addfld('TROPP_T',  'K',           1,    'A', 'Tropopause Temperature (primary)',  phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:    call addfld('TROPP_Z',  'm',           1,    'A', 'Tropopause Height (primary)',       phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:    call addfld('TROPP_PD', 'probability', pver, 'A', 'Tropopause Distribution (primary)', phys_decomp)
physics/cam/tropopause.F90:    call addfld('TROPP_FD', 'probability', 1,    'A', 'Tropopause Found (primary)',        phys_decomp)
physics/cam/tropopause.F90:    call addfld( 'hstobie_trop',   'fraction of model time', pver, 'I', 'Lowest level with stratospheric chemsitry', phys_decomp )
physics/cam/tropopause.F90:    call addfld( 'hstobie_linoz',  'fraction of model time', pver, 'I', 'Lowest possible Linoz level', phys_decomp )
physics/cam/tropopause.F90:    call addfld( 'hstobie_tropop', 'fraction of model time', pver, 'I', 'Troposphere boundary calculated in chemistry', phys_decomp )
physics/cam/tropopause.F90:      call addfld('TROPA_P',  'Pa',          1,    'A', 'Tropopause Pressure (analytic)',     phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:      call addfld('TROPA_T',  'K',           1,    'A', 'Tropopause Temperature (analytic)',  phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:      call addfld('TROPA_Z',  'm',           1,    'A', 'Tropopause Height (analytic)',       phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:      call addfld('TROPA_PD', 'probability', pver, 'A', 'Tropopause Distribution (analytic)', phys_decomp)
physics/cam/tropopause.F90:      call addfld('TROPA_FD', 'probability', 1,    'A', 'Tropopause Found (analytic)',        phys_decomp)
physics/cam/tropopause.F90:      call addfld('TROPC_P',  'Pa',          1,    'A', 'Tropopause Pressure (climatology)',     phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:      call addfld('TROPC_T',  'K',           1,    'A', 'Tropopause Temperature (climatology)',  phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:      call addfld('TROPC_Z',  'm',           1,    'A', 'Tropopause Height (climatology)',       phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:      call addfld('TROPC_PD', 'probability', pver, 'A', 'Tropopause Distribution (climatology)', phys_decomp)
physics/cam/tropopause.F90:      call addfld('TROPC_FD', 'probability', 1,    'A', 'Tropopause Found (climatology)',        phys_decomp)
physics/cam/tropopause.F90:      call addfld('TROPS_P',  'Pa',          1,    'A', 'Tropopause Pressure (stobie)',     phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:      call addfld('TROPS_T',  'K',           1,    'A', 'Tropopause Temperature (stobie)',  phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:      call addfld('TROPS_Z',  'm',           1,    'A', 'Tropopause Height (stobie)',       phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:      call addfld('TROPS_PD', 'probability', pver, 'A', 'Tropopause Distribution (stobie)', phys_decomp)
physics/cam/tropopause.F90:      call addfld('TROPS_FD', 'probability', 1,    'A', 'Tropopause Found (stobie)',        phys_decomp)
physics/cam/tropopause.F90:      call addfld('TROPT_P',  'Pa',          1,    'A', 'Tropopause Pressure (twmo)',     phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:      call addfld('TROPT_T',  'K',           1,    'A', 'Tropopause Temperature (twmo)',  phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:      call addfld('TROPT_Z',  'm',           1,    'A', 'Tropopause Height (twmo)',       phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:      call addfld('TROPT_PD', 'probability', pver, 'A', 'Tropopause Distribution (twmo)', phys_decomp)
physics/cam/tropopause.F90:      call addfld('TROPT_FD', 'probability', 1,    'A', 'Tropopause Found (twmo)',        phys_decomp)
physics/cam/tropopause.F90:      call addfld('TROPW_P',  'Pa',          1,    'A', 'Tropopause Pressure (WMO)',     phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:      call addfld('TROPW_T',  'K',           1,    'A', 'Tropopause Temperature (WMO)',  phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:      call addfld('TROPW_Z',  'm',           1,    'A', 'Tropopause Height (WMO)',       phys_decomp, flag_xyfill=.True.)
physics/cam/tropopause.F90:      call addfld('TROPW_PD', 'probability', pver, 'A', 'Tropopause Distribution (WMO)', phys_decomp)
physics/cam/tropopause.F90:      call addfld('TROPW_FD', 'probability', 1,    'A', 'Tropopause Found (WMO)',        phys_decomp)
physics/cam/eddy_diff.F90:  use cam_history,      only : outfld, addfld, phys_decomp
physics/cam/eddy_diff.F90:    use cam_history,      only: outfld, addfld, phys_decomp
physics/cam/eddy_diff.F90:    call addfld('UW_errorPBL',      'm2/s',    1,      'A',  'Error function of UW PBL',                              phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_n2',            's-2',     pver,   'A',  'Buoyancy Frequency, LI',                                phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_s2',            's-2',     pver,   'A',  'Shear Frequency, LI',                                   phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_ri',            'no',      pver,   'A',  'Interface Richardson Number, I',                        phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_sfuh',          'no',      pver,   'A',  'Upper-Half Saturation Fraction, L',                     phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_sflh',          'no',      pver,   'A',  'Lower-Half Saturation Fraction, L',                     phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_sfi',           'no',      pver+1, 'A',  'Interface Saturation Fraction, I',                      phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_cldn',          'no',      pver,   'A',  'Cloud Fraction, L',                                     phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_qrl',           'g*W/m2',  pver,   'A',  'LW cooling rate, L',                                    phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_ql',            'kg/kg',   pver,   'A',  'ql(LWC), L',                                            phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_chu',           'g*kg/J',  pver+1, 'A',  'Buoyancy Coefficient, chu, I',                          phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_chs',           'g*kg/J',  pver+1, 'A',  'Buoyancy Coefficient, chs, I',                          phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_cmu',           'g/kg/kg', pver+1, 'A',  'Buoyancy Coefficient, cmu, I',                          phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_cms',           'g/kg/kg', pver+1, 'A',  'Buoyancy Coefficient, cms, I',                          phys_decomp )    
physics/cam/eddy_diff.F90:    call addfld('UW_tke',           'm2/s2',   pver+1, 'A',  'TKE, I',                                                phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_wcap',          'm2/s2',   pver+1, 'A',  'Wcap, I',                                               phys_decomp )        
physics/cam/eddy_diff.F90:    call addfld('UW_bprod',         'm2/s3',   pver+1, 'A',  'Buoyancy production, I',                                phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_sprod',         'm2/s3',   pver+1, 'A',  'Shear production, I',                                   phys_decomp )    
physics/cam/eddy_diff.F90:    call addfld('UW_kvh',           'm2/s',    pver+1, 'A',  'Eddy diffusivity of heat, I',                           phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_kvm',           'm2/s',    pver+1, 'A',  'Eddy diffusivity of uv, I',                             phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_pblh',          'm',       1,      'A',  'PBLH, 1',                                               phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_pblhp',         'Pa',      1,      'A',  'PBLH pressure, 1',                                      phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_tpert',         'K',       1,      'A',  'Convective T excess, 1',                                phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_qpert',         'kg/kg',   1,      'A',  'Convective qt excess, I',                               phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_wpert',         'm/s',     1,      'A',  'Convective W excess, I',                                phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_ustar',         'm/s',     1,      'A',  'Surface Frictional Velocity, 1',                        phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_tkes',          'm2/s2',   1,      'A',  'Surface TKE, 1',                                        phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_minpblh',       'm',       1,      'A',  'Minimum PBLH, 1',                                       phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_turbtype',      'no',      pver+1, 'A',  'Interface Turbulence Type, I',                          phys_decomp )    
physics/cam/eddy_diff.F90:    call addfld('UW_kbase_o',       'no',      ncvmax, 'A',  'Initial CL Base Exterbal Interface Index, CL',          phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_ktop_o',        'no',      ncvmax, 'A',  'Initial Top Exterbal Interface Index, CL',              phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_ncvfin_o',      '#',       1,      'A',  'Initial Total Number of CL regimes, CL',                phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_kbase_mg',      'no',      ncvmax, 'A',  'kbase after merging, CL',                               phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_ktop_mg',       'no',      ncvmax, 'A',  'ktop after merging, CL',                                phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_ncvfin_mg',     '#',       1,      'A',  'ncvfin after merging, CL',                              phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_kbase_f',       'no',      ncvmax, 'A',  'Final kbase with SRCL, CL',                             phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_ktop_f',        'no',      ncvmax, 'A',  'Final ktop with SRCL, CL',                              phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_ncvfin_f',      '#',       1,      'A',  'Final ncvfin with SRCL, CL',                            phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_wet',           'm/s',     ncvmax, 'A',  'Entrainment rate at CL top, CL',                        phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_web',           'm/s',     ncvmax, 'A',  'Entrainment rate at CL base, CL',                       phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_jtbu',          'm/s2',    ncvmax, 'A',  'Buoyancy jump across CL top, CL',                       phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_jbbu',          'm/s2',    ncvmax, 'A',  'Buoyancy jump across CL base, CL',                      phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_evhc',          'no',      ncvmax, 'A',  'Evaporative enhancement factor, CL',                    phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_jt2slv',        'J/kg',    ncvmax, 'A',  'slv jump for evhc, CL',                                 phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_n2ht',          's-2',     ncvmax, 'A',  'n2 at just below CL top interface, CL',                 phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_n2hb',          's-2',     ncvmax, 'A',  'n2 at just above CL base interface',                    phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_lwp',           'kg/m2',   ncvmax, 'A',  'LWP in the CL top layer, CL',                           phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_optdepth',      'no',      ncvmax, 'A',  'Optical depth of the CL top layer, CL',                 phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_radfrac',       'no',      ncvmax, 'A',  'Fraction of radiative cooling confined in the CL top',  phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_radf',          'm2/s3',   ncvmax, 'A',  'Buoyancy production at the CL top by radf, I',          phys_decomp )        
physics/cam/eddy_diff.F90:    call addfld('UW_wstar',         'm/s',     ncvmax, 'A',  'Convective velocity, Wstar, CL',                        phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_wstar3fact',    'no',      ncvmax, 'A',  'Enhancement of wstar3 due to entrainment, CL',          phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_ebrk',          'm2/s2',   ncvmax, 'A',  'CL-averaged TKE, CL',                                   phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_wbrk',          'm2/s2',   ncvmax, 'A',  'CL-averaged W, CL',                                     phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_lbrk',          'm',       ncvmax, 'A',  'CL internal thickness, CL',                             phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_ricl',          'no',      ncvmax, 'A',  'CL-averaged Ri, CL',                                    phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_ghcl',          'no',      ncvmax, 'A',  'CL-averaged gh, CL',                                    phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_shcl',          'no',      ncvmax, 'A',  'CL-averaged sh, CL',                                    phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_smcl',          'no',      ncvmax, 'A',  'CL-averaged sm, CL',                                    phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_gh',            'no',      pver+1, 'A',  'gh at all interfaces, I',                               phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_sh',            'no',      pver+1, 'A',  'sh at all interfaces, I',                               phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_sm',            'no',      pver+1, 'A',  'sm at all interfaces, I',                               phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_ria',           'no',      pver+1, 'A',  'ri at all interfaces, I',                               phys_decomp )
physics/cam/eddy_diff.F90:    call addfld('UW_leng',          'm/s',     pver+1, 'A',  'Turbulence length scale, I',                            phys_decomp )
physics/cam/eddy_diff.F90:    use cam_history,      only: outfld, addfld, phys_decomp
physics/cam/cldwat2m_macro.F90:   use cam_history,      only: addfld, add_default, phys_decomp, outfld 
physics/cam/cldwat.F90:! intent(out)s here for pcond to pass to stratiform.F90 to be addflded/outflded
physics/cam/convect_shallow.F90:   use cam_history,       only : outfld, addfld, add_default, phys_decomp
physics/cam/convect_shallow.F90:  use cam_history,       only : addfld, add_default, phys_decomp
physics/cam/convect_shallow.F90:  call addfld( 'qt_pre_Cu    ', 'kg/kg'   ,  pver ,  'I' , 'qt_preCU'                                         ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'sl_pre_Cu    ', 'J/kg'    ,  pver ,  'I' , 'sl_preCU'                                         ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'slv_pre_Cu   ', 'J/kg'    ,  pver ,  'I' , 'slv_preCU'                                        ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'u_pre_Cu     ', 'm/s'     ,  pver ,  'I' , 'u_preCU'                                          ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'v_pre_Cu     ', 'm/s'     ,  pver ,  'I' , 'v_preCU'                                          ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'qv_pre_Cu    ', 'kg/kg'   ,  pver ,  'I' , 'qv_preCU'                                         ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'ql_pre_Cu    ', 'kg/kg'   ,  pver ,  'I' , 'ql_preCU'                                         ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'qi_pre_Cu    ', 'kg/kg'   ,  pver ,  'I' , 'qi_preCU'                                         ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 't_pre_Cu     ', 'K'       ,  pver ,  'I' , 't_preCU'                                          ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'rh_pre_Cu    ', '%'       ,  pver ,  'I' , 'rh_preCU'                                         ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'qt_aft_Cu    ', 'kg/kg'   ,  pver ,  'I' , 'qt_afterCU'                                       ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'sl_aft_Cu    ', 'J/kg'    ,  pver ,  'I' , 'sl_afterCU'                                       ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'slv_aft_Cu   ', 'J/kg'    ,  pver ,  'I' , 'slv_afterCU'                                      ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'u_aft_Cu     ', 'm/s'     ,  pver ,  'I' , 'u_afterCU'                                        ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'v_aft_Cu     ', 'm/s'     ,  pver ,  'I' , 'v_afterCU'                                        ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'qv_aft_Cu    ', 'kg/kg'   ,  pver ,  'I' , 'qv_afterCU'                                       ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'ql_aft_Cu    ', 'kg/kg'   ,  pver ,  'I' , 'ql_afterCU'                                       ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'qi_aft_Cu    ', 'kg/kg'   ,  pver ,  'I' , 'qi_afterCU'                                       ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 't_aft_Cu     ', 'K'       ,  pver ,  'I' , 't_afterCU'                                        ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'rh_aft_Cu    ', '%'       ,  pver ,  'I' , 'rh_afterCU'                                       ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'tten_Cu      ', 'K/s'     ,  pver ,  'I' , 'Temprtaure tendency by cumulus convection'        ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'rhten_Cu     ', '%/s'     ,  pver ,  'I' , 'RH tendency by cumumus convection'                ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'CMFDT   '     , 'K/s     ',  pver ,  'A' , 'T tendency - shallow convection'                           ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'CMFDQ   '     , 'kg/kg/s ',  pver ,  'A' , 'QV tendency - shallow convection'                          ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'CMFDLIQ '     , 'kg/kg/s ',  pver ,  'A' , 'Cloud liq tendency - shallow convection'                   ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'CMFDICE '     , 'kg/kg/s ',  pver ,  'A' , 'Cloud ice tendency - shallow convection'                   ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'CMFDQR  '     , 'kg/kg/s ',  pver ,  'A' , 'Q tendency - shallow convection rainout'                   ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'EVAPTCM '     , 'K/s     ',  pver ,  'A' , 'T tendency - Evaporation/snow prod from Hack convection'   ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'FZSNTCM '     , 'K/s     ',  pver ,  'A' , 'T tendency - Rain to snow conversion from Hack convection' ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'EVSNTCM '     , 'K/s     ',  pver ,  'A' , 'T tendency - Snow to rain prod from Hack convection'       ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'EVAPQCM '     , 'kg/kg/s ',  pver ,  'A' , 'Q tendency - Evaporation from Hack convection'             ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'QC      '     , 'kg/kg/s ',  pver ,  'A' , 'Q tendency - shallow convection LW export'                 ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'PRECSH  '     , 'm/s     ',  1,      'A' , 'Shallow Convection precipitation rate'                     ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'CMFMC   '     , 'kg/m2/s ',  pverp,  'A' , 'Moist shallow convection mass flux'                        ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'CMFSL   '     , 'W/m2    ',  pverp,  'A' , 'Moist shallow convection liquid water static energy flux'  ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'CMFLQ   '     , 'W/m2    ',  pverp,  'A' , 'Moist shallow convection total water flux'                 ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'CIN     '     , 'J/kg    ',  1    ,  'A' , 'Convective inhibition'                                     ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'CBMF    '     , 'kg/m2/s ',  1    ,  'A' , 'Cloud base mass flux'                                      ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'CLDTOP  '     , '1       ',  1    ,  'I' , 'Vertical index of cloud top'                               ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'CLDBOT  '     , '1       ',  1    ,  'I' , 'Vertical index of cloud base'                              ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'PCLDTOP '     , '1       ',  1    ,  'A' , 'Pressure of cloud top'                                     ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'PCLDBOT '     , '1       ',  1    ,  'A' , 'Pressure of cloud base'                                    ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'FREQSH '      , 'fraction',  1    ,  'A' , 'Fractional occurance of shallow convection'                ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'HKFLXPRC'     , 'kg/m2/s ',  pverp,  'A' , 'Flux of precipitation from HK convection'                  ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'HKFLXSNW'     , 'kg/m2/s ',  pverp,  'A' , 'Flux of snow from HK convection'                           ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'HKNTPRPD'     , 'kg/kg/s ',  pver ,  'A' , 'Net precipitation production from HK convection'           ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'HKNTSNPD'     , 'kg/kg/s ',  pver ,  'A' , 'Net snow production from HK convection'                    ,  phys_decomp )
physics/cam/convect_shallow.F90:  call addfld( 'HKEIHEAT'     , 'W/kg'    ,  pver ,  'A' , 'Heating by ice and evaporation in HK convection'           ,  phys_decomp )
physics/cam/convect_shallow.F90:     call addfld( 'UWFLXPRC'     , 'kg/m2/s ',  pverp,  'A' , 'Flux of precipitation from UW shallow convection'          ,  phys_decomp )
physics/cam/convect_shallow.F90:     call addfld( 'UWFLXSNW'     , 'kg/m2/s ',  pverp,  'A' , 'Flux of snow from UW shallow convection'                   ,  phys_decomp )
physics/cam/co2_cycle.F90.bk:    use cam_history, only: addfld, add_default, phys_decomp
physics/cam/co2_cycle.F90.bk:       call addfld(trim(cnst_name(mm))//'_BOT', 'kg/kg',     1, 'A', trim(cnst_longname(mm))//', Bottom Layer', phys_decomp)
physics/cam/co2_cycle.F90.bk:       call addfld(cnst_name(mm),               'kg/kg',  pver, 'A', cnst_longname(mm), phys_decomp)
physics/cam/co2_cycle.F90.bk:       call addfld(sflxnam(mm),                 'kg/m2/s',   1, 'A', trim(cnst_name(mm))//' surface flux', phys_decomp)
physics/cam/co2_cycle.F90.bk:       ! The addfld call for the 'TM*' fields are made by default in the 
physics/cam/aoa_tracers.F90:    use cam_history,    only: addfld, add_default, phys_decomp
physics/cam/aoa_tracers.F90:       call addfld (cnst_name(mm), 'kg/kg   ', pver, 'A', cnst_longname(mm), phys_decomp)
physics/cam/aoa_tracers.F90:       call addfld (src_names(m),  'kg/kg/s ', pver, 'A', trim(cnst_name(mm))//' source/sink', phys_decomp)
physics/cam/mcshallow.F90:  use cam_history,    only:outfld, addfld, phys_decomp
physics/cam/mcshallow.F90:    use cam_history,   only:outfld, addfld, phys_decomp
physics/cam/mcshallow.F90:    call addfld('qtflx_Cu','kg/m2/s',pverp,'A','Cumulus qt flux',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('slflx_Cu','J/m2/s',pverp,'A','Cumulus sl flux',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('uflx_Cu','kg/m/s2',pverp,'A','Cumulus u flux',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('vflx_Cu','kg/m/s2',pverp,'A','Cumulus v flux',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('qtten_Cu','kg/kg/s',pver,'A','qt tendency by cumulus convection',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('slten_Cu','J/kg/s',pver,'A','sl tendency by cumulus convection',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('uten_Cu','m/s2',pver,'A','u tendency by cumulus convection',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('vten_Cu','m/s2',pver,'A','v tendency by cumulus convection',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('qvten_Cu','kg/kg/s',pver,'A','qv tendency by cumulus convection',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('qlten_Cu','kg/kg/s',pver,'A','ql tendency by cumulus convection',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('qiten_Cu','kg/kg/s',pver,'A','qi tendency by cumulus convection',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('cbmf_Cu','kg/m2/s',1,'A','Cumulus Base Mass Flux',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('ufrcinvbase_Cu','no',1,'A','Cumulus Fraction at PBL Top',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('ufrclcl_Cu','no',1,'A','Cumulus Fraction at LCL',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('winvbase_Cu','m/s',1,'A','Cumulus Vertical Velocity at PBL top',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('wlcl_Cu','m/s',1,'A','Cumulus Vertical Velocity at LCL',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('plcl_Cu','Pa',1,'A','LCL of Source Air',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('pinv_Cu','Pa',1,'A','PBL Top Pressure',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('plfc_Cu','Pa',1,'A','LFC of Source Air',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('pbup_Cu','Pa',1,'A','Highest Level of Positive Cu Buoyancy',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('ppen_Cu','Pa',1,'A','Highest Level where Cu W is 0',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('qtsrc_Cu','kg/kg',1,'A','Source Air qt',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('thlsrc_Cu','K',1,'A','Source Air thl',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('thvlsrc_Cu','K',1,'A','Source Air thvl',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('emfkbup_Cu','kg/m2/s',1,'A','Penetrative Mass Flux at kbup',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('cin_Cu','J/kg',1,'A','CIN upto LFC',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('cinlcl_Cu','J/kg',1,'A','CIN upto LCL',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('cbmflimit_Cu','kg/m2/s',1,'A','cbmflimiter',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('tkeavg_Cu','m2/s2',1,'A','tkeavg_Cu',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('zinv_Cu','m',1,'A','PBL Top Height',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('rcwp_Cu','kg/m2',1,'A','Cumulus LWP+IWP',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('rlwp_Cu','kg/m2',1,'A','Cumulus LWP',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('riwp_Cu','kg/m2',1,'A','Cumulus IWP',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('tophgt_Cu','m',1,'A','Cumulus Top Height',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('wu_Cu','m/s',pverp,'A','Cumulus Updraft Vertical Velocity',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('ufrc_Cu','no',pverp,'A','Updraft Fractional Area',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('qtu_Cu','kg/kg',pverp,'A','Cumulus Updraft qt',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('thlu_Cu','K',pverp,'A','Cumulus Updraft thl',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('thvu_Cu','K',pverp,'A','Cumulus Updraft thv',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('uu_Cu','m/s',pverp,'A','Cumulus Updraft uwnd',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('vu_Cu','m/s',pverp,'A','Cumulus Updraft vwnd',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('qtu_emf_Cu','kg/kg',pverp,'A','qt of penatratively entrained air',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('thlu_emf_Cu','K',pverp,'A','thl of penatratively entrained air',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('uu_emf_Cu','m/s',pverp,'A','uwnd of penatratively entrained air',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('vu_emf_Cu','m/s',pverp,'A','vwnd of penatratively entrained air',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('umf_Cu','kg/m2/s',pverp,'A','Cumulus Updraft Mass Flux',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('uemf_Cu','kg/m2/s',pverp,'A','Cumulus Net Mass Flux',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('qcu_Cu','kg/kg',pver,'A','Cumulus updraft LWC+IWC',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('qlu_Cu','kg/kg',pver,'A','Cumulus updraft LWC',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('qiu_Cu','kg/kg',pver,'A','Cumulus updraft IWC',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('cufrc_Cu','no',pver,'A','Cumulus cloud fraction',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('fer_Cu','1/m',pver,'A','Cumulus lateral fractional entrainment rate',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('fdr_Cu','1/m',pver,'A','Cumulus lateral fractional detrainment Rate',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('dwten_Cu','kg/kg/s',pver,'A','Expellsion rate of cumulus cloud water to env.',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('diten_Cu','kg/kg/s',pver,'A','Expellsion rate of cumulus ice water to env.',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('qrten_Cu','kg/kg/s',pver,'A','Production rate of rain by cumulus',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('qsten_Cu','kg/kg/s',pver,'A','Production rate of snow by cumulus',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('flxrain_Cu','kg/m2/s',pverp,'A','Rain flux induced by Cumulus',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('flxsnow_Cu','kg/m2/s',pverp,'A','Snow flux induced by Cumulus',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('ntraprd_Cu','kg/kg/s',pver,'A','Net production rate of rain by Cumulus',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('ntsnprd_Cu','kg/kg/s',pver,'A','Net production rate of snow by Cumulus',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('excessu_Cu','no',pver,'A','Updraft Saturation Excess',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('excess0_Cu','no',pver,'A','Environmental Saturation Excess',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('xc_Cu','no',pver,'A','Critical MIxing Ratio',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('aquad_Cu','no',pver,'A','aquad',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('bquad_Cu','no',pver,'A','bquad',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('cquad_Cu','no',pver,'A','cquad',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('bogbot_Cu','no',pver,'A','Cloud Buoyancy at the Bottom Interface',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('bogtop_Cu','no',pver,'A','Cloud Buoyancy at the Top Interface',phys_decomp)
physics/cam/mcshallow.F90:    call addfld('exit_UWCu_Cu','no',1,'A','exit_UWCu',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('exit_conden_Cu','no',1,'A','exit_conden',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('exit_klclmkx_Cu','no',1,'A','exit_klclmkx',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('exit_klfcmkx_Cu','no',1,'A','exit_klfcmkx',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('exit_ufrc_Cu','no',1,'A','exit_ufrc',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('exit_wtw_Cu','no',1,'A','exit_wtw',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('exit_drycore_Cu','no',1,'A','exit_drycore',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('exit_wu_Cu','no',1,'A','exit_wu',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('exit_cufilter_Cu','no',1,'A','exit_cufilter',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('exit_kinv1_Cu','no',1,'A','exit_kinv1',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('exit_rei_Cu','no',1,'A','exit_rei',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('limit_shcu_Cu','no',1,'A','limit_shcu',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('limit_negcon_Cu','no',1,'A','limit_negcon',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('limit_ufrc_Cu','no',1,'A','limit_ufrc',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('limit_ppen_Cu','no',1,'A','limit_ppen',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('limit_emf_Cu','no',1,'A','limit_emf',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('limit_cinlcl_Cu','no',1,'A','limit_cinlcl',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('limit_cin_Cu','no',1,'A','limit_cin',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('limit_cbmf_Cu','no',1,'A','limit_cbmf',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('limit_rei_Cu','no',1,'A','limit_rei',phys_decomp) 
physics/cam/mcshallow.F90:    call addfld('ind_delcin_Cu','no',1,'A','ind_delcin',phys_decomp) 
physics/cam/mcshallow.F90:    use cam_history,   only:outfld, addfld, phys_decomp
physics/cam/constituent_burden.F90:  use cam_history,   only: addfld, phys_decomp
physics/cam/constituent_burden.F90:    call addfld (burdennam(m), 'kg/m2', 1, 'A', &
physics/cam/constituents.F90:!++bee - temporary... These names should be declared in the module that makes the addfld and outfld calls.
physics/cam/cam_diagnostics.F90:   use cam_history,        only: addfld, add_default, phys_decomp
physics/cam/cam_diagnostics.F90:   call addfld ('NSTEP   ','timestep',1,    'A','Model timestep',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('PHIS    ','m2/s2   ',1,    'I','Surface geopotential',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('PS      ','Pa      ',1,    'A','Surface pressure',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('T       ','K       ',pver, 'A','Temperature',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('U       ','m/s     ',pver, 'A','Zonal wind',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('V       ','m/s     ',pver, 'A','Meridional wind',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld (cnst_name(1),'kg/kg ',pver, 'A',cnst_longname(1),phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TBP     ','K       ',pver, 'A','Temperature (before physics)'       ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld (bpcnst(1) ,'kg/kg   ',pver, 'A',cnst_longname(1)//' (before physics)',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TAP     ','K       ',pver, 'A','Temperature (after physics)'       ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('UAP     ','m/s     ',pver, 'A','Zonal wind (after physics)'        ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('VAP     ','m/s     ',pver, 'A','Meridional wind (after physics)'   ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld (apcnst(1) ,'kg/kg   ',pver, 'A',cnst_longname(1)//' (after physics)',phys_decomp)
physics/cam/cam_diagnostics.F90:      call addfld ('TFIX    ','K/s     ',1,    'A'     ,'T fixer (T equivalent of Energy correction)',phys_decomp)
physics/cam/cam_diagnostics.F90:      call addfld ('PTTEND_RESID','K/s ',pver, 'A'     ,&
physics/cam/cam_diagnostics.F90:   call addfld ('TTEND_TOT   ','K/s' ,pver, 'A','Total temperature tendency'   ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('Z3      ','m       ',pver, 'A','Geopotential Height (above sea level)',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('Z700    ','m       ',1,    'A','Geopotential Z at 700 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('Z500    ','m       ',1,    'A','Geopotential Z at 500 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('Z300    ','m       ',1,    'A','Geopotential Z at 300 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('Z200    ','m       ',1,    'A','Geopotential Z at 200 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('Z100    ','m       ',1,    'A','Geopotential Z at 100 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('Z050    ','m       ',1,    'A','Geopotential Z at 50 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('ZZ      ','m2      ',pver, 'A','Eddy height variance' ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('VZ      ','m2/s    ',pver, 'A','Meridional transport of geopotential energy',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('VT      ','K m/s   ',pver, 'A','Meridional heat transport',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('VU      ','m2/s2   ',pver, 'A','Meridional flux of zonal momentum' ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('VV      ','m2/s2   ',pver, 'A','Meridional velocity squared' ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('VQ      ','m/skg/kg',pver, 'A','Meridional water transport',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('QQ      ','kg2/kg2 ',pver, 'A','Eddy moisture variance',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('OMEGAV  ','m Pa/s2 ',pver ,'A','Vertical flux of meridional momentum' ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('OMGAOMGA','Pa2/s2  ',pver ,'A','Vertical flux of vertical momentum' ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('OMEGAQ  ','kgPa/kgs',pver ,'A','Vertical water transport' ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('UU      ','m2/s2   ',pver, 'A','Zonal velocity squared' ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('WSPEED  ','m/s     ',pver, 'X','Horizontal total wind speed' ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('OMEGA   ','Pa/s    ',pver, 'A','Vertical velocity (pressure)',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('OMEGAT  ','K Pa/s  ',pver, 'A','Vertical heat flux' ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('OMEGAU  ','m Pa/s2 ',pver, 'A','Vertical flux of zonal momentum' ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('OMEGA850','Pa/s    ',1,    'A','Vertical velocity at 850 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('OMEGA500','Pa/s    ',1,    'A','Vertical velocity at 500 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('MQ      ','kg/m2   ',pver, 'A','Water vapor mass in layer',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TMQ     ','kg/m2   ',1,    'A','Total (vertically integrated) precipitatable water',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('RELHUM  ','percent ',pver, 'A','Relative humidity',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('RHW  ','percent '   ,pver, 'A','Relative humidity with respect to liquid',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('RHI  ','percent '   ,pver, 'A','Relative humidity with respect to ice',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('RHCFMIP','percent ' ,pver, 'A','Relative humidity with respect to water above 273 K, ice below 273 K',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('PSL     ','Pa      ',1,    'A','Sea level pressure',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('T850    ','K       ',1,    'A','Temperature at 850 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('T500    ','K       ',1,    'A','Temperature at 500 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('T300    ','K       ',1,    'A','Temperature at 300 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('T200    ','K       ',1,    'A','Temperature at 200 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('Q850    ','kg/kg   ',1,    'A','Specific Humidity at 850 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('Q200    ','kg/kg   ',1,    'A','Specific Humidity at 700 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('U850    ','m/s     ',1,    'A','Zonal wind at 850 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('U200    ','m/s     ',1,    'A','Zonal wind at 200 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('U250    ','m/s     ',1,    'A','Zonal wind at 250 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('V850    ','m/s     ',1,    'A','Meridional wind at 850 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('V200    ','m/s     ',1,    'A','Meridional wind at 200 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('V250    ','m/s     ',1,    'A','Meridional wind at 250 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TT      ','K2      ',pver, 'A','Eddy temperature variance' ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('UBOT    ','m/s     ',1,    'A','Lowest model level zonal wind',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('VBOT    ','m/s     ',1,    'A','Lowest model level meridional wind',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('QBOT    ','kg/kg   ',1,    'A','Lowest model level water vapor mixing ratio',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('ZBOT    ','m       ',1,    'A','Lowest model level height', phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('ATMEINT  ','J/m2    ',1, 'A','Vertically integrated total atmospheric energy ',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('T1000      ','K     ',1,   'A','Temperature at 1000 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('T925       ','K     ',1,   'A','Temperature at 925 mbar pressure surface',phys_decomp)   
physics/cam/cam_diagnostics.F90:   call addfld ('T700       ','K     ',1,   'A','Temperature at 700 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('Q1000      ','kg/kg ',1,   'A','Specific Humidity at 1000 mbar pressure surface',phys_decomp)   
physics/cam/cam_diagnostics.F90:   call addfld ('Q925       ','kg/kg ',1,   'A','Specific Humidity at 925 mbar pressure surface',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('T7001000   ','K     ',1,   'A','Temperature difference 700 mb - 1000 mb',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TH7001000  ','K     ',1,   'A','Theta difference 700 mb - 1000 mb',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('THE7001000 ','K     ',1,   'A','ThetaE difference 700 mb - 1000 mb',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('T8501000   ','K     ',1,   'A','Temperature difference 850 mb - 1000 mb',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TH8501000  ','K     ',1,   'A','Theta difference 850 mb - 1000 mb',phys_decomp)   
physics/cam/cam_diagnostics.F90:   call addfld ('THE8501000 ','K     ',1,   'A','ThetaE difference 850 mb - 1000 mb',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('T9251000   ','K     ',1,   'A','Temperature difference 925 mb - 1000 mb',phys_decomp) 
physics/cam/cam_diagnostics.F90:   call addfld ('TH9251000  ','K     ',1,   'A','Theta difference 925 mb - 1000 mb',phys_decomp)   
physics/cam/cam_diagnostics.F90:   call addfld ('THE9251000 ','K     ',1,   'A','ThetaE difference 925 mb - 1000 mb',phys_decomp) 
physics/cam/cam_diagnostics.F90:      call addfld('QRS     ', 'K/s     ', pver, 'A', 'Solar heating rate', phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('PDELDRY ','Pa      ',pver, 'A','Dry pressure difference between levels',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('PSDRY   ','Pa      ',1,    'A','Surface pressure',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('DTCOND  ','K/s     ',pver, 'A','T tendency - moist processes',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('DTCOND_24_COS','K/s',pver, 'A','T tendency - moist processes 24hr. cos coeff.',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('DTCOND_24_SIN','K/s',pver, 'A','T tendency - moist processes 24hr. sin coeff.',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('DTCOND_12_COS','K/s',pver, 'A','T tendency - moist processes 12hr. cos coeff.',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('DTCOND_12_SIN','K/s',pver, 'A','T tendency - moist processes 12hr. sin coeff.',phys_decomp)
physics/cam/cam_diagnostics.F90:      call addfld (dcconnam(1), 'kg/kg/s',pver,'A',trim(cnst_name(1))//' tendency due to moist processes',phys_decomp)
physics/cam/cam_diagnostics.F90:            call addfld (dcconnam(m), 'kg/kg/s',pver,'A',trim(cnst_name(m))//' tendency due to moist processes',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('PRECL   ','m/s     ',1,    'A','Large-scale (stable) precipitation rate (liq + ice)'                ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('PRECC   ','m/s     ',1,    'A','Convective precipitation rate (liq + ice)'                          ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('PRECT   ','m/s     ',1,    'A','Total (convective and large-scale) precipitation rate (liq + ice)'  ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('PRECTMX ','m/s     ',1,    'X','Maximum (convective and large-scale) precipitation rate (liq+ice)'  ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('PRECSL  ','m/s     ',1,    'A','Large-scale (stable) snow rate (water equivalent)'                  ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('PRECSC  ','m/s     ',1,    'A','Convective snow rate (water equivalent)'                            ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('PRECCav ','m/s     ',1,    'A','Average large-scale precipitation (liq + ice)'                      ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('PRECLav ','m/s     ',1,    'A','Average convective precipitation  (liq + ice)'                      ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('SHFLX   ','W/m2    ',1,    'A','Surface sensible heat flux',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('LHFLX   ','W/m2    ',1,    'A','Surface latent heat flux',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('QFLX    ','kg/m2/s ',1,    'A','Surface water flux',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TAUX    ','N/m2    ',1,    'A','Zonal surface stress',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TAUY    ','N/m2    ',1,    'A','Meridional surface stress',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TREFHT  ','K       ',1,    'A','Reference height temperature',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TREFHTMN','K       ',1,    'M','Minimum reference height temperature over output period',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TREFHTMX','K       ',1,    'X','Maximum reference height temperature over output period',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('QREFHT  ','kg/kg   ',1,    'A','Reference height humidity',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('U10     ','m/s     ',1,    'A','10m wind speed',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('CO2     ','ug/m3     ',pver ,'A','CO2',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('USTARV  ','m/s     ',1,    'A','U* over the sea',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('FVV     ','m/s     ',1,    'A','U* over the land',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('REV     ','m/s     ',1,    'A','resistence over the sea',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('RAMV1   ','m/s     ',1,    'A','resistance over the land',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('RHREFHT ','fraction',1,    'A','Reference height relative humidity',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('LANDFRAC','fraction',1,    'A','Fraction of sfc area covered by land',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('ICEFRAC ','fraction',1,    'A','Fraction of sfc area covered by sea-ice',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('OCNFRAC ','fraction',1,    'A','Fraction of sfc area covered by ocean',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TREFMNAV','K       ',1,    'A','Average of TREFHT daily minimum',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TREFMXAV','K       ',1,    'A','Average of TREFHT daily maximum',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TS      ','K       ',1,    'A','Surface temperature (radiative)',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TSMN    ','K       ',1,    'M','Minimum surface temperature over output period',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TSMX    ','K       ',1,    'X','Maximum surface temperature over output period',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('SNOWHLND','m       ',1,    'A','Water equivalent snow depth',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('SNOWHICE','m       ',1,    'A','Water equivalent snow depth',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TBOT    ','K       ',1,    'A','Lowest model level temperature', phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('ASDIR',   '1',       1,    'A','albedo: shortwave, direct', phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('ASDIF',   '1',       1,    'A','albedo: shortwave, diffuse', phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('ALDIR',   '1',       1,    'A','albedo: longwave, direct', phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('ALDIF',   '1',       1,    'A','albedo: longwave, diffuse', phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('SST',     'K',       1,    'A','sea surface temperature', phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('PTTEND  '   ,'K/s     ',pver, 'A','T total physics tendency'                             ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld (ptendnam(       1),  'kg/kg/s ',pver, 'A',trim(cnst_name(       1))//' total physics tendency '      ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld (ptendnam(ixcldliq),  'kg/kg/s ',pver, 'A',trim(cnst_name(ixcldliq))//' total physics tendency '      ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld (ptendnam(ixcldice),  'kg/kg/s ',pver, 'A',trim(cnst_name(ixcldice))//' total physics tendency '      ,phys_decomp)
physics/cam/cam_diagnostics.F90:      call addfld (dmetendnam(       1),'kg/kg/s ',pver, 'A',trim(cnst_name(       1))//' dme adjustment tendency (FV) ',phys_decomp)
physics/cam/cam_diagnostics.F90:      call addfld (dmetendnam(ixcldliq),'kg/kg/s ',pver, 'A',trim(cnst_name(ixcldliq))//' dme adjustment tendency (FV) ',phys_decomp)
physics/cam/cam_diagnostics.F90:      call addfld (dmetendnam(ixcldice),'kg/kg/s ',pver, 'A',trim(cnst_name(ixcldice))//' dme adjustment tendency (FV) ',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('QCWAT&IC   ','kg/kg   ',pver, 'I','q associated with cloud water'                   ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TCWAT&IC   ','kg/kg   ',pver, 'I','T associated with cloud water'                   ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('LCWAT&IC   ','kg/kg   ',pver, 'I','Cloud water (ice + liq'                          ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('CLOUD&IC   ','fraction',pver, 'I','Cloud fraction'                                  ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('CONCLD&IC   ','fraction',pver, 'I','Convective cloud fraction'                      ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TKE&IC     ','m2/s2   ',pverp,'I','Turbulent Kinetic Energy'                        ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('CUSH&IC    ','m       ',1,    'I','Convective Scale Height'                         ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('KVH&IC     ','m2/s    ',pverp,'I','Vertical diffusion diffusivities (heat/moisture)',phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('KVM&IC     ','m2/s    ',pverp,'I','Vertical diffusion diffusivities (momentum)'     ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('PBLH&IC    ','m       ',1,    'I','PBL height'                                      ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TPERT&IC   ','K       ',1,    'I','Perturbation temperature (eddies in PBL)'        ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('QPERT&IC   ','kg/kg   ',1,    'I','Perturbation specific humidity (eddies in PBL)'  ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TBOT&IC    ','K       ',1,    'I','Lowest model level temperature'                  ,phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld('a2x_BCPHIWET', 'kg/m2/s', 1, 'A', 'wetdep of hydrophilic black carbon',   phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld('a2x_BCPHIDRY', 'kg/m2/s', 1, 'A', 'drydep of hydrophilic black carbon',   phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld('a2x_BCPHODRY', 'kg/m2/s', 1, 'A', 'drydep of hydrophobic black carbon',   phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld('a2x_OCPHIWET', 'kg/m2/s', 1, 'A', 'wetdep of hydrophilic organic carbon', phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld('a2x_OCPHIDRY', 'kg/m2/s', 1, 'A', 'drydep of hydrophilic organic carbon', phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld('a2x_OCPHODRY', 'kg/m2/s', 1, 'A', 'drydep of hydrophobic organic carbon', phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld('a2x_DSTWET1',  'kg/m2/s', 1, 'A', 'wetdep of dust (bin1)',                phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld('a2x_DSTDRY1',  'kg/m2/s', 1, 'A', 'drydep of dust (bin1)',                phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld('a2x_DSTWET2',  'kg/m2/s', 1, 'A', 'wetdep of dust (bin2)',                phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld('a2x_DSTDRY2',  'kg/m2/s', 1, 'A', 'drydep of dust (bin2)',                phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld('a2x_DSTWET3',  'kg/m2/s', 1, 'A', 'wetdep of dust (bin3)',                phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld('a2x_DSTDRY3',  'kg/m2/s', 1, 'A', 'drydep of dust (bin3)',                phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld('a2x_DSTWET4',  'kg/m2/s', 1, 'A', 'wetdep of dust (bin4)',                phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld('a2x_DSTDRY4',  'kg/m2/s', 1, 'A', 'drydep of dust (bin4)',                phys_decomp)
physics/cam/cam_diagnostics.F90:   call addfld ('TSOCN&IC   ','m       ',1,    'I','Ocean tempertare',phys_decomp)
physics/cam/cam_diagnostics.F90:     call addfld (tsnam(k),'K       ',1,'A',tsnam(k)//' subsoil temperature',phys_decomp)
physics/cam/cam_diagnostics.F90:  call addfld ('SICTHK  '   ,'m       ',1,'A','Sea ice thickness',phys_decomp)
physics/cam/cam_diagnostics.F90:  call addfld ('TSICE   '   ,'K       ',1,'A','Ice temperature',phys_decomp)
physics/cam/cam_diagnostics.F90:     call addfld (trim(tsnam(k))//'&IC','K       ',1,'I',tsnam(k)//' subsoil temperature',phys_decomp)
physics/cam/cam_diagnostics.F90:  call addfld ('SICTHK&IC  ','m       ',1,'I','Sea ice thickness'                      ,phys_decomp)
physics/cam/cam_diagnostics.F90:  call addfld ('TSICE&IC   ','K       ',1,'I','Ice temperature'                        ,phys_decomp)
physics/cam/cam_diagnostics.F90:  call addfld ('SNOWHICE&IC','m       ',1,'I','Water equivalent snow depth'            ,phys_decomp)
physics/cam/cam_diagnostics.F90:  call addfld ('ICEFRAC&IC ','fraction',1,'I','Fraction of sfc area covered by sea-ice',phys_decomp)
physics/cam/cam_diagnostics.F90:  call addfld ('TSICERAD&IC','K       ',1,'I','Radiatively equivalent ice temperature' ,phys_decomp)
physics/cam/check_energy.F90:    use cam_history,       only: addfld, phys_decomp
physics/cam/check_energy.F90:    call addfld('TEINP   ', 'W/m2', 1,    'A', 'Total energy of physics input',    phys_decomp)
physics/cam/check_energy.F90:    call addfld('TEOUT   ', 'W/m2', 1,    'A', 'Total energy of physics output',   phys_decomp)
physics/cam/check_energy.F90:    call addfld('TEFIX   ', 'W/m2', 1,    'A', 'Total energy after fixer',         phys_decomp)
physics/cam/check_energy.F90:    call addfld('DTCORE'  , 'K/s' , pver, 'I', 'T tendency due to dynamical core', phys_decomp)
physics/cam/uwshcu.F90:  use cam_history,    only: outfld, addfld, phys_decomp
physics/cam/uwshcu.F90:    use cam_history,   only: outfld, addfld, phys_decomp
physics/cam/uwshcu.F90:    call addfld( 'qtflx_Cu'       , 'kg/m2/s' , pverp , 'A' , 'Convective qt flux'                                  , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'slflx_Cu'       , 'J/m2/s'  , pverp , 'A' , 'Convective sl flux'                                  , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'uflx_Cu'        , 'kg/m/s2' , pverp , 'A' , 'Convective  u flux'                                  , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'vflx_Cu'        , 'kg/m/s2' , pverp , 'A' , 'Convective  v flux'                                  , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'qtten_Cu'       , 'kg/kg/s' , pver  , 'A' , 'qt tendency by convection'                           , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'slten_Cu'       , 'J/kg/s'  , pver  , 'A' , 'sl tendency by convection'                           , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'uten_Cu'        , 'm/s2'    , pver  , 'A' , ' u tendency by convection'                           , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'vten_Cu'        , 'm/s2'    , pver  , 'A' , ' v tendency by convection'                           , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'qvten_Cu'       , 'kg/kg/s' , pver  , 'A' , 'qv tendency by convection'                           , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'qlten_Cu'       , 'kg/kg/s' , pver  , 'A' , 'ql tendency by convection'                           , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'qiten_Cu'       , 'kg/kg/s' , pver  , 'A' , 'qi tendency by convection'                           , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'cbmf_Cu'        , 'kg/m2/s' , 1     , 'A' , 'Cumulus base mass flux'                              , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'ufrcinvbase_Cu' , 'fraction', 1     , 'A' , 'Cumulus fraction at PBL top'                         , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld( 'ufrclcl_Cu'     , 'fraction', 1     , 'A' , 'Cumulus fraction at LCL'                             , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'winvbase_Cu'    , 'm/s'     , 1     , 'A' , 'Cumulus vertical velocity at PBL top'                , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'wlcl_Cu'        , 'm/s'     , 1     , 'A' , 'Cumulus vertical velocity at LCL'                    , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'plcl_Cu'        , 'Pa'      , 1     , 'A' , 'LCL of source air'                                   , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'pinv_Cu'        , 'Pa'      , 1     , 'A' , 'PBL top pressure'                                    , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'plfc_Cu'        , 'Pa'      , 1     , 'A' , 'LFC of source air'                                   , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'pbup_Cu'        , 'Pa'      , 1     , 'A' , 'Highest interface level of positive cumulus buoyancy', phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'ppen_Cu'        , 'Pa'      , 1     , 'A' , 'Highest level where cumulus w is 0'                  , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'qtsrc_Cu'       , 'kg/kg'   , 1     , 'A' , 'Cumulus source air qt'                               , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'thlsrc_Cu'      , 'K'       , 1     , 'A' , 'Cumulus source air thl'                              , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'thvlsrc_Cu'     , 'K'       , 1     , 'A' , 'Cumulus source air thvl'                             , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'emfkbup_Cu'     , 'kg/m2/s' , 1     , 'A' , 'Penetrative mass flux at kbup'                       , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'cin_Cu'         , 'J/kg'    , 1     , 'A' , 'CIN upto LFC'                                        , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'cinlcl_Cu'      , 'J/kg'    , 1     , 'A' , 'CIN upto LCL'                                        , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'cbmflimit_Cu'   , 'kg/m2/s' , 1     , 'A' , 'cbmflimiter'                                         , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld( 'tkeavg_Cu'      , 'm2/s2'   , 1     , 'A' , 'Average tke within PBL for convection scheme'        , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld( 'zinv_Cu'        , 'm'       , 1     , 'A' , 'PBL top height'                                      , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'rcwp_Cu'        , 'kg/m2'   , 1     , 'A' , 'Cumulus LWP+IWP'                                     , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'rlwp_Cu'        , 'kg/m2'   , 1     , 'A' , 'Cumulus LWP'                                         , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'riwp_Cu'        , 'kg/m2'   , 1     , 'A' , 'Cumulus IWP'                                         , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'tophgt_Cu'      , 'm'       , 1     , 'A' , 'Cumulus top height'                                  , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'wu_Cu'          , 'm/s'     , pverp , 'A' , 'Convective updraft vertical velocity'                , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'ufrc_Cu'        , 'fraction', pverp , 'A' , 'Convective updraft fractional area'                  , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'qtu_Cu'         , 'kg/kg'   , pverp , 'A' , 'Cumulus updraft qt'                                  , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'thlu_Cu'        , 'K'       , pverp , 'A' , 'Cumulus updraft thl'                                 , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'thvu_Cu'        , 'K'       , pverp , 'A' , 'Cumulus updraft thv'                                 , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'uu_Cu'          , 'm/s'     , pverp , 'A' , 'Cumulus updraft uwnd'                                , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'vu_Cu'          , 'm/s'     , pverp , 'A' , 'Cumulus updraft vwnd'                                , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'qtu_emf_Cu'     , 'kg/kg'   , pverp , 'A' , 'qt of penatratively entrained air'                   , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'thlu_emf_Cu'    , 'K'       , pverp , 'A' , 'thl of penatratively entrained air'                  , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'uu_emf_Cu'      , 'm/s'     , pverp , 'A' , 'uwnd of penatratively entrained air'                 , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'vu_emf_Cu'      , 'm/s'     , pverp , 'A' , 'vwnd of penatratively entrained air'                 , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'umf_Cu'         , 'kg/m2/s' , pverp , 'A' , 'Cumulus updraft mass flux'                           , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'uemf_Cu'        , 'kg/m2/s' , pverp , 'A' , 'Cumulus net ( updraft + entrainment ) mass flux'     , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'qcu_Cu'         , 'kg/kg'   , pver  , 'A' , 'Cumulus updraft LWC+IWC'                             , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'qlu_Cu'         , 'kg/kg'   , pver  , 'A' , 'Cumulus updraft LWC'                                 , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'qiu_Cu'         , 'kg/kg'   , pver  , 'A' , 'Cumulus updraft IWC'                                 , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'cufrc_Cu'       , 'fraction', pver  , 'A' , 'Cumulus cloud fraction'                              , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'fer_Cu'         , '1/m'     , pver  , 'A' , 'Cumulus lateral fractional entrainment rate'         , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'fdr_Cu'         , '1/m'     , pver  , 'A' , 'Cumulus lateral fractional detrainment Rate'         , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'dwten_Cu'       , 'kg/kg/s' , pver  , 'A' , 'Expellsion rate of cumulus cloud water to env.'      , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'diten_Cu'       , 'kg/kg/s' , pver  , 'A' , 'Expellsion rate of cumulus ice water to env.'        , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'qrten_Cu'       , 'kg/kg/s' , pver  , 'A' , 'Production rate of rain by cumulus'                  , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'qsten_Cu'       , 'kg/kg/s' , pver  , 'A' , 'Production rate of snow by cumulus'                  , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'flxrain_Cu'     , 'kg/m2/s' , pverp , 'A' , 'Rain flux induced by Cumulus'                        , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'flxsnow_Cu'     , 'kg/m2/s' , pverp , 'A' , 'Snow flux induced by Cumulus'                        , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'ntraprd_Cu'     , 'kg/kg/s' , pver  , 'A' , 'Net production rate of rain by Cumulus'              , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'ntsnprd_Cu'     , 'kg/kg/s' , pver  , 'A' , 'Net production rate of snow by Cumulus'              , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'excessu_Cu'     , 'no'      , pver  , 'A' , 'Updraft saturation excess'                           , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'excess0_Cu'     , 'no'      , pver  , 'A' , 'Environmental saturation excess'                     , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'xc_Cu'          , 'no'      , pver  , 'A' , 'Critical mixing ratio'                               , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'aquad_Cu'       , 'no'      , pver  , 'A' , 'aquad'                                               , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'bquad_Cu'       , 'no'      , pver  , 'A' , 'bquad'                                               , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'cquad_Cu'       , 'no'      , pver  , 'A' , 'cquad'                                               , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'bogbot_Cu'      , 'no'      , pver  , 'A' , 'Cloud buoyancy at the bottom interface'              , phys_decomp )
physics/cam/uwshcu.F90:    call addfld( 'bogtop_Cu'      , 'no'      , pver  , 'A' , 'Cloud buoyancy at the top interface'                 , phys_decomp )
physics/cam/uwshcu.F90:    call addfld('exit_UWCu_Cu'    , 'no'      , 1     , 'A' , 'exit_UWCu'                                           , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('exit_conden_Cu'  , 'no'      , 1     , 'A' , 'exit_conden'                                         , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('exit_klclmkx_Cu' , 'no'      , 1     , 'A' , 'exit_klclmkx'                                        , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('exit_klfcmkx_Cu' , 'no'      , 1     , 'A' , 'exit_klfcmkx'                                        , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('exit_ufrc_Cu'    , 'no'      , 1     , 'A' , 'exit_ufrc'                                           , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('exit_wtw_Cu'     , 'no'      , 1     , 'A' , 'exit_wtw'                                            , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('exit_drycore_Cu' , 'no'      , 1     , 'A' , 'exit_drycore'                                        , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('exit_wu_Cu'      , 'no'      , 1     , 'A' , 'exit_wu'                                             , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('exit_cufilter_Cu', 'no'      , 1     , 'A' , 'exit_cufilter'                                       , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('exit_kinv1_Cu'   , 'no'      , 1     , 'A' , 'exit_kinv1'                                          , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('exit_rei_Cu'     , 'no'      , 1     , 'A' , 'exit_rei'                                            , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('limit_shcu_Cu'   , 'no'      , 1     , 'A' , 'limit_shcu'                                          , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('limit_negcon_Cu' , 'no'      , 1     , 'A' , 'limit_negcon'                                        , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('limit_ufrc_Cu'   , 'no'      , 1     , 'A' , 'limit_ufrc'                                          , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('limit_ppen_Cu'   , 'no'      , 1     , 'A' , 'limit_ppen'                                          , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('limit_emf_Cu'    , 'no'      , 1     , 'A' , 'limit_emf'                                           , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('limit_cinlcl_Cu' , 'no'      , 1     , 'A' , 'limit_cinlcl'                                        , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('limit_cin_Cu'    , 'no'      , 1     , 'A' , 'limit_cin'                                           , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('limit_cbmf_Cu'   , 'no'      , 1     , 'A' , 'limit_cbmf'                                          , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('limit_rei_Cu'    , 'no'      , 1     , 'A' , 'limit_rei'                                           , phys_decomp ) 
physics/cam/uwshcu.F90:    call addfld('ind_delcin_Cu'   , 'no'      , 1     , 'A' , 'ind_delcin'                                          , phys_decomp ) 
physics/cam/uwshcu.F90:    use cam_history,     only : outfld, addfld, phys_decomp
physics/cam/cldwat2m_micro.F90:  use cam_history,    only: addfld, add_default, phys_decomp, outfld
physics/cam/cldwat2m_micro.F90:   call addfld ('QRAIN   ','kg/kg   ',pver, 'A','Diagnostic grid-mean rain mixing ratio'         ,phys_decomp)	
physics/cam/cldwat2m_micro.F90:   call addfld ('QSNOW   ','kg/kg   ',pver, 'A','Diagnostic grid-mean snow mixing ratio'         ,phys_decomp)	
physics/cam/cldwat2m_micro.F90:   call addfld ('NRAIN   ','m-3     ',pver, 'A','Diagnostic grid-mean rain number conc'         ,phys_decomp)	
physics/cam/cldwat2m_micro.F90:   call addfld ('NSNOW   ','m-3     ',pver, 'A','Diagnostic grid-mean snow number conc'         ,phys_decomp)	
physics/cam/cldwat2m_micro.F90:   call addfld ('RERCLD   ','m      ',pver, 'A','Diagnostic effective radius of Liquid Cloud and Rain' ,phys_decomp)
physics/cam/cldwat2m_micro.F90:   call addfld ('DSNOW   ','m       ',pver, 'A','Diagnostic grid-mean snow diameter'         ,phys_decomp)	
physics/cam/cldwat2m_micro.F90:   call addfld ('REFL  ','DBz  ',pver, 'A','94 GHz radar reflectivity'       ,phys_decomp)
physics/cam/cldwat2m_micro.F90:   call addfld ('AREFL  ','DBz  ',pver, 'A','Average 94 GHz radar reflectivity'       ,phys_decomp)
physics/cam/cldwat2m_micro.F90:   call addfld ('FREFL  ','fraction  ',pver, 'A','Fractional occurance of radar reflectivity'       ,phys_decomp)
physics/cam/cldwat2m_micro.F90:   call addfld ('CSRFL  ','DBz  ',pver, 'A','94 GHz radar reflectivity (CloudSat thresholds)'       ,phys_decomp)
physics/cam/cldwat2m_micro.F90:   call addfld ('ACSRFL  ','DBz  ',pver, 'A','Average 94 GHz radar reflectivity (CloudSat thresholds)'       ,phys_decomp)
physics/cam/cldwat2m_micro.F90:   call addfld ('FCSRFL  ','fraction  ',pver, 'A','Fractional occurance of radar reflectivity (CloudSat thresholds)' &
physics/cam/cldwat2m_micro.F90:   call addfld ('AREFLZ ','mm^6/m^3 ',pver, 'A','Average 94 GHz radar reflectivity'       ,phys_decomp)
physics/cam/cldwat2m_micro.F90:    call addfld ('NCAL    ','#/m3   ',pver, 'A','Number Concentation Activated for Liquid',phys_decomp)
physics/cam/cldwat2m_micro.F90:    call addfld ('NCAI    ','#/m3   ',pver, 'A','Number Concentation Activated for Ice',phys_decomp)
physics/cam/cldwat2m_micro.F90:   call addfld ('AQRAIN   ','kg/kg   ',pver, 'A','Average rain mixing ratio'         ,phys_decomp)	
physics/cam/cldwat2m_micro.F90:   call addfld ('AQSNOW   ','kg/kg   ',pver, 'A','Average snow mixing ratio'         ,phys_decomp)	
physics/cam/cldwat2m_micro.F90:   call addfld ('ANRAIN   ','m-3     ',pver, 'A','Average rain number conc'         ,phys_decomp)	
physics/cam/cldwat2m_micro.F90:   call addfld ('ANSNOW   ','m-3     ',pver, 'A','Average snow number conc'         ,phys_decomp)
physics/cam/cldwat2m_micro.F90:   call addfld ('ADRAIN   ','Micron  ',pver, 'A','Average rain effective Diameter'         ,phys_decomp)	
physics/cam/cldwat2m_micro.F90:   call addfld ('ADSNOW   ','Micron  ',pver, 'A','Average snow effective Diameter'         ,phys_decomp)
physics/cam/cldwat2m_micro.F90:   call addfld ('FREQR  ','fraction  ',pver, 'A','Fractional occurance of rain'       ,phys_decomp)
physics/cam/cldwat2m_micro.F90:   call addfld ('FREQS  ','fraction  ',pver, 'A','Fractional occurance of snow'       ,phys_decomp)
physics/cam/vertical_diffusion.F90:    use cam_history,       only : addfld, add_default, phys_decomp
physics/cam/vertical_diffusion.F90:        call addfld( 'TTPXMLC', 'K/S', 1, 'A', 'Top interf. temp. flux: molec. viscosity', phys_decomp )
physics/cam/vertical_diffusion.F90:        call addfld( 'TAUTMSX' ,'N/m2  ',  1,  'A',  'Zonal      turbulent mountain surface stress',  phys_decomp )
physics/cam/vertical_diffusion.F90:        call addfld( 'TAUTMSY' ,'N/m2  ',  1,  'A',  'Meridional turbulent mountain surface stress',  phys_decomp )
physics/cam/vertical_diffusion.F90:       call addfld( vdiffnam(k), 'kg/kg/s ', pver, 'A', 'Vertical diffusion of '//cnst_name(k), phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'TKE'         , 'm2/s2'  , pverp  , 'A', 'Turbulent Kinetic Energy'                          , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'PBLH'        , 'm'      , 1      , 'A', 'PBL height'                                        , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'TPERT'       , 'K'      , 1      , 'A', 'Perturbation temperature (eddies in PBL)'          , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'QPERT'       , 'kg/kg'  , 1      , 'A', 'Perturbation specific humidity (eddies in PBL)'    , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'USTAR'       , 'm/s'    , 1      , 'A', 'Surface friction velocity'                         , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'KVH'         , 'm2/s'   , pverp  , 'A', 'Vertical diffusion diffusivities (heat/moisture)'  , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'KVM'         , 'm2/s'   , pverp  , 'A', 'Vertical diffusion diffusivities (momentum)'       , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'CGS'         , 's/m2'   , pverp  , 'A', 'Counter-gradient coeff on surface kinematic fluxes', phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'DTVKE'       , 'K/s'    , pver   , 'A', 'dT/dt vertical diffusion KE dissipation'           , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'DTV'         , 'K/s'    , pver   , 'A', 'T vertical diffusion'                              , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'DUV'         , 'm/s2'   , pver   , 'A', 'U vertical diffusion'                              , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'DVV'         , 'm/s2'   , pver   , 'A', 'V vertical diffusion'                              , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'QT'          , 'kg/kg'  , pver   , 'A', 'Total water mixing ratio'                          , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'SL'          , 'J/kg'   , pver   , 'A', 'Liquid water static energy'                        , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'SLV'         , 'J/kg'   , pver   , 'A', 'Liq wat virtual static energy'                     , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'SLFLX'       , 'W/m2'   , pverp  , 'A', 'Liquid static energy flux'                         , phys_decomp ) 
physics/cam/vertical_diffusion.F90:    call addfld( 'QTFLX'       , 'W/m2'   , pverp  , 'A', 'Total water flux'                                  , phys_decomp ) 
physics/cam/vertical_diffusion.F90:    call addfld( 'UFLX'        , 'W/m2'   , pverp  , 'A', 'Zonal momentum flux'                               , phys_decomp ) 
physics/cam/vertical_diffusion.F90:    call addfld( 'VFLX'        , 'W/m2'   , pverp  , 'A', 'Meridional momentm flux'                           , phys_decomp ) 
physics/cam/vertical_diffusion.F90:    call addfld( 'WGUSTD'      , 'm/s'    , 1      , 'A', 'wind gusts from turbulence'                        , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'qt_pre_PBL  ', 'kg/kg'  , pver   , 'A', 'qt_prePBL'                                         , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'sl_pre_PBL  ', 'J/kg'   , pver   , 'A', 'sl_prePBL'                                         , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'slv_pre_PBL ', 'J/kg'   , pver   , 'A', 'slv_prePBL'                                        , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'u_pre_PBL   ', 'm/s'    , pver   , 'A', 'u_prePBL'                                          , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'v_pre_PBL   ', 'm/s'    , pver   , 'A', 'v_prePBL'                                          , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'qv_pre_PBL  ', 'kg/kg'  , pver   , 'A', 'qv_prePBL'                                         , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'ql_pre_PBL  ', 'kg/kg'  , pver   , 'A', 'ql_prePBL'                                         , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'qi_pre_PBL  ', 'kg/kg'  , pver   , 'A', 'qi_prePBL'                                         , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 't_pre_PBL   ', 'K'      , pver   , 'A', 't_prePBL'                                          , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'rh_pre_PBL  ', '%'      , pver   , 'A', 'rh_prePBL'                                         , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'qt_aft_PBL  ', 'kg/kg'  , pver   , 'A', 'qt_afterPBL'                                       , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'sl_aft_PBL  ', 'J/kg'   , pver   , 'A', 'sl_afterPBL'                                       , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'slv_aft_PBL ', 'J/kg'   , pver   , 'A', 'slv_afterPBL'                                      , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'u_aft_PBL   ', 'm/s'    , pver   , 'A', 'u_afterPBL'                                        , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'v_aft_PBL   ', 'm/s'    , pver   , 'A', 'v_afterPBL'                                        , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'qv_aft_PBL  ', 'kg/kg'  , pver   , 'A', 'qv_afterPBL'                                       , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'ql_aft_PBL  ', 'kg/kg'  , pver   , 'A', 'ql_afterPBL'                                       , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'qi_aft_PBL  ', 'kg/kg'  , pver   , 'A', 'qi_afterPBL'                                       , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 't_aft_PBL   ', 'K'      , pver   , 'A', 't_afterPBL'                                        , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'rh_aft_PBL  ', '%'      , pver   , 'A', 'rh_afterPBL'                                       , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'slflx_PBL   ', 'J/m2/s' , pverp  , 'A', 'sl flux by PBL'                                    , phys_decomp ) 
physics/cam/vertical_diffusion.F90:    call addfld( 'qtflx_PBL   ', 'kg/m2/s', pverp  , 'A', 'qt flux by PBL'                                    , phys_decomp ) 
physics/cam/vertical_diffusion.F90:    call addfld( 'uflx_PBL    ', 'kg/m/s2', pverp  , 'A', 'u flux by PBL'                                     , phys_decomp ) 
physics/cam/vertical_diffusion.F90:    call addfld( 'vflx_PBL    ', 'kg/m/s2', pverp  , 'A', 'v flux by PBL'                                     , phys_decomp ) 
physics/cam/vertical_diffusion.F90:    call addfld( 'slflx_cg_PBL', 'J/m2/s' , pverp  , 'A', 'sl_cg flux by PBL'                                 , phys_decomp ) 
physics/cam/vertical_diffusion.F90:    call addfld( 'qtflx_cg_PBL', 'kg/m2/s', pverp  , 'A', 'qt_cg flux by PBL'                                 , phys_decomp ) 
physics/cam/vertical_diffusion.F90:    call addfld( 'uflx_cg_PBL ', 'kg/m/s2', pverp  , 'A', 'u_cg flux by PBL'                                  , phys_decomp ) 
physics/cam/vertical_diffusion.F90:    call addfld( 'vflx_cg_PBL ', 'kg/m/s2', pverp  , 'A', 'v_cg flux by PBL'                                  , phys_decomp ) 
physics/cam/vertical_diffusion.F90:    call addfld( 'qtten_PBL   ', 'kg/kg/s', pver   , 'A', 'qt tendency by PBL'                                , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'slten_PBL   ', 'J/kg/s' , pver   , 'A', 'sl tendency by PBL'                                , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'uten_PBL    ', 'm/s2'   , pver   , 'A', 'u tendency by PBL'                                 , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'vten_PBL    ', 'm/s2'   , pver   , 'A', 'v tendency by PBL'                                 , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'qvten_PBL   ', 'kg/kg/s', pver   , 'A', 'qv tendency by PBL'                                , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'qlten_PBL   ', 'kg/kg/s', pver   , 'A', 'ql tendency by PBL'                                , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'qiten_PBL   ', 'kg/kg/s', pver   , 'A', 'qi tendency by PBL'                                , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'tten_PBL    ', 'K/s'    , pver   , 'A', 'T tendency by PBL'                                 , phys_decomp )
physics/cam/vertical_diffusion.F90:    call addfld( 'rhten_PBL   ', '%/s'    , pver   , 'A', 'RH tendency by PBL'                                , phys_decomp )
physics/cam/vertical_diffusion.F90:        call addfld( 'BPROD   ','M2/S3   ',pverp, 'A','Buoyancy Production',phys_decomp)
physics/cam/vertical_diffusion.F90:        call addfld( 'SPROD   ','M2/S3   ',pverp, 'A','Shear Production',phys_decomp)
physics/cam/vertical_diffusion.F90:        call addfld( 'SFI     ','FRACTION',pverp, 'A','Interface-layer sat frac',phys_decomp)       
physics/cam/macrop_driver.F90:    use cam_history,     only: addfld, add_default, phys_decomp
physics/cam/macrop_driver.F90:    call addfld ('DPDLFLIQ ', 'kg/kg/s ', pver, 'A', 'Detrained liquid water from deep convection'             ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('DPDLFICE ', 'kg/kg/s ', pver, 'A', 'Detrained ice from deep convection'                      ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('SHDLFLIQ ', 'kg/kg/s ', pver, 'A', 'Detrained liquid water from shallow convection'          ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('SHDLFICE ', 'kg/kg/s ', pver, 'A', 'Detrained ice from shallow convection'                   ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('DPDLFT   ', 'K/s     ', pver, 'A', 'T-tendency due to deep convective detrainment'           ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('SHDLFT   ', 'K/s     ', pver, 'A', 'T-tendency due to shallow convective detrainment'        ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('ZMDLF    ', 'kg/kg/s ', pver, 'A', 'Detrained liquid water from ZM convection'               ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('MACPDT   ', 'W/kg    ', pver, 'A', 'Heating tendency - Revised  macrophysics'                ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('MACPDQ   ', 'kg/kg/s ', pver, 'A', 'Q tendency - Revised macrophysics'                       ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('MACPDLIQ ', 'kg/kg/s ', pver, 'A', 'CLDLIQ tendency - Revised macrophysics'                  ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('MACPDICE ', 'kg/kg/s ', pver, 'A', 'CLDICE tendency - Revised macrophysics'                  ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('CLDVAPADJ', 'kg/kg/s ', pver, 'A', 'Q tendency associated with liq/ice adjustment - Revised macrophysics' ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('CLDLIQADJ', 'kg/kg/s ', pver, 'A', 'CLDLIQ adjustment tendency - Revised macrophysics'       ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('CLDICEADJ', 'kg/kg/s ', pver, 'A', 'CLDICE adjustment tendency - Revised macrophysics'       ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('CLDLIQDET', 'kg/kg/s ', pver, 'A', 'Detrainment of conv cld liq into envrionment  - Revised macrophysics' ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('CLDICEDET', 'kg/kg/s ', pver, 'A', 'Detrainment of conv cld ice into envrionment  - Revised macrophysics' ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('CLDLIQLIM', 'kg/kg/s ', pver, 'A', 'CLDLIQ limiting tendency - Revised macrophysics'         ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('CLDICELIM', 'kg/kg/s ', pver, 'A', 'CLDICE limiting tendency - Revised macrophysics'         ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('CNVCLD   ', 'fraction', 1,    'A', 'Vertically integrated convective cloud amount'           ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('CLDST    ', 'fraction', pver, 'A', 'Stratus cloud fraction'                                  ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('CONCLD   ', 'fraction', pver, 'A', 'Convective cloud cover'                                  ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('CLDLIQSTR   ', 'kg/kg', pver, 'A', 'Stratiform CLDLIQ'                                  ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('CLDICESTR   ', 'kg/kg', pver, 'A', 'Stratiform CLDICE'                                  ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('CLDLIQCON   ', 'kg/kg', pver, 'A', 'Convective CLDLIQ'                                  ,phys_decomp)
physics/cam/macrop_driver.F90:    call addfld ('CLDICECON   ', 'kg/kg', pver, 'A', 'Convective CLDICE'                                  ,phys_decomp)
physics/cam/tracers.F90:!  		-> addfld/add default for surface flux (SF)
physics/cam/tracers.F90:   use cam_history,     only: addfld, add_default, phys_decomp
physics/cam/tracers.F90:         call addfld (cnst_name(mm), 'kg/kg   ', pver, 'A', cnst_longname(mm), phys_decomp)
physics/cam/tracers.F90:         call addfld (sflxnam(mm),   'kg/m2/s ',    1, 'A', trim(cnst_name(mm))//' surface flux', phys_decomp)
physics/cam/ndrop.F90:      use cam_history,   only: addfld, add_default, phys_decomp
physics/cam/ndrop.F90:      call addfld ('WTKE     ', 'm/s     ', pver, 'A', 'Standard deviation of updraft velocity'                  ,phys_decomp)
physics/cam/ndrop.F90:      call addfld ('LCLOUD   ', '        ', pver, 'A', 'Liquid cloud fraction'                                   ,phys_decomp)
physics/cam/ndrop.F90:      call addfld ('NDROPMIX ', '#/kg/s  ', pver, 'A', 'Droplet number mixing'                     ,phys_decomp)
physics/cam/ndrop.F90:      call addfld ('NDROPSRC ', '#/kg/s  ', pver, 'A', 'Droplet number source'                     ,phys_decomp)
physics/cam/ndrop.F90:      call addfld ('NDROPSNK ', '#/kg/s  ', pver, 'A', 'Droplet number loss by microphysics'       ,phys_decomp)
physics/cam/ndrop.F90:      call addfld ('NDROPCOL ', '#/m2    ', 1,    'A', 'Column droplet number'                     ,phys_decomp)
physics/cam/radiation.F90:    use cam_history,    only: addfld, add_default, phys_decomp
physics/cam/radiation.F90:    call addfld ('SOLIN   ','W/m2    ',1,    'A','Solar insolation',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('SOLL    ','W/m2    ',1,    'A','Solar downward near infrared direct  to surface',phys_decomp, &
physics/cam/radiation.F90:    call addfld ('SOLS    ','W/m2    ',1,    'A','Solar downward visible direct  to surface',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('SOLLD   ','W/m2    ',1,    'A','Solar downward near infrared diffuse to surface',phys_decomp, &
physics/cam/radiation.F90:    call addfld ('SOLSD   ','W/m2    ',1,    'A','Solar downward visible diffuse to surface',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('QRS     ','K/s     ',pver, 'A','Solar heating rate',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('QRSC    ','K/s     ',pver, 'A','Clearsky solar heating rate',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FSNS    ','W/m2    ',1,    'A','Net solar flux at surface',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FSNT    ','W/m2    ',1,    'A','Net solar flux at top of model',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FSNTOA  ','W/m2    ',1,    'A','Net solar flux at top of atmosphere',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FSUTOA  ','W/m2    ',1,    'A','Upwelling solar flux at top of atmosphere',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FSNTOAC ','W/m2    ',1,    'A','Clearsky net solar flux at top of atmosphere',phys_decomp, &
physics/cam/radiation.F90:    call addfld ('FSDTOA  ','W/m2    ',1,    'A','Downwelling solar flux at top of atmosphere',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FSN200  ','W/m2    ',1,    'A','Net shortwave flux at 200 mb',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FSN200C ','W/m2    ',1,    'A','Clearsky net shortwave flux at 200 mb',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FSNTC   ','W/m2    ',1,    'A','Clearsky net solar flux at top of model',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FSNSC   ','W/m2    ',1,    'A','Clearsky net solar flux at surface',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FSDSC   ','W/m2    ',1,    'A','Clearsky downwelling solar flux at surface',phys_decomp, &
physics/cam/radiation.F90:    call addfld ('FSDS    ','W/m2    ',1,    'A','Downwelling solar flux at surface',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FUS     ','W/m2    ',pverp,'I','Shortwave upward flux',phys_decomp)
physics/cam/radiation.F90:    call addfld ('FDS     ','W/m2    ',pverp,'I','Shortwave downward flux',phys_decomp)
physics/cam/radiation.F90:    call addfld ('FUSC    ','W/m2    ',pverp,'I','Shortwave clear-sky upward flux',phys_decomp)
physics/cam/radiation.F90:    call addfld ('FDSC    ','W/m2    ',pverp,'I','Shortwave clear-sky downward flux',phys_decomp)
physics/cam/radiation.F90:    call addfld ('FSNIRTOA','W/m2    ',1,    'A','Net near-infrared flux (Nimbus-7 WFOV) at top of atmosphere', &
physics/cam/radiation.F90:    call addfld ('FSNRTOAC','W/m2    ',1,    'A','Clearsky net near-infrared flux (Nimbus-7 WFOV) at top of atmosphere', &
physics/cam/radiation.F90:    call addfld ('FSNRTOAS','W/m2    ',1,    'A','Net near-infrared flux (>= 0.7 microns) at top of atmosphere',phys_decomp, &
physics/cam/radiation.F90:    call addfld ('SWCF    ','W/m2    ',1,    'A','Shortwave cloud forcing',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('TOT_CLD_VISTAU    ','1',pver,    'A','Total gbx cloud visible sw optical depth',phys_decomp, sampling_seq='rad_lwsw',flag_xyfill=.true.)
physics/cam/radiation.F90:    call addfld ('TOT_ICLD_VISTAU   ','1',pver,    'A','Total in-cloud visible sw optical depth',phys_decomp, sampling_seq='rad_lwsw',flag_xyfill=.true.)
physics/cam/radiation.F90:    call addfld ('LIQ_ICLD_VISTAU   ','1',pver,    'A','Liquid in-cloud visible sw optical depth',phys_decomp, sampling_seq='rad_lwsw',flag_xyfill=.true.)
physics/cam/radiation.F90:    call addfld ('ICE_ICLD_VISTAU   ','1',pver,    'A','Ice in-cloud visible sw optical depth',phys_decomp, sampling_seq='rad_lwsw',flag_xyfill=.true.)
physics/cam/radiation.F90:    call addfld ('QRL     ','K/s     ',pver, 'A','Longwave heating rate',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('QRLC    ','K/s     ',pver, 'A','Clearsky longwave heating rate',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FLNS    ','W/m2    ',1,    'A','Net longwave flux at surface',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FLDS    ','W/m2    ',1,    'A','Downwelling longwave flux at surface',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FLNT    ','W/m2    ',1,    'A','Net longwave flux at top of model',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FLUT    ','W/m2    ',1,    'A','Upwelling longwave flux at top of model',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FLUTC   ','W/m2    ',1,    'A','Clearsky upwelling longwave flux at top of model',phys_decomp, &
physics/cam/radiation.F90:    call addfld ('FLNTC   ','W/m2    ',1,    'A','Clearsky net longwave flux at top of model',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FLN200  ','W/m2    ',1,    'A','Net longwave flux at 200 mb',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FLN200C ','W/m2    ',1,    'A','Clearsky net longwave flux at 200 mb',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FLNSC   ','W/m2    ',1,    'A','Clearsky net longwave flux at surface',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FLDSC   ','W/m2    ',1,    'A','Clearsky downwelling longwave flux at surface',phys_decomp, &
physics/cam/radiation.F90:    call addfld ('LWCF    ','W/m2    ',1,    'A','Longwave cloud forcing',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('FUL     ','W/m2    ',pverp,'I','Longwave upward flux',phys_decomp)
physics/cam/radiation.F90:    call addfld ('FDL     ','W/m2    ',pverp,'I','Longwave downward flux',phys_decomp)
physics/cam/radiation.F90:    call addfld ('FULC    ','W/m2    ',pverp,'I','Longwave clear-sky upward flux',phys_decomp)
physics/cam/radiation.F90:    call addfld ('FDLC    ','W/m2    ',pverp,'I','Longwave clear-sky downward flux',phys_decomp)
physics/cam/radiation.F90:    call addfld ('HR      ','K/s     ',pver, 'A','Heating rate needed for d(theta)/dt computation',phys_decomp)
physics/cam/radiation.F90:    call addfld ('SRFRAD  ','W/m2    ',1,    'A','Net radiative flux at surface',phys_decomp)
physics/cam/radiation.F90:    call addfld ('CLOUD   ','fraction',pver, 'A','Cloud fraction',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('CLDTOT  ','fraction',1,    'A','Vertically-integrated total cloud',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('CLDLOW  ','fraction',1,    'A','Vertically-integrated low cloud',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('CLDMED  ','fraction',1,    'A','Vertically-integrated mid-level cloud',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/radiation.F90:    call addfld ('CLDHGH  ','fraction',1,    'A','Vertically-integrated high cloud',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/physpkg.F90:   ! diag_init makes addfld calls for dynamics fields that are output from
physics/cam/microp_aero.F90:  use cam_history,    only: addfld, add_default, phys_decomp, outfld 
physics/cam/microp_aero.F90:      call addfld(aername(iaer)//'_m3', 'm-3', pver, 'A', 'aerosol number concentration', phys_decomp)
physics/cam/microp_aero.F90:   call addfld ('CCN1    ','#/cm3   ',pver, 'A','CCN concentration at S=0.02%',phys_decomp)
physics/cam/microp_aero.F90:   call addfld ('CCN2    ','#/cm3   ',pver, 'A','CCN concentration at S=0.05%',phys_decomp)
physics/cam/microp_aero.F90:   call addfld ('CCN3    ','#/cm3   ',pver, 'A','CCN concentration at S=0.1%',phys_decomp)
physics/cam/microp_aero.F90:   call addfld ('CCN4    ','#/cm3   ',pver, 'A','CCN concentration at S=0.2%',phys_decomp)
physics/cam/microp_aero.F90:   call addfld ('CCN5    ','#/cm3   ',pver, 'A','CCN concentration at S=0.5%',phys_decomp)
physics/cam/microp_aero.F90:   call addfld ('CCN6    ','#/cm3   ',pver, 'A','CCN concentration at S=1.0%',phys_decomp)
physics/cam/microp_aero.F90:   call addfld ('NIHF    ','#/m3   ',pver, 'A','Activated Ice Number Concentation due to homogenous freezing',phys_decomp)
physics/cam/microp_aero.F90:   call addfld ('NIDEP    ','#/m3   ',pver, 'A','Activated Ice Number Concentation due to deposition nucleation',phys_decomp)
physics/cam/microp_aero.F90:   call addfld ('NIIMM    ','#/m3   ',pver, 'A','Activated Ice Number Concentation due to immersion freezing',phys_decomp)
physics/cam/microp_aero.F90:   call addfld ('NIMEY    ','#/m3   ',pver, 'A','Activated Ice Number Concentation due to meyers deposition',phys_decomp)
physics/cam/microp_aero.F90:       call addfld( fieldname, unit, 1, 'A', long_name, phys_decomp )
physics/cam/microp_aero.F90:          if ( masterproc ) write(*,'(2a)') 'microp_driver_init addfld - ', fieldname
physics/cam/cospsimulator_intr.F90:   use cam_history,     only: addfld, add_default, phys_decomp, outfld
physics/cam/cospsimulator_intr.F90:   use cam_history,         only: addfld, add_default, phys_decomp
physics/cam/cospsimulator_intr.F90:! ADDFLD ADD_DEFAULT CALLS FOR COSP OUTPUTS
physics/cam/cospsimulator_intr.F90:! notes on addfld/add_default/outfld calls:  
physics/cam/cospsimulator_intr.F90:! 3) Need conditional logic so that addfld,add_default,and outfld calls are only executed when fields are available.
physics/cam/cospsimulator_intr.F90:! Solution? I removed all of the spaces in the addfld calls, add_default, and outfld calls.
physics/cam/cospsimulator_intr.F90:      !! addfld calls for all
physics/cam/cospsimulator_intr.F90:      call addfld('FISCCP1_COSP','percent   ',nprs_cosp*ntau_cosp,'A', &
physics/cam/cospsimulator_intr.F90:      call addfld('CLDTOT_ISCCP','percent', 1,'A', &
physics/cam/cospsimulator_intr.F90:      call addfld('MEANCLDALB_ISCCP','1',1,'A','Mean cloud albedo*CLDTOT_ISCCP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld('MEANPTOP_ISCCP','Pa',1,'A','Mean cloud top pressure*CLDTOT_ISCCP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('TAU_ISCCP','1',nscol_cosp,'I','Optical Depth in each Subcolumn',&
physics/cam/cospsimulator_intr.F90:      call addfld ('CLDPTOP_ISCCP','Pa',nscol_cosp,'I','Cloud Top Pressure in each Subcolumn',&
physics/cam/cospsimulator_intr.F90:      call addfld ('MEANTAU_ISCCP','1',1,'A','Mean optical thickness*CLDTOT_ISCCP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('MEANTB_ISCCP','K       ',1,'A','Mean Infrared Tb from ISCCP simulator',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('MEANTBCLR_ISCCP','K       ',1,'A','Mean Clear-sky Infrared Tb from ISCCP simulator',&
physics/cam/cospsimulator_intr.F90:      !! addfld calls for all
physics/cam/cospsimulator_intr.F90:      call addfld('CLDLOW_CAL','percent',1,'A','Lidar Low-level Cloud Fraction',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld('CLDMED_CAL','percent',1,'A','Lidar Mid-level Cloud Fraction',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld('CLDHGH_CAL','percent',1,'A','Lidar High-level Cloud Fraction',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld('CLDTOT_CAL','percent',1,'A','Lidar Total Cloud Fraction',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld('CLD_CAL','percent',nht_cosp,'A','Lidar Cloud Fraction (532 nm)',&
physics/cam/cospsimulator_intr.F90:      call addfld ('RFL_PARASOL','fraction',nsza_cosp,'A','PARASOL-like mono-directional reflectance ',&
physics/cam/cospsimulator_intr.F90:      call addfld('CFAD_SR532_CAL','fraction',nht_cosp*nsr_cosp,'A',&
physics/cam/cospsimulator_intr.F90:      call addfld ('ATB532_CAL','no_unit_log10(x)',nhtml_cosp*nscol_cosp,'I', &
physics/cam/cospsimulator_intr.F90:      call addfld ('MOL532_CAL','m-1sr-1',nhtml_cosp,'A','Lidar Molecular Backscatter (532 nm) ',&
physics/cam/cospsimulator_intr.F90:      !!! addfld calls
physics/cam/cospsimulator_intr.F90:      call addfld('CFAD_DBZE94_CS','fraction',nht_cosp*ndbze_cosp,'A',&
physics/cam/cospsimulator_intr.F90:      call addfld ('CLD_CAL_NOTCS','percent',nht_cosp,'A','Cloud occurrence seen by CALIPSO but not CloudSat ',&
physics/cam/cospsimulator_intr.F90:      call addfld ('DBZE_CS','dBZe    ',nhtml_cosp*nscol_cosp,'I',' Radar dBZe (94 GHz) in each Subcolumn',phys_decomp,&
physics/cam/cospsimulator_intr.F90:      call addfld ('CLDTOT_CALCS','percent',1,'A',' Lidar and Radar Total Cloud Fraction ',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('CLDTOT_CS','percent',1,'A',' Radar total cloud amount ',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('CLDTOT_CS2','percent',1,'A',' Radar total cloud amount without the data for the first kilometer above surface ',phys_decomp,&
physics/cam/cospsimulator_intr.F90:      call addfld ('CLD_MISR','percent',nhtmisr_cosp*ntau_cosp,'A','Cloud Fraction from MISR Simulator',&
physics/cam/cospsimulator_intr.F90:      call addfld ('SCOPS_OUT','0=nocld,1=strcld,2=cnvcld',nhtml_cosp*nscol_cosp,'I','SCOPS Subcolumn output',&
physics/cam/cospsimulator_intr.F90:      call addfld ('CLTMODIS','%',1,'A','MODIS Total Cloud Fraction',&
physics/cam/cospsimulator_intr.F90:      call addfld ('CLWMODIS','%',1,'A','MODIS Liquid Cloud Fraction',&
physics/cam/cospsimulator_intr.F90:      call addfld ('CLIMODIS','%',1,'A','MODIS Ice Cloud Fraction',&
physics/cam/cospsimulator_intr.F90:      call addfld ('CLHMODIS','%',1,'A','MODIS High Level Cloud Fraction',&
physics/cam/cospsimulator_intr.F90:      call addfld ('CLMMODIS','%',1,'A','MODIS Mid Level Cloud Fraction',&
physics/cam/cospsimulator_intr.F90:      call addfld ('CLLMODIS','%',1,'A','MODIS Low Level Cloud Fraction',&
physics/cam/cospsimulator_intr.F90:      call addfld ('TAUTMODIS','1',1,'A','MODIS Total Cloud Optical Thickness*CLTMODIS',& 
physics/cam/cospsimulator_intr.F90:      call addfld ('TAUWMODIS','1',1,'A','MODIS Liquid Cloud Optical Thickness*CLWMODIS',&
physics/cam/cospsimulator_intr.F90:      call addfld ('TAUIMODIS','1',1,'A','MODIS Ice Cloud Optical Thickness*CLIMODIS',& 
physics/cam/cospsimulator_intr.F90:      call addfld ('TAUTLOGMODIS','1',1,'A','MODIS Total Cloud Optical Thickness (Log10 Mean)*CLTMODIS',&  
physics/cam/cospsimulator_intr.F90:      call addfld ('TAUWLOGMODIS','1',1,'A','MODIS Liquid Cloud Optical Thickness (Log10 Mean)*CLWMODIS',&
physics/cam/cospsimulator_intr.F90:      call addfld ('TAUILOGMODIS','1',1,'A','MODIS Ice Cloud Optical Thickness (Log10 Mean)*CLIMODIS',&  
physics/cam/cospsimulator_intr.F90:      call addfld ('REFFCLWMODIS','m',1,'A','MODIS Liquid Cloud Particle Size*CLWMODIS',&
physics/cam/cospsimulator_intr.F90:      call addfld ('REFFCLIMODIS','m',1,'A','MODIS Ice Cloud Particle Size*CLIMODIS',& 
physics/cam/cospsimulator_intr.F90:      call addfld ('PCTMODIS','Pa',1,'A','MODIS Cloud Top Pressure*CLTMODIS',&       
physics/cam/cospsimulator_intr.F90:      call addfld ('LWPMODIS','kg m-2',1,'A','MODIS Cloud Liquid Water Path*CLWMODIS',&
physics/cam/cospsimulator_intr.F90:      call addfld ('IWPMODIS','kg m-2',1,'A','MODIS Cloud Ice Water Path*CLIMODIS',&   
physics/cam/cospsimulator_intr.F90:      call addfld ('CLMODIS','%',nprs_cosp*ntau_cosp_modis,'A','MODIS Cloud Area Fraction',&
physics/cam/cospsimulator_intr.F90:!! ADDFLD, ADD_DEFAULT, OUTFLD CALLS FOR COSP OUTPUTS IF RUNNING COSP OFF-LINE
physics/cam/cospsimulator_intr.F90:      call addfld ('PS_COSP','Pa',1,'I','PS_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('TS_COSP','K',1,'I','TS_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('P_COSP','Pa',pver,'I','P_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('PH_COSP','Pa',pver,'I','PH_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('ZLEV_COSP','m',pver,'I','ZLEV_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('ZLEV_HALF_COSP','m',pver,'I','ZLEV_HALF_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('T_COSP','K',pver,'I','T_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('RH_COSP','percent',pver,'I','RH_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('Q_COSP','kg/kg',pver,'I','Q_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('CONCLD_COSP','1',pver,'I','CONCLD_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('CLD_COSP','1',pver,'I','CLD_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('O3_COSP','kg/kg',pver,'I','O3_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('U_COSP','m/s',pver,'I','U_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('V_COSP','m/s',pver,'I','V_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('LSCLIQ_COSP','kg/kg',pver,'I','LSCLIQ_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('LSCICE_COSP','kg/kg',pver,'I','LSCICE_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('CVCLIQ_COSP','kg/kg',pver,'I','CVCLIQ_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('CVCICE_COSP','kg/kg',pver,'I','CVCICE_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('RAIN_LS_COSP','kg/m2/s',pver,'I','RAIN_LS_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('SNOW_LS_COSP','kg/m2/s',pver,'I','SNOW_LS_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('GRPL_LS_COSP','kg/m2/s',pver,'I','GRPL_LS_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('RAIN_CV_COSP','kg/m2/s',pver,'I','RAIN_CV_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('SNOW_CV_COSP','kg/m2/s',pver,'I','SNOW_CV_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('REFF_COSP_1','m',pver,'I','REFF_COSP_1',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('REFF_COSP_2','m',pver,'I','REFF_COSP_2',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('REFF_COSP_3','m',pver,'I','REFF_COSP_3',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('REFF_COSP_4','m',pver,'I','REFF_COSP_4',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('REFF_COSP_5','m',pver,'I','REFF_COSP_5',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('REFF_COSP_6','m',pver,'I','REFF_COSP_6',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('REFF_COSP_7','m',pver,'I','REFF_COSP_7',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('REFF_COSP_8','m',pver,'I','REFF_COSP_8',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('REFF_COSP_9','m',pver,'I','REFF_COSP_9',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('DTAU_S_COSP','1',pver,'I','DTAU_S_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('DTAU_C_COSP','1',pver,'I','DTAU_C_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('DEM_S_COSP','1',pver,'I','DEM_S_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('DEM_C_COSP','1',pver,'I','DEM_C_COSP',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('DTAU_S_COSP_SNOW','1',pver,'I','DTAU_S_COSP_SNOW',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/cospsimulator_intr.F90:      call addfld ('DEM_S_COSP_SNOW','1',pver,'I','DEM_S_COSP_SNOW',phys_decomp,flag_xyfill=.true., fill_value=R_UNDEF)
physics/cam/microp_driver.F90:    use cam_history,     only: addfld, add_default, phys_decomp
physics/cam/microp_driver.F90:       call addfld( cnst_name(mm), 'kg/kg   ', pver, 'A', cnst_longname(mm)                   , phys_decomp )
physics/cam/microp_driver.F90:       call addfld( sflxnam  (mm), 'kg/m2/s ',    1, 'A', trim(cnst_name(mm))//' surface flux', phys_decomp )
physics/cam/microp_driver.F90:    call addfld (apcnst(ixcldliq), 'kg/kg   ', pver, 'A', trim(cnst_name(ixcldliq))//' after physics'  , phys_decomp)
physics/cam/microp_driver.F90:    call addfld (apcnst(ixcldice), 'kg/kg   ', pver, 'A', trim(cnst_name(ixcldice))//' after physics'  , phys_decomp)
physics/cam/microp_driver.F90:    call addfld (bpcnst(ixcldliq), 'kg/kg   ', pver, 'A', trim(cnst_name(ixcldliq))//' before physics' , phys_decomp)
physics/cam/microp_driver.F90:    call addfld (bpcnst(ixcldice), 'kg/kg   ', pver, 'A', trim(cnst_name(ixcldice))//' before physics' , phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('CME      ', 'kg/kg/s ', pver, 'A', 'Rate of cond-evap within the cloud'                      ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('CMEICE   ', 'kg/kg/s ', pver, 'A', 'Rate of cond-evap of ice within the cloud'               ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('CMELIQ   ', 'kg/kg/s ', pver, 'A', 'Rate of cond-evap of liq within the cloud'               ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('PRODPREC ', 'kg/kg/s ', pver, 'A', 'Rate of conversion of condensate to precip'              ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('EVAPPREC ', 'kg/kg/s ', pver, 'A', 'Rate of evaporation of falling precip'                   ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('EVAPSNOW ', 'kg/kg/s ', pver, 'A', 'Rate of evaporation of falling snow'                     ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('HPROGCLD ', 'W/kg'    , pver, 'A', 'Heating from prognostic clouds'                          ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('FICE     ', 'fraction', pver, 'A', 'Fractional ice content within cloud'                     ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('ICWMR    ', 'kg/kg   ', pver, 'A', 'Prognostic in-cloud water mixing ratio'                  ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('ICIMR    ', 'kg/kg   ', pver, 'A', 'Prognostic in-cloud ice mixing ratio'                    ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('ICWMRST  ', 'kg/kg   ', pver, 'A', 'Prognostic in-stratus water mixing ratio'                ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('ICIMRST  ', 'kg/kg   ', pver, 'A', 'Prognostic in-stratus ice mixing ratio'                  ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('QCSEVAP  ', 'kg/kg/s ', pver, 'A', 'Rate of evaporation of falling cloud water'              ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('QISEVAP  ', 'kg/kg/s ', pver, 'A', 'Rate of sublimation of falling cloud ice'                ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('QVRES    ', 'kg/kg/s ', pver, 'A', 'Rate of residual condensation term'                      ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('CMEIOUT  ', 'kg/kg/s ', pver, 'A', 'Rate of deposition/sublimation of cloud ice'             ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('VTRMC    ', 'm/s     ', pver, 'A', 'Mass-weighted cloud water fallspeed'                     ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('VTRMI    ', 'm/s     ', pver, 'A', 'Mass-weighted cloud ice fallspeed'                       ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('QCSEDTEN ', 'kg/kg/s ', pver, 'A', 'Cloud water mixing ratio tendency from sedimentation'    ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('QISEDTEN ', 'kg/kg/s ', pver, 'A', 'Cloud ice mixing ratio tendency from sedimentation'      ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('PRAO     ', 'kg/kg/s ', pver, 'A', 'Accretion of cloud water by rain'                        ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('PRCO     ', 'kg/kg/s ', pver, 'A', 'Autoconversion of cloud water'                           ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('MNUCCCO  ', 'kg/kg/s ', pver, 'A', 'Immersion freezing of cloud water'                       ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('MNUCCTO  ', 'kg/kg/s ', pver, 'A', 'Contact freezing of cloud water'                         ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('MNUCCDO  ', 'kg/kg/s ', pver, 'A', 'Homogeneous and heterogeneous nucleation from vapor'     ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('MNUCCDOhet','kg/kg/s ', pver, 'A', 'Heterogeneous nucleation from vapor'                     ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('MSACWIO  ', 'kg/kg/s ', pver, 'A', 'Conversion of cloud water from rime-splintering'         ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('PSACWSO  ', 'kg/kg/s ', pver, 'A', 'Accretion of cloud water by snow'                        ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('BERGSO   ', 'kg/kg/s ', pver, 'A', 'Conversion of cloud water to snow from bergeron'         ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('BERGO    ', 'kg/kg/s ', pver, 'A', 'Conversion of cloud water to cloud ice from bergeron'    ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('MELTO    ', 'kg/kg/s ', pver, 'A', 'Melting of cloud ice'                                    ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('HOMOO    ', 'kg/kg/s ', pver, 'A', 'Homogeneous freezing of cloud water'                     ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('QCRESO   ', 'kg/kg/s ', pver, 'A', 'Residual condensation term for cloud water'              ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('PRCIO    ', 'kg/kg/s ', pver, 'A', 'Autoconversion of cloud ice'                             ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('PRAIO    ', 'kg/kg/s ', pver, 'A', 'Accretion of cloud ice by rain'                          ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('QIRESO   ', 'kg/kg/s ', pver, 'A', 'Residual deposition term for cloud ice'                  ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('MNUCCRO  ', 'kg/kg/s ', pver, 'A', 'Heterogeneous freezing of rain to snow'                  ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('PRACSO   ', 'kg/kg/s ', pver, 'A', 'Accretion of rain by snow'                               ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('MELTSDT  ', 'W/kg    ', pver, 'A', 'Latent heating rate due to melting of snow'              ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('FRZRDT   ', 'W/kg    ', pver, 'A', 'Latent heating rate due to homogeneous freezing of rain' ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('ICIMRCU  ', 'kg/kg   ', pver, 'A', 'Convection in-cloud ice mixing ratio '                   ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('ICLMRCU  ', 'kg/kg   ', pver, 'A', 'Convection in-cloud liquid mixing ratio '                ,phys_decomp)	
physics/cam/microp_driver.F90:    call addfld ('ICIMRTOT ', 'kg/kg   ', pver, 'A', 'Total in-cloud ice mixing ratio '                        ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('ICLMRTOT ', 'kg/kg   ', pver, 'A', 'Total in-cloud liquid mixing ratio '                     ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('ICWMRSH  ', 'kg/kg   ', pver, 'A', 'Shallow Convection in-cloud water mixing ratio '         ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('ICWMRDP  ', 'kg/kg   ', pver, 'A', 'Deep Convection in-cloud water mixing ratio '            ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('SH_CLD   ', 'fraction', pver, 'A', 'Shallow convective cloud cover'                          ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('DP_CLD   ', 'fraction', pver, 'A', 'Deep convective cloud cover'                             ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('AST','fraction',pver, 'A','Stratus cloud fraction',phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('MPDT     ', 'W/kg    ', pver, 'A', 'Heating tendency - Morrison microphysics'                ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('MPDQ     ', 'kg/kg/s ', pver, 'A', 'Q tendency - Morrison microphysics'                      ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('MPDLIQ   ', 'kg/kg/s ', pver, 'A', 'CLDLIQ tendency - Morrison microphysics'                 ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('MPDICE   ', 'kg/kg/s ', pver, 'A', 'CLDICE tendency - Morrison microphysics'                 ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('MPDW2V   ', 'kg/kg/s ', pver, 'A', 'Water <--> Vapor tendency - Morrison microphysics'       ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('MPDW2I   ', 'kg/kg/s ', pver, 'A', 'Water <--> Ice tendency - Morrison microphysics'         ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('MPDW2P   ', 'kg/kg/s ', pver, 'A', 'Water <--> Precip tendency - Morrison microphysics'      ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('MPDI2V   ', 'kg/kg/s ', pver, 'A', 'Ice <--> Vapor tendency - Morrison microphysics'         ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('MPDI2W   ', 'kg/kg/s ', pver, 'A', 'Ice <--> Water tendency - Morrison microphysics'         ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('MPDI2P   ', 'kg/kg/s ', pver, 'A', 'Ice <--> Precip tendency - Morrison microphysics'        ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('LIQCLDF  ', 'fraction', pver, 'A', 'Stratus Liquid cloud fraction'                           ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('ICECLDF  ', 'fraction', pver, 'A', 'Stratus ICE cloud fraction'                              ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('IWC      ', 'kg/m3   ', pver, 'A', 'Grid box average ice water content'                      ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('LWC      ', 'kg/m3   ', pver, 'A', 'Grid box average liquid water content'                   ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('ICWNC    ', 'm-3     ', pver, 'A', 'Prognostic in-cloud water number conc'                   ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('ICINC    ', 'm-3     ', pver, 'A', 'Prognostic in-cloud ice number conc'                     ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('EFFLIQ   ', 'Micron  ', pver, 'A', 'Prognostic droplet effective radius'                     ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('EFFLIQ_IND','Micron  ', pver, 'A', 'Prognostic droplet effective radius (indirect effect)'   ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('EFFICE   ', 'Micron  ', pver, 'A', 'Prognostic ice effective radius'                         ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('WSUB     ', 'm/s     ', pver, 'A', 'Diagnostic sub-grid vertical velocity'                   ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('WSUBI    ', 'm/s     ', pver, 'A', 'Diagnostic sub-grid vertical velocity for ice'           ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('CDNUMC   ', '#/m2    ', 1,    'A', 'Vertically-integrated droplet concentration'             ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('AWNC     ', 'm-3     ', pver, 'A', 'Average cloud water number conc'                         ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('AWNI     ', 'm-3     ', pver, 'A', 'Average cloud ice number conc'                           ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('AREL     ', 'Micron  ', pver, 'A', 'Average droplet effective radius'                        ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('AREI     ', 'Micron  ', pver, 'A', 'Average ice effective radius'                            ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('FREQL    ', 'fraction', pver, 'A', 'Fractional occurance of liquid'                          ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('FREQI    ', 'fraction', pver, 'A', 'Fractional occurance of ice'                             ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('ACTREL   ', 'Micron  ', 1,    'A', 'Average Cloud Top droplet effective radius'              ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('ACTREI   ', 'Micron  ', 1,    'A', 'Average Cloud Top ice effective radius'                  ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('ACTNL    ', 'Micron  ', 1,    'A', 'Average Cloud Top droplet number'                        ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('ACTNI    ', 'Micron  ', 1,    'A', 'Average Cloud Top ice number'                            ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('FCTL     ', 'fraction', 1,    'A', 'Fractional occurance of cloud top liquid'                ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('FCTI     ', 'fraction', 1,    'A', 'Fractional occurance of cloud top ice'                   ,phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('LS_FLXPRC', 'kg/m2/s', pverp, 'A', 'ls stratiform gbm interface rain+snow flux', phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('LS_FLXSNW', 'kg/m2/s', pverp, 'A', 'ls stratiform gbm interface snow flux', phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('REL', 'micron', pver, 'A', 'MG REL stratiform cloud effective radius liquid', phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('REI', 'micron', pver, 'A', 'MG REI stratiform cloud effective radius ice', phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('LS_REFFRAIN', 'micron', pver, 'A', 'ls stratiform rain effective radius', phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('LS_REFFSNOW', 'micron', pver, 'A', 'ls stratiform snow effective radius', phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('CV_REFFLIQ', 'micron', pver, 'A', 'convective cloud liq effective radius', phys_decomp)
physics/cam/microp_driver.F90:    call addfld ('CV_REFFICE', 'micron', pver, 'A', 'convective cloud ice effective radius', phys_decomp)
physics/cam/microp_driver.F90:!       call addfld( fieldname, unit, 1, 'A', long_name, phys_decomp )
physics/cam/microp_driver.F90:!          if ( masterproc ) write(*,'(2a)') 'microp_driver_init addfld - ', fieldname
physics/cam/aer_rad_props.F90:use cam_history,      only: fieldname_len, addfld, phys_decomp, outfld, add_default
physics/cam/aer_rad_props.F90:   call addfld ('AEROD_v ', '1', 1, 'A', &
physics/cam/aer_rad_props.F90:   ! create outfld names for visible OD and call addfld
physics/cam/aer_rad_props.F90:      call addfld (odv_names(i), '1', 1, 'A', &
physics/cam/param_cldoptics.F90:    use cam_history,       only: addfld, add_default, phys_decomp
physics/cam/param_cldoptics.F90:    call addfld ('GCLDLWP ','gram/m2 ',pver, 'A','Grid-box cloud water path'             ,phys_decomp, sampling_seq='rad_lwsw')
physics/cam/param_cldoptics.F90:    call addfld ('ICLDTWP ','gram/m2 ',pver, 'A','In-cloud cloud total water path (liquid and ice)'&
physics/cam/param_cldoptics.F90:    call addfld ('TGCLDCWP','gram/m2 ',1,    'A','Total grid-box cloud water path (liquid and ice)',phys_decomp, &
physics/cam/param_cldoptics.F90:    call addfld ('TGCLDLWP','gram/m2 ',1,    'A','Total grid-box cloud liquid water path',phys_decomp, sampling_seq='rad_lwsw')
physics/cam/param_cldoptics.F90:    call addfld ('TGCLDIWP','gram/m2 ',1,    'A','Total grid-box cloud ice water path'   ,phys_decomp, sampling_seq='rad_lwsw')
physics/cam/param_cldoptics.F90:    call addfld ('EFFCLD  ','fraction',pver, 'A','Effective cloud fraction'              ,phys_decomp, sampling_seq='rad_lwsw')
physics/cam/param_cldoptics.F90:    call addfld ('SETLWP  ','gram/m2 ',pver, 'A','Prescribed liquid water path'          ,phys_decomp, sampling_seq='rad_lwsw')
physics/cam/param_cldoptics.F90:    call addfld ('LWSH    ','m       ',1,    'A','Liquid water scale height'             ,phys_decomp, sampling_seq='rad_lwsw')
physics/cam/param_cldoptics.F90:    call addfld ('ICLDIWP', 'gram/m2', pver, 'A','In-cloud ice water path'               ,phys_decomp, sampling_seq='rad_lwsw')
physics/cam/param_cldoptics.F90:    call addfld ('EMIS',    '1',       pver, 'A','cloud emissivity'                      ,phys_decomp, sampling_seq='rad_lwsw')
physics/cam/param_cldoptics.F90:    call addfld ('REL',     'micron',  pver, 'A','effective liquid drop radius'          ,phys_decomp, sampling_seq='rad_lwsw')
physics/cam/param_cldoptics.F90:    call addfld ('REI',     'micron',  pver, 'A','effective ice particle radius'         ,phys_decomp, sampling_seq='rad_lwsw')
physics/cam/co2_cycle.F90:    use cam_history, only: addfld, add_default, phys_decomp
physics/cam/co2_cycle.F90:       call addfld(trim(cnst_name(mm))//'_BOT', 'kg/kg',     1, 'A', trim(cnst_longname(mm))//', Bottom Layer', phys_decomp)
physics/cam/co2_cycle.F90:       call addfld(cnst_name(mm),               'kg/kg',  pver, 'A', cnst_longname(mm), phys_decomp)
physics/cam/co2_cycle.F90:!       call addfld(trim(cnst_name(mm))//'_BOT', 'kg/kg',     1, 'A', trim(cnst_longname(mm))//', Bottom Layer', phys_decomp)
physics/cam/co2_cycle.F90:!       call addfld(cnst_name(mm),               'kg/kg',  pver, 'A', cnst_longname(mm), phys_decomp)
physics/cam/co2_cycle.F90:       call addfld(sflxnam(pcnst+m),            'kg/m2/s',   1, 'A', trim(c_names(m))//' surface flux', phys_decomp)
physics/cam/co2_cycle.F90:       ! The addfld call for the 'TM*' fields are made by default in the 
physics/cam/co2_cycle.F90:       call addfld(sflxnam(pcnst+ncnst),           'kg/m2/s',   1, 'A', 'CO2 OUT', phys_decomp)
physics/cam/radiation_data.F90:  use cam_history,      only: addfld, add_default, phys_decomp, outfld
physics/cam/radiation_data.F90:    call addfld (lndfrc_fldn, 'fraction', 1,    rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (icefrc_fldn, 'fraction', 1,    rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (snowh_fldn,  'm',        1,    rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (landm_fldn,  'none',     1,    rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (asdir_fldn,  '1',        1,    rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (asdif_fldn,  '1',        1,    rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (aldir_fldn,  '1',        1,    rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (aldif_fldn,  '1',        1,    rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (coszen_fldn,     '1', 1,    rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (asdir_pos_fldn,  '1', 1,    rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (asdif_pos_fldn,  '1', 1,    rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (aldir_pos_fldn,  '1', 1,    rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (aldif_pos_fldn,  '1', 1,    rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (lwup_fldn,   'W/m2',     1,    rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (ts_fldn,     'K',        1,    rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (temp_fldn,   'K',        pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (pdel_fldn,   'Pa',       pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (pdeldry_fldn,'Pa',       pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (pmid_fldn,   'Pa',       pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (watice_fldn, 'kg/kg',    pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (watliq_fldn, 'kg/kg',    pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (watvap_fldn, 'kg/kg',    pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (zint_fldn,   'km',       pverp,rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (pint_fldn,   'Pa',       pverp,rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (cld_fldn,    'fraction', pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (concld_fldn, 'fraction', pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (rel_fldn,    'micron',   pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:    call addfld (rei_fldn,    'micron',   pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:       call addfld (dei_fldn,    'micron',   pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:       call addfld (des_fldn,    'micron',   pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:       call addfld (mu_fldn,     ' ',        pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:       call addfld (lambdac_fldn,' ',        pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:       call addfld (iciwp_fldn,  'kg/m2',    pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:       call addfld (iclwp_fldn,  'kg/m2',    pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:       call addfld (icswp_fldn,  'kg/m2',    pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:       call addfld (rel_fn_fldn, 'microns',  pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:       call addfld (cldfsnow_fldn, 'fraction', pver, rad_data_avgflag,&
physics/cam/radiation_data.F90:       call addfld(trim(name), 'kg/kg', pver, rad_data_avgflag, trim(long_name), phys_decomp)
physics/cam/stratiform.F90:    use cam_history,     only: addfld, add_default, phys_decomp
physics/cam/stratiform.F90:       call addfld( cnst_name(mm), 'kg/kg   ', pver, 'A', cnst_longname(mm)                   , phys_decomp )
physics/cam/stratiform.F90:       call addfld( sflxnam  (mm), 'kg/m2/s ',    1, 'A', trim(cnst_name(mm))//' surface flux', phys_decomp )
physics/cam/stratiform.F90:    call addfld (apcnst(ixcldliq), 'kg/kg   ', pver, 'A', trim(cnst_name(ixcldliq))//' after physics'  , phys_decomp)
physics/cam/stratiform.F90:    call addfld (apcnst(ixcldice), 'kg/kg   ', pver, 'A', trim(cnst_name(ixcldice))//' after physics'  , phys_decomp)
physics/cam/stratiform.F90:    call addfld (bpcnst(ixcldliq), 'kg/kg   ', pver, 'A', trim(cnst_name(ixcldliq))//' before physics' , phys_decomp)
physics/cam/stratiform.F90:    call addfld (bpcnst(ixcldice), 'kg/kg   ', pver, 'A', trim(cnst_name(ixcldice))//' before physics' , phys_decomp)
physics/cam/stratiform.F90:    call addfld ('FWAUT    ', 'fraction', pver, 'A', 'Relative importance of liquid autoconversion'            ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('FSAUT    ', 'fraction', pver, 'A', 'Relative importance of ice autoconversion'               ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('FRACW    ', 'fraction', pver, 'A', 'Relative importance of rain accreting liquid'            ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('FSACW    ', 'fraction', pver, 'A', 'Relative importance of snow accreting liquid'            ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('FSACI    ', 'fraction', pver, 'A', 'Relative importance of snow accreting ice'               ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('CME      ', 'kg/kg/s ', pver, 'A', 'Rate of cond-evap within the cloud'                      ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('CMEICE   ', 'kg/kg/s ', pver, 'A', 'Rate of cond-evap of ice within the cloud'               ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('CMELIQ   ', 'kg/kg/s ', pver, 'A', 'Rate of cond-evap of liq within the cloud'               ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('ICE2PR   ', 'kg/kg/s ', pver, 'A', 'Rate of conversion of ice to precip'                     ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('LIQ2PR   ', 'kg/kg/s ', pver, 'A', 'Rate of conversion of liq to precip'                     ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('ZMDLF    ', 'kg/kg/s ', pver, 'A', 'Detrained liquid water from ZM convection'               ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('SHDLF    ', 'kg/kg/s ', pver, 'A', 'Detrained liquid water from shallow convection'          ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('PRODPREC ', 'kg/kg/s ', pver, 'A', 'Rate of conversion of condensate to precip'              ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('EVAPPREC ', 'kg/kg/s ', pver, 'A', 'Rate of evaporation of falling precip'                   ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('EVAPSNOW ', 'kg/kg/s ', pver, 'A', 'Rate of evaporation of falling snow'                     ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('HPROGCLD ', 'W/kg'    , pver, 'A', 'Heating from prognostic clouds'                          ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('HCME     ', 'W/kg'    , pver, 'A', 'Heating from cond-evap within the cloud'                 ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('HEVAP    ', 'W/kg'    , pver, 'A', 'Heating from evaporation of falling precip'              ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('HFREEZ   ', 'W/kg'    , pver, 'A', 'Heating rate due to freezing of precip'                  ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('HMELT    ', 'W/kg'    , pver, 'A', 'Heating from snow melt'                                  ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('HREPART  ', 'W/kg'    , pver, 'A', 'Heating from cloud ice/liquid repartitioning'            ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('REPARTICE', 'kg/kg/s' , pver, 'A', 'Cloud ice tendency from cloud ice/liquid repartitioning' ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('REPARTLIQ', 'kg/kg/s' , pver, 'A', 'Cloud liq tendency from cloud ice/liquid repartitioning' ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('FICE     ', 'fraction', pver, 'A', 'Fractional ice content within cloud'                     ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('ICWMR    ', 'kg/kg   ', pver, 'A', 'Prognostic in-cloud water mixing ratio'                  ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('ICIMR    ', 'kg/kg   ', pver, 'A', 'Prognostic in-cloud ice mixing ratio'                    ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('ICWMRST  ', 'kg/kg   ', pver, 'A', 'Prognostic in-stratus water mixing ratio'                ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('ICIMRST  ', 'kg/kg   ', pver, 'A', 'Prognostic in-stratus ice mixing ratio'                  ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('PCSNOW   ', 'm/s     ', 1   , 'A', 'Snow fall from prognostic clouds'                        ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('DQSED    ', 'kg/kg/s ', pver, 'A', 'Water vapor tendency from cloud sedimentation'           ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('DLSED    ', 'kg/kg/s ', pver, 'A', 'Cloud liquid tendency from sedimentation'                ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('DISED    ', 'kg/kg/s ', pver, 'A', 'Cloud ice tendency from sedimentation'                   ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('HSED     ', 'W/kg    ', pver, 'A', 'Heating from cloud sediment evaporation'                 ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('SNOWSED  ', 'm/s     ', 1   , 'A', 'Snow from cloud ice sedimentation'                       ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('RAINSED  ', 'm/s     ', 1   , 'A', 'Rain from cloud liquid sedimentation'                    ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('PRECSED  ', 'm/s     ', 1   , 'A', 'Precipitation from cloud sedimentation'                  ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('CNVCLD   ', 'fraction', 1,    'A', 'Vertically integrated convective cloud amount'           ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('CLDST    ', 'fraction', pver, 'A', 'Stratus cloud fraction'                                  ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('CONCLD   ', 'fraction', pver, 'A', 'Convective cloud cover'                                  ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('AST','fraction',pver, 'A','Stratus cloud fraction',phys_decomp)
physics/cam/stratiform.F90:    call addfld ('LIQCLDF  ', 'fraction', pver, 'A', 'Stratus Liquid cloud fraction'                           ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('ICECLDF  ', 'fraction', pver, 'A', 'Stratus ICE cloud fraction'                              ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('IWC      ', 'kg/m3   ', pver, 'A', 'Grid box average ice water content'                      ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('LWC      ', 'kg/m3   ', pver, 'A', 'Grid box average liquid water content'                   ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('ICWNC    ', 'm-3     ', pver, 'A', 'Prognostic in-cloud water number conc'                   ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('ICINC    ', 'm-3     ', pver, 'A', 'Prognostic in-cloud ice number conc'                     ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('EFFLIQ   ', 'Micron  ', pver, 'A', 'Prognostic droplet effective radius'                     ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('EFFLIQ_IND','Micron  ', pver, 'A', 'Prognostic droplet effective radius (indirect effect)'   ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('EFFICE   ', 'Micron  ', pver, 'A', 'Prognostic ice effective radius'                         ,phys_decomp)
physics/cam/stratiform.F90:    call addfld ('LS_FLXPRC', 'kg/m2/s', pverp, 'A', 'ls stratiform gbm interface rain+snow flux', phys_decomp)
physics/cam/stratiform.F90:    call addfld ('LS_FLXSNW', 'kg/m2/s', pverp, 'A', 'ls stratiform gbm interface snow flux', phys_decomp)
physics/cam/stratiform.F90:    call addfld ('PRACWO', '1/s', pver, 'A', 'Accretion of cloud water by rain', phys_decomp)
physics/cam/stratiform.F90:    call addfld ('PSACWO', '1/s', pver, 'A', 'Accretion of cloud water by snow', phys_decomp)
physics/cam/stratiform.F90:    call addfld ('PSACIO', '1/s', pver, 'A', 'Accretion of cloud ice by snow', phys_decomp)
physics/cam/stratiform.F90:       call addfld ('CLDLIQSTR   ', 'kg/kg', pver, 'A', 'Stratiform CLDLIQ'                                  ,phys_decomp)
physics/cam/stratiform.F90:       call addfld ('CLDICESTR   ', 'kg/kg', pver, 'A', 'Stratiform CLDICE'                                  ,phys_decomp)
physics/cam/stratiform.F90:       call addfld ('CLDLIQCON   ', 'kg/kg', pver, 'A', 'Convective CLDLIQ'                                  ,phys_decomp)
physics/cam/stratiform.F90:       call addfld ('CLDICECON   ', 'kg/kg', pver, 'A', 'Convective CLDICE'                                  ,phys_decomp)
physics/cam/gw_drag.F90:    use cam_history, only: addfld, add_default, phys_decomp
physics/cam/gw_drag.F90:    call addfld ('TTGWORO ','K/s     ',pver, 'A','T tendency - orographic gravity wave drag',phys_decomp)
physics/cam/gw_drag.F90:    call addfld ('UTGWORO ','m/s2    ',pver, 'A','U tendency - orographic gravity wave drag',phys_decomp)
physics/cam/gw_drag.F90:    call addfld ('VTGWORO ','m/s2    ',pver, 'A','V tendency - orographic gravity wave drag',phys_decomp)
physics/cam/gw_drag.F90:    call addfld ('TAUGWX  ','N/m2    ',1,    'A','Zonal gravity wave surface stress',        phys_decomp)
physics/cam/gw_drag.F90:    call addfld ('TAUGWY  ','N/m2    ',1,    'A','Meridional gravity wave surface stress',   phys_decomp)
physics/cam/gw_drag.F90:       call addfld ('TTGWSPEC','K/s     ',pver, 'A','T tendency - gravity wave spectrum',       phys_decomp)
physics/cam/gw_drag.F90:       call addfld ('UTGWSPEC','m/s2    ',pver, 'A','U tendency - gravity wave spectrum',       phys_decomp)
physics/cam/gw_drag.F90:       call addfld ('VTGWSPEC','m/s2    ',pver, 'A','V tendency - gravity wave spectrum',       phys_decomp)
physics/cam/rad_constituents.F90:use cam_history,    only: addfld, fieldname_len, phys_decomp, add_default, outfld
physics/cam/rad_constituents.F90:      call addfld(trim(name), 'kg/m^2', pver, 'A', trim(long_name), phys_decomp)
physics/cam/rad_constituents.F90:      call addfld(trim(name), 'kg/m^2', 1, 'A', trim(long_name), phys_decomp)
physics/cam/rad_constituents.F90:      call addfld(trim(name), 'kg/m^2', pver, 'A', trim(long_name), phys_decomp)
physics/cam/rad_constituents.F90:      call addfld(trim(name), 'kg/m^2', 1, 'A', trim(long_name), phys_decomp)
physics/waccm/nlte_lw.F90:    use cam_history,  only: add_default, addfld, phys_decomp
physics/waccm/nlte_lw.F90:       call addfld ('O3MRG    ','mol/mol',plev, 'A','merged (eUV+CAM) O3 vmr',phys_decomp)
physics/waccm/nlte_lw.F90:    call addfld ('QRLNLTE  ','K/s     ',plev, 'A','Non-LTE LW heating (includes QNO)',phys_decomp)
physics/waccm/nlte_lw.F90:    call addfld ('QNO      ','K/s     ',plev, 'A','NO cooling',phys_decomp)
physics/waccm/iondrag.F90:  use cam_history  ,only: addfld, phys_decomp, add_default, outfld
physics/waccm/iondrag.F90:    call addfld('UIONTEND','M/S2',pver,'A','u-tendency due to ion drag',phys_decomp)
physics/waccm/iondrag.F90:    call addfld('VIONTEND','M/S2',pver,'A','v-tendency due to ion drag',phys_decomp)
physics/waccm/iondrag.F90:    call addfld('QIONSUM ','S-1' ,pver,'I','Ion prod sum',phys_decomp)
physics/waccm/iondrag.F90:    call addfld('ELECDEN ','CM-3',pver,'I','NE (ion sum)',phys_decomp)
physics/waccm/iondrag.F90:    call addfld( 'SIGMAPED', 'siemens/m', pver, 'I', 'Pederson conductivity', phys_decomp )
physics/waccm/iondrag.F90:    call addfld( 'SIGMAHAL', 'siemens/m', pver, 'I', 'Hall conductivity', phys_decomp )
physics/waccm/iondrag.F90:    call addfld('LAMDA1'  ,'S-1',pver,'I' ,'LAMDA PED',phys_decomp)
physics/waccm/iondrag.F90:    call addfld('LAMDA2'  ,'S-1',pver,'I' ,'LAMDA HALL',phys_decomp)
physics/waccm/iondrag.F90:    call addfld('LXX','S-1',pver,'I','LXX',phys_decomp)
physics/waccm/iondrag.F90:    call addfld('LYY','S-1',pver,'I','LYY',phys_decomp)
physics/waccm/iondrag.F90:    call addfld('LXY','S-1',pver,'I','LXY',phys_decomp)
physics/waccm/iondrag.F90:    call addfld('LYX','S-1',pver,'I','LYX',phys_decomp)
physics/waccm/iondrag.F90:    call addfld( 'QJOULE  ', 'K/s' , pver, 'I', 'Joule Heat', phys_decomp )  ! joule heating
physics/waccm/iondrag.F90:    use cam_history, only: add_default, addfld, phys_decomp
physics/waccm/radheat.F90:    use cam_history,      only: add_default, addfld, phys_decomp
physics/waccm/radheat.F90:    call addfld ('QRL_TOT  ','K/s     ',plev, 'A','Merged LW heating: QRL+QRLNLTE',phys_decomp)
physics/waccm/radheat.F90:    call addfld ('QRS_TOT  ','K/s     ',plev, 'A','Merged SW heating: QRS+QCP+QRS_EUV+QRS_CO2NIR+QRS_AUR+QTHERMAL',phys_decomp)
physics/waccm/radheat.F90:    call addfld ('QRS_TOT_24_COS','K/s  ',plev, 'A','SW heating 24hr. cos coeff.',phys_decomp)
physics/waccm/radheat.F90:    call addfld ('QRS_TOT_24_SIN','K/s  ',plev, 'A','SW heating 24hr. sin coeff.',phys_decomp)
physics/waccm/radheat.F90:    call addfld ('QRS_TOT_12_COS','K/s  ',plev, 'A','SW heating 12hr. cos coeff.',phys_decomp)
physics/waccm/radheat.F90:    call addfld ('QRS_TOT_12_SIN','K/s  ',plev, 'A','SW heating 12hr. sin coeff.',phys_decomp)
physics/waccm/waccm_forcing.F90:    use cam_history, only : addfld, phys_decomp
physics/waccm/waccm_forcing.F90:       call addfld( 'WFRC_'//trim(fields(i)%fldnam), fields(i)%units, pver, 'I', 'for waccm forcing', phys_decomp )
physics/waccm/qbo.F90:    call addfld ('QBOTEND ','M/S/S   ',plev, 'A','Wind tendency from QBO relaxation',phys_decomp)
physics/waccm/qbo.F90:    call addfld ('QBO_U0 ','M/S   ',plev, 'A','Specified wind used for QBO',phys_decomp)
physics/waccm/gw_drag.F90:    use cam_history,      only : addfld, add_default, phys_decomp
physics/waccm/gw_drag.F90:    call addfld ('TTGW','K/s     ',pver, 'A','T tendency - gravity wave drag',phys_decomp)
physics/waccm/gw_drag.F90:    call addfld ('UTGWORO ','m/s2    ',pver, 'A','U tendency - orographic gravity wave drag',phys_decomp)
physics/waccm/gw_drag.F90:    call addfld ('VTGWORO ','m/s2    ',pver, 'A','V tendency - orographic gravity wave drag',phys_decomp)
physics/waccm/gw_drag.F90:    call addfld ('TAUGWX  ','N/m2    ',1,    'A','Zonal gravity wave surface stress',        phys_decomp)
physics/waccm/gw_drag.F90:    call addfld ('TAUGWY  ','N/m2    ',1,    'A','Meridional gravity wave surface stress',   phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('UTGWSPEC','m/s2    ',pver, 'A','U tendency - gravity wave spectrum',       phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('VTGWSPEC','m/s2    ',pver, 'A','V tendency - gravity wave spectrum',       phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('BUTGWSPEC ','m/s2      ',pver, 'A','Beres U tendency',phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('BVTGWSPEC ','m/s2      ',pver, 'A','Beres V tendency',phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('UTEND1  ','m/s2    ',pver, 'A','U tendency   c < -40',                phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('UTEND2  ','m/s2    ',pver, 'A','U tendency  -40 < c < -15',                phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('UTEND3  ','m/s2    ',pver, 'A','U tendency  -15 < c <  15',                phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('UTEND4  ','m/s2    ',pver, 'A','U tendency   15 < c <  40',                phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('UTEND5  ','m/s2    ',pver, 'A','U tendency   40 < c ',                phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('BUTEND1  ','m/s2    ',pver, 'A','U tendency   c < -40',                phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('BUTEND2  ','m/s2    ',pver, 'A','U tendency  -40 < c < -15',                phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('BUTEND3  ','m/s2    ',pver, 'A','U tendency  -15 < c <  15',                phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('BUTEND4  ','m/s2    ',pver, 'A','U tendency   15 < c <  40',                phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('BUTEND5  ','m/s2    ',pver, 'A','U tendency   40 < c',                phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('NETDT  ','K/s   ',pver, 'A','Net heating rate',                             phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('MAXQ0  ','K/day   ',1  ,  'A','Max column heating rate',                      phys_decomp)   
physics/waccm/gw_drag.F90:       call addfld ('HDEPTH  ','km    ',1,    'A','Heating Depth',                                phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('BEMF  ','Pa    ',pver,    'A','Beres Eastward MF',                                phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('BWMF  ','Pa    ',pver,    'A','Beres Westward MF',                                phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('BNMF  ','Pa    ',pver,    'A','Beres Northward MF',                                phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('BSMF  ','Pa    ',pver,    'A','Beres Southward MF',                                phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('EMF  ','Pa    ',pver,    'A','Eastward MF',                                phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('WMF  ','Pa    ',pver,    'A','Westward MF',                                phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('NMF  ','Pa    ',pver,    'A','Northward MF',                                phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('SMF  ','Pa    ',pver,    'A','Southward MF',                                phys_decomp)
physics/waccm/gw_drag.F90:    call addfld ('TTGWSDF' ,'K/s   ',pver, 'A','t tendency - gw spec: diffusion term',phys_decomp)
physics/waccm/gw_drag.F90:    call addfld ('TTGWSKE' ,'K/s   ',pver, 'A','t tendency - gw spec: kinetic energy conversion term',phys_decomp)
physics/waccm/gw_drag.F90:    call addfld ('EKGWSPEC' ,'M2/S   ',pverp, 'A','effective Kzz due to gw spectrum',phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('TAUE' ,'Pa   ',pverp, 'A','CM Eastward Reynolds stress',phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('TAUW' ,'Pa   ',pverp, 'A','CM Westward Reynolds stress',phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('TAUNET' ,'Pa   ',pverp, 'A','CM E+W Reynolds stress',phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('TAUN' ,'Pa   ',pverp, 'A','CM Northward Reynolds stress',phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('TAUS' ,'Pa   ',pverp, 'A','CM Southward Reynolds stress',phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('BTAUE' ,'Pa   ',pverp, 'A','Beres Eastward Reynolds stress',phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('BTAUW' ,'Pa   ',pverp, 'A','Beres Westward Reynolds stress',phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('BTAUN' ,'Pa   ',pverp, 'A','Beres Northward Reynolds stress',phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('BTAUS' ,'Pa   ',pverp, 'A','Beres Southward Reynolds stress',phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('FRONTGF', 'K^2/M^2/S', pver, 'A', 'Frontogenesis function at gws src level', phys_decomp)
physics/waccm/gw_drag.F90:       call addfld ('FRONTGFA', 'K^2/M^2/S', pver, 'A', 'Frontogenesis function at gws src level', phys_decomp)
physics/waccm/gw_drag.F90:	    call addfld (dumc1x(1:8),'Pa   ',pver, 'A',dumc2,phys_decomp)
physics/waccm/gw_drag.F90:            call addfld (dumc1y(1:8),'Pa   ',pver, 'A',dumc2,phys_decomp)
physics/waccm/gw_drag.F90:            call addfld (dumc1x(1:9),'Pa   ',pver, 'A',dumc2,phys_decomp)
physics/waccm/gw_drag.F90:            call addfld (dumc1y(1:9),'Pa   ',pver, 'A',dumc2,phys_decomp)
physics/waccm/gw_drag.F90:            call addfld (dumc1x(1:8),'Pa   ',pver, 'A',dumc2,phys_decomp)
physics/waccm/gw_drag.F90:            call addfld (dumc1y(1:8),'Pa   ',pver, 'A',dumc2,phys_decomp)
physics/waccm/gw_drag.F90:            call addfld (dumc1x(1:9),'Pa   ',pver, 'A',dumc2,phys_decomp)
physics/waccm/gw_drag.F90:            call addfld (dumc1y(1:9),'Pa   ',pver, 'A',dumc2,phys_decomp)
physics/rrtmg/oldcloud.F90:   use cam_history, only: addfld, phys_decomp
physics/rrtmg/ebert_curry.F90:   use cam_history, only: addfld, phys_decomp
physics/rrtmg/ebert_curry.F90:   !call addfld ('CLWPTH_OLD','Kg/m2   ',pver, 'I','old In Cloud Liquid Water Path',phys_decomp, sampling_seq='rad_lwsw')
physics/rrtmg/ebert_curry.F90:   !call addfld ('KEXT_OLD','m^2/kg',pver,'I','old extinction',phys_decomp)
physics/rrtmg/ebert_curry.F90:   !call addfld ('CLDOD_OLD','1',pver,'I','old liquid OD',phys_decomp)
physics/rrtmg/ebert_curry.F90:   !call addfld ('REL_OLD','1',pver,'I','old liquid effective radius (liquid)',phys_decomp)
physics/rrtmg/ebert_curry.F90:   !call addfld ('CLWPTH_NEW','Kg/m2   ',pver, 'I','In Cloud Liquid Water Path',phys_decomp, sampling_seq='rad_lwsw')
physics/rrtmg/ebert_curry.F90:   !call addfld ('KEXT_NEW','m^2/kg',pver,'I','extinction',phys_decomp)
physics/rrtmg/ebert_curry.F90:   !call addfld ('CLDOD_NEW','1',pver,'I','liquid OD',phys_decomp)
physics/rrtmg/ebert_curry.F90:   !call addfld('CIWPTH_NEW','Kg/m2   ',pver, 'I','In Cloud Ice Water Path',phys_decomp, sampling_seq='rad_lwsw')
physics/rrtmg/ebert_curry.F90:   !call addfld('CIWPTH_OLD','Kg/m2   ',pver, 'I','In Cloud Ice Water Path (old)',phys_decomp, sampling_seq='rad_lwsw')
physics/rrtmg/slingo.F90:   use cam_history, only: addfld, phys_decomp
physics/rrtmg/slingo.F90:   !call addfld ('CLWPTH_OLD','Kg/m2   ',pver, 'I','old In Cloud Liquid Water Path',phys_decomp, sampling_seq='rad_lwsw')
physics/rrtmg/slingo.F90:   !call addfld ('KEXT_OLD','m^2/kg',pver,'I','old extinction',phys_decomp)
physics/rrtmg/slingo.F90:   !call addfld ('CLDOD_OLD','1',pver,'I','old liquid OD',phys_decomp)
physics/rrtmg/slingo.F90:   !call addfld ('REL_OLD','1',pver,'I','old liquid effective radius (liquid)',phys_decomp)
physics/rrtmg/slingo.F90:   !call addfld ('CLWPTH_NEW','Kg/m2   ',pver, 'I','In Cloud Liquid Water Path',phys_decomp, sampling_seq='rad_lwsw')
physics/rrtmg/slingo.F90:   !call addfld ('KEXT_NEW','m^2/kg',pver,'I','extinction',phys_decomp)
physics/rrtmg/slingo.F90:   !call addfld ('CLDOD_NEW','1',pver,'I','liquid OD',phys_decomp)
physics/rrtmg/slingo.F90:   !call addfld('CIWPTH_NEW','Kg/m2   ',pver, 'I','In Cloud Ice Water Path',phys_decomp, sampling_seq='rad_lwsw')
physics/rrtmg/slingo.F90:   !call addfld('CIWPTH_OLD','Kg/m2   ',pver, 'I','In Cloud Ice Water Path (old)',phys_decomp, sampling_seq='rad_lwsw')
physics/rrtmg/radiation.F90:    use cam_history,   only: addfld, add_default, phys_decomp
physics/rrtmg/radiation.F90:    call addfld('TOT_CLD_VISTAU',   '1', pver, 'A', 'Total gbx cloud extinction visible sw optical depth', phys_decomp, &
physics/rrtmg/radiation.F90:    call addfld('TOT_ICLD_VISTAU',  '1', pver, 'A', 'Total in-cloud extinction visible sw optical depth', phys_decomp, &
physics/rrtmg/radiation.F90:    call addfld('LIQ_ICLD_VISTAU',  '1', pver, 'A', 'Liquid in-cloud extinction visible sw optical depth', phys_decomp, &
physics/rrtmg/radiation.F90:    call addfld('ICE_ICLD_VISTAU',  '1', pver, 'A', 'Ice in-cloud extinction visible sw optical depth', phys_decomp, &
physics/rrtmg/radiation.F90:    call addfld('SNOW_ICLD_VISTAU', '1', pver, 'A', 'Snow in-cloud extinction visible sw optical depth', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('SOLIN'//diag(icall),   'W/m2',  1,     'A', 'Solar insolation',phys_decomp, sampling_seq='rad_lwsw')
physics/rrtmg/radiation.F90:          call addfld('SOLL'//diag(icall),    'W/m2',  1,     'A', 'Solar downward near infrared direct  to surface', &
physics/rrtmg/radiation.F90:          call addfld('SOLS'//diag(icall),    'W/m2',  1,     'A', 'Solar downward visible direct  to surface',phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('SOLLD'//diag(icall),   'W/m2',  1,     'A', 'Solar downward near infrared diffuse to surface',phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('SOLSD'//diag(icall),   'W/m2',  1,     'A', 'Solar downward visible diffuse to surface',phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('QRS'//diag(icall),     'K/s',   pver,  'A', 'Solar heating rate', phys_decomp, sampling_seq='rad_lwsw')
physics/rrtmg/radiation.F90:          call addfld('QRSC'//diag(icall),    'K/s',   pver,  'A', 'Clearsky solar heating rate', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FSNS'//diag(icall),    'W/m2',  1,     'A', 'Net solar flux at surface', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FSNT'//diag(icall),    'W/m2',  1,     'A', 'Net solar flux at top of model', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FSNTOA'//diag(icall),  'W/m2',  1,     'A', 'Net solar flux at top of atmosphere',phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FSUTOA'//diag(icall),  'W/m2',  1,     'A', 'Upwelling solar flux at top of atmosphere', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FSNTOAC'//diag(icall), 'W/m2',  1,     'A', 'Clearsky net solar flux at top of atmosphere', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FSN200'//diag(icall),  'W/m2',  1,     'A', 'Net shortwave flux at 200 mb', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FSN200C'//diag(icall), 'W/m2',  1,     'A', 'Clearsky net shortwave flux at 200 mb',phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FSNTC'//diag(icall),   'W/m2',  1,     'A', 'Clearsky net solar flux at top of model',phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FSNSC'//diag(icall),   'W/m2',  1,     'A', 'Clearsky net solar flux at surface', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FSDSC'//diag(icall),   'W/m2',  1,     'A', 'Clearsky downwelling solar flux at surface', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FSDS'//diag(icall),    'W/m2',  1,     'A', 'Downwelling solar flux at surface', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FUS'//diag(icall),     'W/m2',  pverp, 'I', 'Shortwave upward flux', phys_decomp)
physics/rrtmg/radiation.F90:          call addfld('FDS'//diag(icall),     'W/m2',  pverp, 'I', 'Shortwave downward flux', phys_decomp)
physics/rrtmg/radiation.F90:          call addfld('FUSC'//diag(icall),    'W/m2',  pverp, 'I', 'Shortwave clear-sky upward flux', phys_decomp)
physics/rrtmg/radiation.F90:          call addfld('FDSC'//diag(icall),    'W/m2',  pverp, 'I', 'Shortwave clear-sky downward flux', phys_decomp)
physics/rrtmg/radiation.F90:          call addfld('FSNIRTOA'//diag(icall),'W/m2',  1,     'A', 'Net near-infrared flux (Nimbus-7 WFOV) at top of atmosphere', &
physics/rrtmg/radiation.F90:          call addfld('FSNRTOAC'//diag(icall),'W/m2',  1,     'A', &
physics/rrtmg/radiation.F90:          call addfld('FSNRTOAS'//diag(icall),'W/m2',  1,     'A', 'Net near-infrared flux (>= 0.7 microns) at top of atmosphere',&
physics/rrtmg/radiation.F90:          call addfld ('SWCF'//diag(icall),   'W/m2',  1,     'A', 'Shortwave cloud forcing', phys_decomp, sampling_seq='rad_lwsw')
physics/rrtmg/radiation.F90:          call addfld('QRL'//diag(icall),     'K/s',  pver, 'A', 'Longwave heating rate', phys_decomp, sampling_seq='rad_lwsw')
physics/rrtmg/radiation.F90:          call addfld('QRLC'//diag(icall),    'K/s',  pver, 'A', 'Clearsky longwave heating rate', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FLDS'//diag(icall),    'W/m2', 1,    'A', 'Downwelling longwave flux at surface', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FLDSC'//diag(icall),   'W/m2', 1,    'A', 'Clearsky Downwelling longwave flux at surface',phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FLNS'//diag(icall),    'W/m2', 1,    'A', 'Net longwave flux at surface', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FLNT'//diag(icall),    'W/m2', 1,    'A', 'Net longwave flux at top of model', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FLUT'//diag(icall),    'W/m2', 1,    'A', 'Upwelling longwave flux at top of model', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FLUTC'//diag(icall),   'W/m2', 1,    'A', 'Clearsky upwelling longwave flux at top of model', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FLNTC'//diag(icall),   'W/m2', 1,    'A', 'Clearsky net longwave flux at top of model', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('LWCF'//diag(icall),    'W/m2', 1,    'A', 'Longwave cloud forcing', phys_decomp, sampling_seq='rad_lwsw')
physics/rrtmg/radiation.F90:          call addfld('FLN200'//diag(icall),  'W/m2', 1,    'A', 'Net longwave flux at 200 mb', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FLN200C'//diag(icall), 'W/m2', 1,    'A', 'Clearsky net longwave flux at 200 mb', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FLNSC'//diag(icall),   'W/m2', 1,    'A', 'Clearsky net longwave flux at surface', phys_decomp, &
physics/rrtmg/radiation.F90:          call addfld('FUL'//diag(icall),     'W/m2', pverp,'I', 'Longwave upward flux', phys_decomp)
physics/rrtmg/radiation.F90:          call addfld('FDL'//diag(icall),     'W/m2', pverp,'I', 'Longwave downward flux', phys_decomp)
physics/rrtmg/radiation.F90:          call addfld('FULC'//diag(icall),    'W/m2', pverp,'I', 'Longwave clear-sky upward flux', phys_decomp)
physics/rrtmg/radiation.F90:          call addfld('FDLC'//diag(icall),    'W/m2', pverp,'I', 'Longwave clear-sky downward flux', phys_decomp)
physics/rrtmg/radiation.F90:    call addfld('EMIS      ',    '1   ', 1,    'I', 'Cloud longwave emissivity',phys_decomp)
physics/rrtmg/radiation.F90:       call addfld (hirsname(1),'K       ',1,'A','HIRS CH2 infra-red brightness temperature',phys_decomp)
physics/rrtmg/radiation.F90:       call addfld (hirsname(2),'K       ',1,'A','HIRS CH4 infra-red brightness temperature',phys_decomp)
physics/rrtmg/radiation.F90:       call addfld (hirsname(3),'K       ',1,'A','HIRS CH6 infra-red brightness temperature',phys_decomp)
physics/rrtmg/radiation.F90:       call addfld (hirsname(4),'K       ',1,'A','HIRS CH8 infra-red brightness temperature',phys_decomp)
physics/rrtmg/radiation.F90:       call addfld (hirsname(5),'K       ',1,'A','HIRS CH10 infra-red brightness temperature',phys_decomp)
physics/rrtmg/radiation.F90:       call addfld (hirsname(6),'K       ',1,'A','HIRS CH11 infra-red brightness temperature',phys_decomp)
physics/rrtmg/radiation.F90:       call addfld (hirsname(7),'K       ',1,'A','HIRS CH12 infra-red brightness temperature',phys_decomp)
physics/rrtmg/radiation.F90:       call addfld (msuname(1),'K       ',1,'A','MSU CH1 microwave brightness temperature',phys_decomp)
physics/rrtmg/radiation.F90:       call addfld (msuname(2),'K       ',1,'A','MSU CH2 microwave brightness temperature',phys_decomp)
physics/rrtmg/radiation.F90:       call addfld (msuname(3),'K       ',1,'A','MSU CH3 microwave brightness temperature',phys_decomp)
physics/rrtmg/radiation.F90:       call addfld (msuname(4),'K       ',1,'A','MSU CH4 microwave brightness temperature',phys_decomp)
physics/rrtmg/radiation.F90:    call addfld ('HR      ','K/s     ',pver, 'A','Heating rate needed for d(theta)/dt computation',phys_decomp)
physics/rrtmg/radiation.F90:    call addfld ('SRFRAD  ','W/m2    ',1,    'A','Net radiative flux at surface',phys_decomp)
physics/rrtmg/radiation.F90:    call addfld ('CLDFSNOW','1',pver,'I','CLDFSNOW',phys_decomp,flag_xyfill=.true.)
physics/rrtmg/cloud_diagnostics.F90:    use cam_history,   only: addfld, add_default, phys_decomp
physics/rrtmg/cloud_diagnostics.F90:    call addfld ('ICLDIWP', 'kg/m2', pver, 'A','In-cloud ice water path'               ,phys_decomp)
physics/rrtmg/cloud_diagnostics.F90:    call addfld ('ICLDTWP ','kg/m2 ',pver, 'A','In-cloud cloud total water path (liquid and ice)',phys_decomp)
physics/rrtmg/cloud_diagnostics.F90:    call addfld ('GCLDLWP ','kg/m2 ',pver, 'A','Grid-box cloud water path'             ,phys_decomp)
physics/rrtmg/cloud_diagnostics.F90:    call addfld ('TGCLDCWP','kg/m2 ',1,    'A','Total grid-box cloud water path (liquid and ice)',phys_decomp)
physics/rrtmg/cloud_diagnostics.F90:    call addfld ('TGCLDLWP','kg/m2 ',1,    'A','Total grid-box cloud liquid water path',phys_decomp)
physics/rrtmg/cloud_diagnostics.F90:    call addfld ('TGCLDIWP','kg/m2 ',1,    'A','Total grid-box cloud ice water path'   ,phys_decomp)
physics/rrtmg/cloud_diagnostics.F90:    call addfld ('CLOUD   ','fraction',pver, 'A','Cloud fraction'                        ,phys_decomp)
physics/rrtmg/cloud_diagnostics.F90:    call addfld ('CLDTOT  ','fraction',1,    'A','Vertically-integrated total cloud'     ,phys_decomp)
physics/rrtmg/cloud_diagnostics.F90:    call addfld ('CLDLOW  ','fraction',1,    'A','Vertically-integrated low cloud'       ,phys_decomp)
physics/rrtmg/cloud_diagnostics.F90:    call addfld ('CLDMED  ','fraction',1,    'A','Vertically-integrated mid-level cloud' ,phys_decomp)
physics/rrtmg/cloud_diagnostics.F90:    call addfld ('CLDHGH  ','fraction',1,    'A','Vertically-integrated high cloud'      ,phys_decomp)
physics/rrtmg/cloud_diagnostics.F90:    call addfld ('lambda_cloud','1/meter',pver,'I','lambda in cloud', phys_decomp)
physics/rrtmg/cloud_diagnostics.F90:    call addfld ('mu_cloud','1',pver,'I','mu in cloud', phys_decomp)
physics/rrtmg/cloud_diagnostics.F90:    call addfld ('dei_cloud','micrometers',pver,'I','ice radiative effective diameter in cloud', phys_decomp)
physics/rrtmg/cloud_diagnostics.F90:    call addfld ('SETLWP  ','gram/m2 ',pver, 'A','Prescribed liquid water path'          ,phys_decomp)
physics/rrtmg/cloud_diagnostics.F90:    call addfld ('LWSH    ','m       ',1,    'A','Liquid water scale height'             ,phys_decomp)
