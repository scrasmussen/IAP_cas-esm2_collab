[ccpp-table-properties]
  name = ccpp_data
  type = module
  dependencies =

[ccpp-arg-table]
  name = ccpp_data
  type = module

[cdata]
  standard_name = ccpp_t_instance
  long_name = instance of derived data type ccpp_t
  units = DDT
  dimensions = ()
  type = ccpp_t
[phys_state]
  standard_name = IAP_physics_state_instance_all_blocks
  long_name = instance of derived type physics_state for all blocks
  units = DDT
  dimensions = (ccpp_block_number_begin:ccpp_block_number_end)
  type = physics_state
[phys_state(ccpp_block_number)]
  standard_name = IAP_physics_state_instance
  long_name = instance of derived type physics_state
  units = DDT
  dimensions = ()
  type = physics_state
[phys_int_ephem]
  standard_name = IAP_physics_ephemeral_interstitial_instance_all_blocks
  long_name = instance of derived type physics_int_ephem for all blocks
  units = DDT
  dimensions = (ccpp_block_number_begin:ccpp_block_number_end)
  type = physics_int_ephem
[phys_int_ephem(ccpp_block_number)]
  standard_name = IAP_physics_ephemeral_interstitial_instance
  long_name = instance of derived type physics_int_ephem
  units = DDT
  dimensions = ()
  type = physics_int_ephem
[phys_int_pers]
  standard_name = IAP_physics_persistent_interstitial_instance_all_blocks
  long_name = instance of derived type physics_int_pers for all blocks
  units = DDT
  dimensions = (ccpp_block_number_begin:ccpp_block_number_end)
  type = physics_int_pers
[phys_int_pers(ccpp_block_number)]
  standard_name = IAP_physics_persistent_interstitial_instance
  long_name = instance of derived type physics_int_pers
  units = DDT
  dimensions = ()
  type = physics_int_pers
[phys_global]
  standard_name = IAP_physics_global_instance
  long_name = instance of derived type physics_global
  units = DDT
  dimensions = ()
  type = physics_global
[dt]
  standard_name = timestep_for_physics
  long_name = physics timestep
  units = s
  dimensions = ()
  type = real
  kind = shr_kind_r8
[ngcols]
  standard_name = horizontal_dimension
  long_name = horizontal dimension
  units = count
  dimensions = ()
  type = integer
[cam_in]
  standard_name = cam_in_t_instance
  long_name = instance of derived type cam_in_t
  units = DDT
  dimensions = (ccpp_block_number_begin:ccpp_block_number_end)
  type = cam_in_t
