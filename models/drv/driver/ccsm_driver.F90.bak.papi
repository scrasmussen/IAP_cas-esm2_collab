
program ccsm_driver


!-------------------------------------------------------------------------------
!
! Purpose: Main program for NCAR CCSM4/cpl7. Can have different
!          land, sea-ice, and ocean models plugged in at compile-time.
!          These models can be either: stub, dead, data, or active
!          components or some combination of the above.
!
!               stub -------- Do nothing.
!               dead -------- Send analytic data back.
!               data -------- Send data back interpolated from input files.
!               active ------ Prognostically simulate the given component.
!
! Method: Call appropriate initialization, run (time-stepping), and 
!         finalization routines.
! 
!-------------------------------------------------------------------------------

   !----------------------------------------------------------------------------
   ! share code & libs
   !----------------------------------------------------------------------------
   use shr_sys_mod,       only: shr_sys_abort
   use perf_mod
   use ESMF_Mod
   use ccsm_comp_mod

   implicit none

include '/work1/jjr/chenyr/papi/include/f90papi.h'
   !--------------------------------------------------------------------------
   ! Local Variables
   !--------------------------------------------------------------------------
  INTEGER (KIND=8) values(4),i
  INTEGER EventSet,ret
  REAL (KIND=8) t1,t2,tt
  integer                    :: localrc
#ifdef ESMF_INTERFACE
   character(len=ESMF_MAXSTR) :: compName
   type(ESMF_CplComp)         :: ccsmComp
#endif
  EventSet = PAPI_NULL
  ret = PAPI_VER_CURRENT
  do i = 1,4
      values(i) = -1
  enddo
  write(*,*) 'wty0',ret
  CALL PAPIF_library_init(ret)
  write(*,*) 'wty1',ret
  CALL PAPIF_create_eventset(EventSet,ret)
  write(*,*) 'wty2',ret
  CALL PAPIF_add_event(EventSet,PAPI_FP_INS,ret)
  write(*,*) 'wty2.1',ret
  CALL PAPIF_add_event(EventSet,PAPI_L1_DCH,ret) !Total L1 Data Cache hits
  write(*,*) 'wty2.2',ret
  CALL PAPIF_add_event(EventSet,PAPI_L1_DCM,ret) !Total L1 Data Cache misses
  write(*,*) 'wty2.3',ret
  CALL PAPIF_add_event(EventSet,PAPI_L1_DCA,ret) !Total L1 Data Cache access
  write(*,*) 'wty3',ret
  CALL PAPIF_start(EventSet,ret)
  write(*,*) 'wty4',ret
  CALL PAPIF_read(EventSet, values,ret)
  write(*,*) 'wty values1:',values(1)
  CALL cpu_time(t1)


   !--------------------------------------------------------------------------
   ! Setup and initialize the communications and logging.  
   !--------------------------------------------------------------------------
   call ccsm_pre_init()

   !--------------------------------------------------------------------------
   ! Initialize ESMF.  This is done outside of the ESMF_INTERFACE ifdef
   ! because it is needed for the time manager, even if the ESMF_INTERFACE
   ! is not used.
   !--------------------------------------------------------------------------
   call ESMF_Initialize()

#ifdef ESMF_INTERFACE

   !--------------------------------------------------------------------------
   ! Create the "Cap" component and set the services using the register
   ! routine.  Setting the services is where the initialize, run and 
   ! finalize routines for this component are set.
   !--------------------------------------------------------------------------
   compName = "CESM_Component"
   ccsmComp = ESMF_CplCompCreate(name=compName, rc=localrc)
   if (localrc /= 0) call shr_sys_abort('failed to create CESM Component')

   call ESMF_CplCompSetServices(ccsmComp, userRoutine=ccsm_comp_register, &
                                rc=localrc)
   if (localrc /= 0) call shr_sys_abort('failed to set services for CESM Comp')

   !--------------------------------------------------------------------------
   ! Call the initialize, run and finalize routines registered with the
   ! cap component.
   !--------------------------------------------------------------------------
   call ESMF_CplCompInitialize(ccsmComp, rc=localrc)
   if (localrc /= 0) call shr_sys_abort('failed to esmf initialize')

   call ESMF_CplCompRun(ccsmComp, rc=localrc)
   if (localrc /= 0) call shr_sys_abort('failed to esmf run')

   call ESMF_CplCompFinalize(ccsmComp, rc=localrc)
   if (localrc /= 0) call shr_sys_abort('failed to esmf finalize')

#else

   !--------------------------------------------------------------------------
   ! If ESMF is not defined, then just call the initialize, run and finalize
   ! routines directly.
   !--------------------------------------------------------------------------
   call ccsm_init()
   call ccsm_run()
   call ccsm_final()

#endif

   !--------------------------------------------------------------------------
   ! Clean-up
   !--------------------------------------------------------------------------
   call ESMF_Finalize( )
     CALL cpu_time(t2)
  write(*,*) 'wty5',ret
  CALL PAPIF_stop(EventSet, values,ret)
  write(*,*) 'wty6',ret
  write(*,*) 'wty values2:',values(1)
  write(*,*) 'wty hits:',values(2)
  write(*,*) 'wty misses:',values(3)
  write(*,*) 'wty access:',values(4)
  tt = t2 - t1
  write(*,*) 'time:',tt
  CALL PAPIF_cleanup_eventset(EventSet,ret)
  write(*,*) 'wty7',ret
  CALL PAPIF_destroy_eventset(EventSet,ret)
  write(*,*) 'wty8',ret
  CALL PAPIF_shutdown()


end program ccsm_driver
